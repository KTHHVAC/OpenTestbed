clc;
close all;
clear all;

load( '~/Downloads/calibration.mat' );

tDataset = Converter.SelectDates( tDataset, Time.GregorianDateToJulianDate(2013, 10, 31, 20, 0, 0), Time.GregorianDateToJulianDate(2013, 11, 1, 10, 0, 0) );

atCO2Signals(1) = Converter.GetSignal( tDataset, 30, 2002 );
atCO2Signals(2) = Converter.GetSignal( tDataset, 30, 1041 );
atCO2Signals(3) = Converter.GetSignal( tDataset, 30, 1042 );
atCO2Signals(4) = Converter.GetSignal( tDataset, 30, 1043 );
atCO2Signals(5) = Converter.GetSignal( tDataset, 30, 1045 );
atCO2Signals(6) = Converter.GetSignal( tDataset, 30, 1047 );
%
tAverageCO2		= Signal.Merge( atCO2Signals, 1 );
%
for iCO2Signal = 1:numel( atCO2Signals )
	%
	tDifference = tAverageCO2 - atCO2Signals(iCO2Signal);
	afCO2Offsets(iCO2Signal) = mean( tDifference.afValues );
	%
end;%
%
afCO2Offsets



atTemperatureSignals(1) = Converter.GetSignal( tDataset, 10, 2002 );
atTemperatureSignals(2) = Converter.GetSignal( tDataset, 10, 1041 );
atTemperatureSignals(3) = Converter.GetSignal( tDataset, 10, 1042 );
atTemperatureSignals(4) = Converter.GetSignal( tDataset, 10, 1043 );
atTemperatureSignals(5) = Converter.GetSignal( tDataset, 10, 1045 );
atTemperatureSignals(6) = Converter.GetSignal( tDataset, 10, 1047 );
atTemperatureSignals(7) = Converter.GetSignal( tDataset, 17, 1039 );
atTemperatureSignals(8) = Converter.GetSignal( tDataset, 10, 1052 );
atTemperatureSignals(9) = Converter.GetSignal( tDataset, 10, 1035 );
%
tAverageTemperature		= Signal.Merge( atTemperatureSignals, 1 );
%
for iTemperatureSignal = 1:numel( atTemperatureSignals )
	%
	tDifference = tAverageTemperature - atTemperatureSignals(iTemperatureSignal);
	afTemperatureOffsets(iTemperatureSignal) = mean( tDifference.afValues );
	%
end;%
%
afTemperatureOffsets








% DEBUG
% for iCO2Signal = 1:numel( atCO2Signals )
% 	%
% 	atCO2Signals(iCO2Signal).Plot();
% 	%
% end;%
% %
% tAverageCO2.Plot();


