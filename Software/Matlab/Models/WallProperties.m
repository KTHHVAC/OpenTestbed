 function [fWallHeatTransferCoefficient,fWallOutdoorActiveHeatCapacity,fWallIndoorActiveHeatCapacity] = UCtestML3(iLayersNumber,astrMaterials,afMaterialsThickness )

% UCtestML2 calculates wall resistance and active heat capacity for a given
% wall with number of layers "iLayersNumber", materials layout defined in "astrMaterials" 
% and thickness assigned in the vector "afMaterialsThickness "  
% IMPORTANT: LAYERS ORDER
% The materials layout is crucial for the calculation of the heat capacity 
% Slab layers are ordered from outdoors to indoors space,i.e the
% first material in the vector is outside and the last is inside.
% Verified against data from Consolis

% Input example
% iLayersNumber     = 3;
% astrMaterials    = {'concrete','mineral wool', 'brick'};
% afMaterialsThickness        = [0.2,0.1,0.2];


% Active Heat Capacity from indoors

for NoL = 1: iLayersNumber
  
    if strcmp(astrMaterials(1,NoL),'brick')                 == 1
            fMaterialDensity                                = 1800;
            fMaterialThermalConductivity                    = 0.62;
            fMaterialSpecificHeatCapacity                   = 840;
    elseif strcmp(astrMaterials(1,NoL), 'concrete')         == 1
            fMaterialDensity                                = 2300;
            fMaterialThermalConductivity                    = 1.7;
            fMaterialSpecificHeatCapacity                   = 1000;
    elseif strcmp(astrMaterials(1,NoL), 'aerated concrete') == 1
            fMaterialDensity                                = 500;
            fMaterialThermalConductivity                    = 0.15;
            fMaterialSpecificHeatCapacity                   = 1050;
    elseif strcmp(astrMaterials(1,NoL), 'mineral wool')     == 1
            fMaterialDensity                                = 30;
            fMaterialThermalConductivity                    = 0.036;
            fMaterialSpecificHeatCapacity                   = 1000;
    elseif strcmp(astrMaterials(1,NoL), 'air')              == 1
            fMaterialDensity                                = 1.23;
            fMaterialThermalConductivity                    = 0.025;
            fMaterialSpecificHeatCapacity                   = 1008;
    elseif strcmp(astrMaterials(1,NoL), 'plasterboard')     == 1
            fMaterialDensity                                = 900;
            fMaterialThermalConductivity                    = 0.25;
            fMaterialSpecificHeatCapacity                   = 1000;
    else error('Material not available');
    end
       
iDayPeriod          = 3600*24;                          % period, 24h [s]
fAngularVelocity    = 2*pi/iDayPeriod;                  % angular velocity,[s^(-1)]       
fa                  = fMaterialThermalConductivity/...
                    (fMaterialDensity*fMaterialSpecificHeatCapacity);
fk                  = sqrt(fAngularVelocity/(2*fa));  

% A,B,C,D calculated for the single layer

fA       = cosh(fk*afMaterialsThickness (1,NoL)*(1+1i));
fB       = -(sinh(fk*afMaterialsThickness (1,NoL)*(1+1i)))/(fMaterialThermalConductivity*fk*(1+1i));
fC       = -fMaterialThermalConductivity*fk*(1+1i)*sinh(fk*afMaterialsThickness (1,NoL)*(1+1i));
fD       = cosh(fk*afMaterialsThickness (1,NoL)*(1+1i));

    if NoL == 1
        fAA     = fA;
        fBB     = fB;
        fCC     = fC;
        fDD     = fD;
    else
        fAA     = fA * afAA(NoL-1) + fB * afCC(NoL-1);
        fBB     = fA * afBB(NoL-1) + fB * afDD(NoL-1);
        fCC     = fC * afAA(NoL-1) + fD * afCC(NoL-1); 
        fDD     = fC * afBB(NoL-1) + fD * afDD(NoL-1);
    end
      
    fLayerResistance      = afMaterialsThickness (1,NoL)/fMaterialThermalConductivity;

    afA(NoL)    = fA;
    afB(NoL)    = fB;
    afC(NoL)    = fC;
    afD(NoL)    = fD;
    
    afAA(NoL)   = fAA;
    afBB(NoL)   = fBB;
    afCC(NoL)   = fCC;
    afDD(NoL)   = fDD;
    
    afRLayerResistance(NoL)  = fLayerResistance;
    
end
    afA;
    afB;
    afC;
    afD;
    
    afAA;
    afBB;
    afCC;
    afDD;
    
    fE       = afDD(iLayersNumber)/afBB(iLayersNumber);
    fF       = afCC(iLayersNumber)-afDD(iLayersNumber)*afAA(iLayersNumber)/afBB(iLayersNumber);


fWallIndoorActiveHeatCapacity      = abs((fE+fF)/fAngularVelocity);  % Active heat capacity [J/m2K]

% Active Heat Capacity from outdoors
% material = input('insert material:  ','s');

astrMaterials               = astrMaterials(end:-1:1);
afMaterialsThickness        = afMaterialsThickness (end:-1:1);
for NoL = 1: iLayersNumber
  
    if strcmp(astrMaterials(1,NoL),'brick')                 == 1
            fMaterialDensity                                = 1800;
            fMaterialThermalConductivity                    = 0.62;
            fMaterialSpecificHeatCapacity                   = 840;
    elseif strcmp(astrMaterials(1,NoL), 'concrete')         == 1
            fMaterialDensity                                = 2300;
            fMaterialThermalConductivity                    = 1.7;
            fMaterialSpecificHeatCapacity                   = 1000;
    elseif strcmp(astrMaterials(1,NoL), 'aerated concrete') == 1
            fMaterialDensity                                = 500;
            fMaterialThermalConductivity                    = 0.15;
            fMaterialSpecificHeatCapacity                   = 1050;
    elseif strcmp(astrMaterials(1,NoL), 'mineral wool')     == 1
            fMaterialDensity                                = 30;
            fMaterialThermalConductivity                    = 0.036;
            fMaterialSpecificHeatCapacity                   = 1000;
    elseif strcmp(astrMaterials(1,NoL), 'air')              == 1
            fMaterialDensity                                = 1.23;
            fMaterialThermalConductivity                    = 0.025;
            fMaterialSpecificHeatCapacity                   = 1008;
    elseif strcmp(astrMaterials(1,NoL), 'plasterboard')     == 1
            fMaterialDensity                                = 900;
            fMaterialThermalConductivity                    = 0.25;
            fMaterialSpecificHeatCapacity                   = 1000;
    else error('Material not available');
    end

iDayPeriod          = 3600*24;                          % period, 24h [s]
fAngularVelocity    = 2*pi/iDayPeriod;                  % angular velocity,[s^(-1)]       
fa                  = fMaterialThermalConductivity/...
                    (fMaterialDensity*fMaterialSpecificHeatCapacity);
fk                  = sqrt(fAngularVelocity/(2*fa));  

% A,B,C,D calculated for the single layer

fA       = cosh(fk*afMaterialsThickness (1,NoL)*(1+1i));
fB       = -(sinh(fk*afMaterialsThickness (1,NoL)*(1+1i)))/(fMaterialThermalConductivity*fk*(1+1i));
fC       = -fMaterialThermalConductivity*fk*(1+1i)*sinh(fk*afMaterialsThickness (1,NoL)*(1+1i));
fD       = cosh(fk*afMaterialsThickness (1,NoL)*(1+1i));

    if NoL == 1
        fAA     = fA;
        fBB     = fB;
        fCC     = fC;
        fDD     = fD;
    else
        fAA     = fA * afAA(NoL-1) + fB * afCC(NoL-1);
        fBB     = fA * afBB(NoL-1) + fB * afDD(NoL-1);
        fCC     = fC * afAA(NoL-1) + fD * afCC(NoL-1); 
        fDD     = fC * afBB(NoL-1) + fD * afDD(NoL-1);
    end
      
    fLayerResistance      = afMaterialsThickness (1,NoL)/fMaterialThermalConductivity;

    afA(NoL)    = fA;
    afB(NoL)    = fB;
    afC(NoL)    = fC;
    afD(NoL)    = fD;
    
    afAA(NoL)   = fAA;
    afBB(NoL)   = fBB;
    afCC(NoL)   = fCC;
    afDD(NoL)   = fDD;
    
    afRLayerResistance(NoL)  = fLayerResistance;
    
end
    afA;
    afB;
    afC;
    afD;
    
    afAA;
    afBB;
    afCC;
    afDD;
    
    fE       = afDD(iLayersNumber)/afBB(iLayersNumber);
    fF       = afCC(iLayersNumber)-afDD(iLayersNumber)*afAA(iLayersNumber)/afBB(iLayersNumber);

fWallOutdoorActiveHeatCapacity  = abs((fE+fF)/fAngularVelocity);					% Active heat capacity [J/m2K]
fAirThermalresistance           = 0.17;                                             % Thermal resistance air layers adjacent to wall (external + internal)
fWallThermalResistance          = sum(afRLayerResistance) + fAirThermalresistance;	% Specific thermal resistance [m2/W]
fWallHeatTransferCoefficient    = 1/fWallThermalResistance;                         % Overall heat transfer coefficient [W/m2]

% Rwtest      = -real(1/(E+F));
% Cwtest      = 1/((imag(1/(E+F)))*fAngularVelocity);

 end