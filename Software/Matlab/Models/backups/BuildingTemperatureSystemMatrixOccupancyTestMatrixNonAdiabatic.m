% clc
% clear 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Building model developed and adapted by Marco Molinari, Department of
% Automatic Controls, KTH
% Ver. 2.0
% Date: 2013-09-05
% 
% This model is suitable for single zones/buildings, with the following main
% characteristics:
% * Walls are modelled as 2C3R electric components 
% * Slabs thermal mass is modelled after Johannesson (Active Thermal Capacity, LTH, 1981) 
% * No air infiltrations are considered in this version of the code
% * Air in the zone is treated as perfectly mixed
%  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% bAdiabaticWalls  = true;
% Input parameters
    % General parameters 
rho_air		= 1.2;				% Air density, [kg/m^3] 
cpa			= 1006;				% Air specific heat, [J/kgK]
hi			= 7.7;				% Indoor heat transfer coefficient (walls - room),[J/m^2K]
ho			= 25;               % Outdoor heat transfer coefficient (outdoor environment - walls),[J/m^2K]
a			= 0.7;              % Wall1 absorptance, [-]
alpha_e		= 20;				% Wall 1 heat transfer coefficient,[J/m^2K]
Ra          = 0.17;
    % Zone dimensions
W1			= 9.4;				% Width 1, [m]
W2			= 9;				% Width 2, [m]
H			= 3.2;				% Height, [m]

    % Walls 
        % Input parameters are inserted as vectors. Postions (1,1) to (1,4)
        % are relative to wall 1 to wall 4; (1,5) is relative to the
        % ceiling; (1,6) to the ground 
Aw          = [30.08,28.8,30.08,28.8,84.6,84.6];	% Wall total area (including windows), [m2]
Awin        = [2.56,0,0,0,0];                       % Wall i window area, [m2]
Owalls      = [1,0,0,0,0,0,0];                      % 1 for external walls/slabs, 0 for internal walls/slabs
% Room thermo-physical parameters
    % Wall
[Uw1,Cw1Os,Cw1Is]  = UCtestML3(1,{'aerated concrete'},[0.4]);  % Wall 1 U-value, [W/m2K], and heat capacity, [J/m2K]
[Uw2,Cw2Os,Cw2Is]  = UCtestML3(1,{'concrete'},[0.05]);                                          % Wall 2 U-value, [W/m2K], and heat capacity, [J/m2K]
[Uw3,Cw3Os,Cw3Is]  = UCtestML3(1,{'concrete'},[0.15]);                                     % Wall 3 U-value, [W/m2K], and heat capacity, [J/m2K]
[Uw4,Cw4Os,Cw4Is]  = UCtestML3(1,{'aerated concrete',},[0.3]);                                     % Wall 4 U-value, [W/m2K], and heat capacity, [J/m2K]
[Uw5,Cw5Os,Cw5Is]  = UCtestML3(3,{'concrete','air','mineral wool'},[0.2,0.35,0.015]);                                     % Wall 5 (ceiling) U-value, [W/m2K], and heat capacity, [J/m2K]
[Uw6,Cw6Os,Cw6Is]  = UCtestML3(2,{'mineral wool','concrete'},[0.9,0.15]);                   % Wall 6 (floor) U-value, [W/m2K], and heat capacity, [J/m2K]
		% Windows
Gwin		= [0.7,0.7,0.7,0.7,0.7];                                            % G-value windows (SHGC), [-]
Uwin		= [1.5,1.5,1.5,1.5,1.5];                                            % U-value windows, [W/m2K]
Rwin		= 1./(Uwin.*Awin)+Ra.*((Awin)>0);                                   % Total window thermal resistance, [K/m2]
        % Emission parameters (for [B])
A_rad		= 50;               % Radiator emission surface, [m2]
h_rad		= 8;				% Radiator heat transfer coefficient, [W/m2K]        
        % Occupancy parameters
q_pers		= 70;				% Sensible heat emitted per person, [W/pers]
q_equip		= 200;				% Sensible heat emitted by equipment per person, [W/pers]
        % PARAMETERS PROCESSING
V_room		= W1*W2*H;
m_air		= V_room*rho_air;
q_occ		= q_pers+q_equip;
        % Building geometry
ANw			= [Aw(1,1)-Awin(1,1),Aw(1,2)-Awin(1,2),Aw(1,3)-Awin(1,3),...
                Aw(1,4)-Awin(1,4),Aw(1,5)-Awin(1,5),Aw(1,6)];
        % Building thermo-physical parameters
Rw			= [1/(ANw(1,1)*Uw1), 1/(ANw(1,2)*Uw2), 1/(ANw(1,3)*Uw3),...
            1/(ANw(1,4)*Uw4), 1/(ANw(1,5)*Uw5), 1/(ANw(1,6)*Uw6)];		% Walls thermal resistance vector, [K/W]
CwO			= [Cw1Os.*ANw(1,1),Cw2Os.*ANw(1,2)/2,Cw3Os.*ANw(1,3)/2,...
                Cw4Os.*ANw(1,4)/2,Cw5Os.*ANw(1,5)/2,Cw6Os.*ANw(1,5)/2];	% Walls total heat capacity vector, [J/K]
CwI			= [Cw1Is.*ANw(1,1),Cw2Is.*ANw(1,2)/2,Cw3Is.*ANw(1,3)/2,...
            Cw4Is.*ANw(1,4)/2,Cw5Is.*ANw(1,5)/2,Cw6Is.*ANw(1,5)/2];	% Walls total heat capacity vector, [J/K]

    %               1   2   3    4    5    6     7    8    9    10   11  12  13
% x=transpose([Tr,T1wo,T1wi,T2wo,T2wi,T3wo,T3wi,T4wo,T4wi,T5wo,T5wi,T6wo,T6wi])
A			= zeros(13);
% Room node
A(1,1)		= -hi*(Aw(1,1)+Aw(1,2)+Aw(1,3)+Aw(1,4)+Aw(1,5)+Aw(1,6))/(m_air*cpa)...
            -(1/(Rwin(1,1))+...
            1/(Rwin(1,2))+...
            1/(Rwin(1,3))+...
            1/(Rwin(1,4))+...
            1/(Rwin(1,5))...
            )/(m_air*cpa);
A(1,3)		= hi*Aw(1,1)/(m_air*cpa);
A(1,5)		= hi*Aw(1,2)/(m_air*cpa);
A(1,7)		= hi*Aw(1,3)/(m_air*cpa);
A(1,9)		= hi*Aw(1,4)/(m_air*cpa);
A(1,11)		= hi*Aw(1,5)/(m_air*cpa);
A(1,13)		= hi*Aw(1,6)/(m_air*cpa);
% Wall 1
    % Outdoor wall surface
A(2,2)		=   -(ho*Aw(1,1)/CwO(1,1))...
                -(1/(Rw(1,1)*CwO(1,1)));
A(2,3)		=   1/(Rw(1,1)*CwO(1,1));
    % Indoor wall surface
A(3,1)		=   (hi*Aw(1,1))/CwI(1,1);
A(3,2)		=   1/(Rw(1,1)*CwI(1,1));
A(3,3)		=   -(hi*Aw(1,1)/CwI(1,1))...
                -(1/(Rw(1,1)*CwI(1,1)));
% Wall 2
    % Outdoor wall surface
A(4,4)		=   -(ho*Aw(1,2)/CwO(1,2))...
                -(1/(Rw(1,2)*CwO(1,2)));
A(4,5)		=   1/(Rw(1,2)*CwO(1,2));
    % Indoor wall surface
A(5,1)		=   (hi*Aw(1,2))/CwI(1,2);
A(5,4)		=   1/(Rw(1,2)*CwI(1,2));
A(5,5)		=   -(hi*Aw(1,2)/CwI(1,2))...
                -(1/(Rw(1,2)*CwI(1,2)));
% Wall 3
    % Outdoor wall surface
A(6,6)		=   -(ho*Aw(1,3)/CwO(1,3))...
                -(1/(Rw(1,3)*CwO(1,3)));
A(6,7)		=   1/(Rw(1,3)*CwO(1,3));
    % Indoor wall surface
A(7,1)		=   (hi*Aw(1,3))/CwI(1,3);
A(7,6)		=   1/(Rw(1,3)*CwI(1,3));
A(7,7)		=   -(hi*Aw(1,3)/CwI(1,3))...
                -(1/(Rw(1,3)*CwI(1,3)));
% Wall 4
    % Outdoor wall surface
A(8,8)		= -(ho*Aw(1,4)/CwO(1,4))...
              -(1/(Rw(1,4)*CwO(1,4)));
A(8,9)		= 1/(Rw(1,4)*CwO(1,4));
    % Indoor wall surface
A(9,1)		= (hi*Aw(1,4))/CwI(1,4);
A(9,8)		= 1/(Rw(1,4)*CwI(1,4));
A(9,9)		= -(hi*Aw(1,4)/CwI(1,4))...
              -(1/(Rw(1,4)*CwI(1,4)));
% Wall 5 (ceiling)
    % Outdoor wall surface
A(10,10)	= -(ho*Aw(1,5)/CwO(1,5))...
              -(1/(Rw(1,5)*CwO(1,5)));
A(10,11)	= 1/(Rw(1,5)*CwO(1,5));
    % Indoor wall surface
A(11,1)		= (hi*Aw(1,5))/CwI(1,5);
A(11,10)	= 1/(Rw(1,5)*CwI(1,5));
A(11,11)	= -(hi*Aw(1,5)/CwI(1,5))...
              -(1/(Rw(1,5)*CwI(1,5)));
% Wall 6 (floor)
    % Outdoor wall surface
A(12,12)	= -(1/(Rw(1,6)*CwO(1,6)));
A(12,13)	= 1/(Rw(1,6)*CwO(1,6));
    % Indoor wall surface
A(13,1)		= (hi*Aw(1,6))/CwI(1,6);
A(13,12)	= 1/(Rw(1,6)*CwI(1,6));
A(13,13)	= -(hi*Aw(1,6)/CwI(1,6))...
              -(1/(Rw(1,6)*CwI(1,6)));

% [B][u]
% [u]=transpose([mvent*Tsa,mvent*Troom,Tmr])
B			= zeros(13,3);
% Room node
B(1,1)		= 1/m_air;
B(1,2)		= -1/m_air;
B(1,3)		= (A_rad*h_rad)/(m_air*cpa);

% [E][w];[w] external uncontrolled variables
%                1     2    3    4    5   6  7  8  9 10    11
%[w]=transpose([Tamb,Two2,Two3,Two4,Two5,I1,I2,I3,I4,I5, Npeople])
E			= zeros(13,11);
% Room node
E(1,1)		=   1/(m_air*cpa)*(...
                1/(Rwin(1,1))+...
                1/(Rwin(1,2))+...
                1/(Rwin(1,3))+...
                1/(Rwin(1,4))+...
                1/(Rwin(1,5)));
E(1,6)		= Gwin(1,1)*Awin(1,1)/(m_air*cpa);
E(1,7)		= Gwin(1,2)*Awin(1,2)/(m_air*cpa);
E(1,8)		= Gwin(1,3)*Awin(1,3)/(m_air*cpa);
E(1,9)		= Gwin(1,4)*Awin(1,4)/(m_air*cpa);
E(1,10)		= Gwin(1,5)*Awin(1,5)/(m_air*cpa);
E(1,11)		= q_occ/(m_air*cpa);

% if bOccupancy_Test | bNoOccupancy_Test | bConstantOccupancy_Test
%     E(1,11)		= 1/(m_air*cpa);
% else
%     E(1,11)		= q_occ/(m_air*cpa);
% end
% Walls 
    % Outdoor wall 1 surface
E(2,1)		= ho*Aw(1,1)/CwO(1,1);
E(2,6)		= (ho*Aw(1,1)*a/alpha_e)/CwO(1,1);
    % Outdoor wall 2 surface
E(4,2)		= ho*Aw(1,2)/CwO(1,2);
% E(4,3)		= (ho*Aw(1,2)*a/alpha_e)/CwO(1,2);
    % Outdoor wall 3 surface
E(6,3)		= ho*Aw(1,3)/CwO(1,3);
%E(6,4)		= (ho*Aw(1,3)*a/alpha_e)/CwO(1,3);
    % Outdoor wall 4 surface
E(8,4)		= ho*Aw(1,4)/CwO(1,4);
%E(8,5)		= (ho*Aw(1,4)*a/alpha_e)/CwO(1,4);
    % Outdoor wall 5 surface
E(10,5)		= ho*Aw(1,5)/CwO(1,5);
%E(10,6)		= (ho*Aw(1,5)*a/alpha_e)/CwO(1,5);

Ac_room		= A; % Dynamic matrix
Bc_room		= B; % Input matrix
Ec_room		= E; % Disturbance matrix, with radiation data for each surface (4 walls + ceiling)

% [Ec_room_r][w];[w] external uncontrolled variables
% [Ec_room_r], reduced E matrix   

Ec_room_r	= [E(:,1),E(:,2),E(:,3),E(:,4),E(:,5),E(:,6),E(:,11)];  % Disturbance matrix