function [aafA, aafB, aafC, aafE] = LoadBuildingParametersAndBuildTemperatureMatrices( fVentilationMassFlow )
	%
	% INPUT PARAMETERS
		% General parameters 
	fAirDensity                     = 1.2;				% Air density, [kg/m^3] 
	fAirSpecificHeat                = 1006;				% Air specific heat, [J/kgK]
	fIndoorConvectionCoefficient	= 10;				% Indoor heat transfer coefficient (walls - room),[J/m^2K]
	fOutdoorConvectionCoefficient	= 25;               % Outdoor heat transfer coefficient (outdoor environment - walls),[J/m^2K]
	fWallRadiationAbsorptance		= 0.7;              % Wall1 absorptance, [-]
	fWallHeatTranferCoefficient		= 20;				% Wall 1 heat transfer coefficient,[J/m^2K]
	fStillAirThrmalResistance       = 0.17;
		% Zone dimensions
	fRoomWidth1                     = 9.4;				% Width 1, [m]
	fRoomWidth2                     = 9;				% Width 2, [m]
	fRoomHeight                     = 3.2;				% Height, [m]
		% Walls dimensions 
	% Input parameters are given as vectors. Postions (1,1) to (1,4)
	% are relative to wall 1 to wall 4; (1,5) is relative to the
	% ceiling; (1,6) to the ground 
	afWallsArea                     = [30.08,28.8,30.08,28.8,84.6,84.6];	% Wall total area (including windows), [m2]
	afWindowsArea                   = [2.56,0,0,0,0];                       % Wall i window area, [m2]
	abWallsExternality              = [1,0,0,0,0,0,0];                      % 1 for external walls/slabs, 0 for internal walls/slabs

	% ------------------------------------------------------------------------
	% Room thermo-physical parameters
	% Walls
	[	fWall1HeatTransferCoefficient,			...
		fWall1OutdoorActiveHeatCapacity,		...
		fWall1IndoorActiveHeatCapacity	] =		...
			WallProperties(						...
				1,								... 
				{'aerated concrete'},			...
				[0.4]						);      % Wall 1 U-value, [W/m2K], and heat capacity, [J/m2K]
	[   fWall2HeatTransferCoefficient,			...
		fWall2OutdoorActiveHeatCapacity,		...
		fWall2IndoorActiveHeatCapacity  ] =		...
			WallProperties(                     ...
				1,								...
				{'concrete'},					...
				[0.05]);                            % Wall 2 U-value, [W/m2K], and heat capacity, [J/m2K]
	[   fWall3HeatTransferCoefficient,			...
		fWall3OutdoorActiveHeatCapacity,		...
		fWall3IndoorActiveHeatCapacity  ] =		...
			WallProperties(                     ...
			1,									...
			{'concrete'},						...
			[0.15]);                                 % Wall 3 U-value, [W/m2K], and heat capacity, [J/m2K]
	[   fWall4HeatTransferCoefficient,			...
		fWall4OutdoorActiveHeatCapacity,		...
		fWall4IndoorActiveHeatCapacity  ] =		...
			WallProperties(                     ...
			1,									...
			{'aerated concrete',},				...
			[0.3]);                                 % Wall 4 U-value, [W/m2K], and heat capacity, [J/m2K]
	[   fWall5HeatTransferCoefficient,			...
		fWall5OutdoorActiveHeatCapacity,		...
		fWall5IndoorActiveHeatCapacity  ] =		...
			WallProperties(                     ...
			3,									...
			{'concrete','air','mineral wool'},  ...
			[0.2,0.35,0.015]);                      % Wall 5 (ceiling) U-value, [W/m2K], and heat capacity, [J/m2K]
	[   fWall6HeatTransferCoefficient,			...
		fWall6OutdoorActiveHeatCapacity,		...
		fWall6IndoorActiveHeatCapacity     ] =	...
			WallProperties(                     ...
			2,                                  ...
			{'mineral wool','concrete'},        ...
			[0.9,0.15]);                            % Wall 6 (floor) U-value, [W/m2K], and heat capacity, [J/m2K]
		% Windows
	afWindowsGvalue                 = [0.7,0.7,0.7,0.7,0.7];            % G-value windows (SHGC), [-] NB the G-value estimates the % of the solar radiation entering the room
	afWindowsUvalue                 = [1.5,1.5,1.5,1.5,1.5];            % U-value windows, [W/m2K]
	afWindowsThermalResistance		= 1./(afWindowsUvalue .* afWindowsArea) + ...
									  fStillAirThrmalResistance .*((afWindowsArea)>0);                                   % Total window thermal resistance, [K/m2]
		% Emission parameters (for [B])
	fRadiatorsEmissionArea              = 50;               % Radiator emission surface, [m2]
	fRadiatorsHeatTransferCoefficient   = 8;				% Radiator heat transfer coefficient, [W/m2K]        
		% Occupancy parameters
	fHeatEmittedPerOccupant             = 70;				% Sensible heat emitted per person, [W/pers]
	fHeatEmittedPerOccupantByEquipement	= 200;				% Sensible heat emitted by equipment per person, [W/pers]

	% PARAMETERS PROCESSING
	fRoomVolume                     = fRoomWidth1 * fRoomWidth2 * fRoomHeight;
	fRoomAirMass                    = fRoomVolume * fAirDensity;
	fTotalInternalGainsPerOccupant	= fHeatEmittedPerOccupant + fHeatEmittedPerOccupantByEquipement;

	% Building geometry
	afWallsNetArea                  = [afWallsArea(1,1) - afWindowsArea(1,1),...
									   afWallsArea(1,2) - afWindowsArea(1,2),...
									   afWallsArea(1,3) - afWindowsArea(1,3),...
									   afWallsArea(1,4) - afWindowsArea(1,4),...
									   afWallsArea(1,5) - afWindowsArea(1,5),...
									   afWallsArea(1,6)];

	% Building thermo-physical parameters
	afWallsThermalResistance			= ...
		[	1/(fWall1HeatTransferCoefficient * afWallsNetArea(1,1)),...
			1/(fWall2HeatTransferCoefficient * afWallsNetArea(1,2)),...
			1/(fWall3HeatTransferCoefficient * afWallsNetArea(1,3)),...
			1/(fWall4HeatTransferCoefficient * afWallsNetArea(1,4)),...
			1/(fWall5HeatTransferCoefficient * afWallsNetArea(1,5)),...
			1/(fWall6HeatTransferCoefficient * afWallsNetArea(1,6))];    % Walls thermal resistance vector, [K/W]
	%
	afWallsOutdoorActiveHeatCapacity	=...
		[	   fWall1OutdoorActiveHeatCapacity * afWallsNetArea(1,1),  ... notice that the /2 is here not needed
			   fWall2OutdoorActiveHeatCapacity * afWallsNetArea(1,2) / 2,...
			   fWall3OutdoorActiveHeatCapacity * afWallsNetArea(1,3) / 2,...
			   fWall4OutdoorActiveHeatCapacity * afWallsNetArea(1,4) / 2,...
			   fWall5OutdoorActiveHeatCapacity * afWallsNetArea(1,5) / 2,...
			   fWall6OutdoorActiveHeatCapacity * afWallsNetArea(1,6) / 2];   % Walls total outdoor heat capacity vector, [J/K]
	afWallsIndoorActiveHeatCapacity     =... 			
		[      fWall1IndoorActiveHeatCapacity  * afWallsNetArea(1,1),...
			   fWall2IndoorActiveHeatCapacity  * afWallsNetArea(1,2) / 2,...
			   fWall3IndoorActiveHeatCapacity  * afWallsNetArea(1,3) / 2,...
			   fWall4IndoorActiveHeatCapacity  * afWallsNetArea(1,4) / 2,...
			   fWall5IndoorActiveHeatCapacity  * afWallsNetArea(1,5) / 2,...
			   fWall6IndoorActiveHeatCapacity  * afWallsNetArea(1,5) / 2];  % Walls total indoor heat capacity vector, [J/K]

	% MATRICES BUILD-UP
		%               1   2   3    4    5    6     7    8    9    10   11  12  13
	% x=transpose([Tr,T1wo,T1wi,T2wo,T2wi,T3wo,T3wi,T4wo,T4wi,T5wo,T5wi,T6wo,T6wi])
	A			= zeros(13);
	% Room node
	A(1,1)		=											...
		-													...
		(													...
			fIndoorConvectionCoefficient					...
			*												...
			(												...
					afWallsArea(1,1)						...
				+	afWallsArea(1,2)						...
				+	afWallsArea(1,3)						...
				+	afWallsArea(1,4)						...
				+	afWallsArea(1,5)						...
				+	afWallsArea(1,6)						...
			)												...
			/												...
			(												...
					fRoomAirMass							...
				*	fAirSpecificHeat						...
			)												...
		)													...
		-													...
		(													...
			(												...
					(1/afWindowsThermalResistance(1,1))		...
				+	(1/afWindowsThermalResistance(1,2))		...
				+	(1/afWindowsThermalResistance(1,3))		...
				+	(1/afWindowsThermalResistance(1,4))		...
				+	(1/afWindowsThermalResistance(1,5))		...
			)												...
			/												...
			(												...
					fRoomAirMass							...
				*	fAirSpecificHeat						...
			)												...
		);
	%
	A(1,3)		= fIndoorConvectionCoefficient * afWallsArea(1,1)/(fRoomAirMass*fAirSpecificHeat);
	A(1,5)		= fIndoorConvectionCoefficient * afWallsArea(1,2)/(fRoomAirMass*fAirSpecificHeat);
	A(1,7)		= fIndoorConvectionCoefficient * afWallsArea(1,3)/(fRoomAirMass*fAirSpecificHeat);
	A(1,9)		= fIndoorConvectionCoefficient * afWallsArea(1,4)/(fRoomAirMass*fAirSpecificHeat);
	A(1,11)		= fIndoorConvectionCoefficient * afWallsArea(1,5)/(fRoomAirMass*fAirSpecificHeat);
	A(1,13)		= fIndoorConvectionCoefficient * afWallsArea(1,6)/(fRoomAirMass*fAirSpecificHeat);

	% Wall 1
		% External wall surface

	A(2,2)		=  -(fOutdoorConvectionCoefficient      * afWallsArea(1,1) / afWallsOutdoorActiveHeatCapacity(1,1))...
				   -(1/(afWallsThermalResistance(1,1)   * afWallsOutdoorActiveHeatCapacity(1,1)));
	A(2,3)		=    1/(afWallsThermalResistance(1,1)   * afWallsOutdoorActiveHeatCapacity(1,1));
		% Internal wall surface
	A(3,1)		=   (fIndoorConvectionCoefficient       * afWallsArea(1,1)) / afWallsIndoorActiveHeatCapacity(1,1);
	A(3,2)		=    1/(afWallsThermalResistance(1,1)   * afWallsIndoorActiveHeatCapacity(1,1));
	A(3,3)		=  -(fIndoorConvectionCoefficient       * afWallsArea(1,1) / afWallsIndoorActiveHeatCapacity(1,1))...
				   -(1/(afWallsThermalResistance(1,1)   * afWallsIndoorActiveHeatCapacity(1,1)));
	% Wall 2
		% External wall surface
	A(4,4)		=  -(fOutdoorConvectionCoefficient      * afWallsArea(1,2)/afWallsOutdoorActiveHeatCapacity(1,2))...
				   -(1/(afWallsThermalResistance(1,2)   * afWallsOutdoorActiveHeatCapacity(1,2)));
	A(4,5)		=    1/(afWallsThermalResistance(1,2)   * afWallsOutdoorActiveHeatCapacity(1,2));
		% Internal wall surface
	A(5,1)		=   (fIndoorConvectionCoefficient       * afWallsArea(1,2))/afWallsIndoorActiveHeatCapacity(1,2);
	A(5,4)		=    1/(afWallsThermalResistance(1,2)   * afWallsIndoorActiveHeatCapacity(1,2));
	A(5,5)		=  -(fIndoorConvectionCoefficient       * afWallsArea(1,2)/afWallsIndoorActiveHeatCapacity(1,2))...
				   -(1/(afWallsThermalResistance(1,2)   * afWallsIndoorActiveHeatCapacity(1,2)));
	% Wall 3
		% External wall surface

	A(6,6)		=  -(fOutdoorConvectionCoefficient      * afWallsArea(1,3)/afWallsOutdoorActiveHeatCapacity(1,3))...
				   -(1/(afWallsThermalResistance(1,3)   * afWallsOutdoorActiveHeatCapacity(1,3)));
	A(6,7)		=    1/(afWallsThermalResistance(1,3)   * afWallsOutdoorActiveHeatCapacity(1,3));
		% Internal wall surface
	A(7,1)		=   (fIndoorConvectionCoefficient       * afWallsArea(1,3))/afWallsIndoorActiveHeatCapacity(1,3);
	A(7,6)		=    1/(afWallsThermalResistance(1,3)   * afWallsIndoorActiveHeatCapacity(1,3));
	A(7,7)		=  -(fIndoorConvectionCoefficient       * afWallsArea(1,3)/afWallsIndoorActiveHeatCapacity(1,3))...
				   -(1/(afWallsThermalResistance(1,3)   * afWallsIndoorActiveHeatCapacity(1,3)));
	% Wall 4
		% External wall surface
	A(8,8)		=	-(fOutdoorConvectionCoefficient      * afWallsArea(1,4)/afWallsOutdoorActiveHeatCapacity(1,4))...
					-(1/(afWallsThermalResistance(1,4)   * afWallsOutdoorActiveHeatCapacity(1,4)));
	A(8,9)		=    1/(afWallsThermalResistance(1,4)   * afWallsOutdoorActiveHeatCapacity(1,4));
		% Internal wall surface
	A(9,1)		=   (fIndoorConvectionCoefficient       * afWallsArea(1,4))/afWallsIndoorActiveHeatCapacity(1,4);
	A(9,8)		=    1/(afWallsThermalResistance(1,4)   * afWallsIndoorActiveHeatCapacity(1,4));
	A(9,9)		=  -(fIndoorConvectionCoefficient       * afWallsArea(1,4)/afWallsIndoorActiveHeatCapacity(1,4))...
				   -(1/(afWallsThermalResistance(1,4)   * afWallsIndoorActiveHeatCapacity(1,4)));
	% Wall 5 (ceiling)
		% External wall surface
	A(10,10)	=  -(fOutdoorConvectionCoefficient      * afWallsArea(1,5)/afWallsOutdoorActiveHeatCapacity(1,5))...
				   -(1/(afWallsThermalResistance(1,5)   * afWallsOutdoorActiveHeatCapacity(1,5)));

	A(10,11)	=    1/(afWallsThermalResistance(1,5)   * afWallsOutdoorActiveHeatCapacity(1,5));
		% Internal wall surface
	A(11,1)		=  (fIndoorConvectionCoefficient        * afWallsArea(1,5))/afWallsIndoorActiveHeatCapacity(1,5);
	A(11,10)	=    1/(afWallsThermalResistance(1,5)   * afWallsIndoorActiveHeatCapacity(1,5));
	A(11,11)	=  -(fIndoorConvectionCoefficient       * afWallsArea(1,5)/afWallsIndoorActiveHeatCapacity(1,5))...
				   -(1/(afWallsThermalResistance(1,5)   * afWallsIndoorActiveHeatCapacity(1,5)));
	% Wall 6 (floor)
		% External wall surface
	A(12,12)	=  -(1/(afWallsThermalResistance(1,6)   * afWallsOutdoorActiveHeatCapacity(1,6)));
	A(12,13)	=    1/(afWallsThermalResistance(1,6)   * afWallsOutdoorActiveHeatCapacity(1,6));
		% Internal wall surface
	A(13,1)		=  (fIndoorConvectionCoefficient        * afWallsArea(1,6))/afWallsIndoorActiveHeatCapacity(1,6);
	A(13,12)	=    1/(afWallsThermalResistance(1,6)   * afWallsIndoorActiveHeatCapacity(1,6));
	A(13,13)	=  -(fIndoorConvectionCoefficient       * afWallsArea(1,6)/afWallsIndoorActiveHeatCapacity(1,6))...
				   -(1/(afWallsThermalResistance(1,6)   * afWallsIndoorActiveHeatCapacity(1,6)));

	% % [B][u]
	% % [u]=transpose([mvent*Tsa,mvent*Troom,Tmr])
	% B			= zeros(13,3);
	% % Room node
	% B(1,1)		= 1/fRoomAirMass;
	% B(1,2)		= -1/fRoomAirMass;
	% B(1,3)		= (fRadiatorsEmissionArea*fRadiatorsHeatTransferCoefficient)/(fRoomAirMass*fAirSpecificHeat);

	% [B][u]
	% [u]=transpose([DeltaTh, DeltaTc, UhAdd, UcAdd ,DeltaTmr])
	B			= zeros(13,5);
	% Room node
	B(1,1)		=  (fVentilationMassFlow);
	B(1,2)		= -(fVentilationMassFlow);
	B(1,3)		=  1;
	B(1,4)		= -1;
	B(1,5)		= (fRadiatorsEmissionArea*fRadiatorsHeatTransferCoefficient)/(fAirSpecificHeat);

	B           = 1/fRoomAirMass * B; 

	% [E][w];[w] external uncontrolled variables
	%                1     2    3    4    5   6  7  8  9 10    11
	%[w]=transpose([Tamb,Two2,Two3,Two4,Two5,I1,I2,I3,I4,I5, Npeople])
	E			= zeros(13,11);
	% Room node
	E(1,1)		=   1/(fRoomAirMass*fAirSpecificHeat)*(...
					1/(afWindowsThermalResistance(1,1))+...
					1/(afWindowsThermalResistance(1,2))+...
					1/(afWindowsThermalResistance(1,3))+...
					1/(afWindowsThermalResistance(1,4))+...
					1/(afWindowsThermalResistance(1,5)));
	E(1,6)		= afWindowsGvalue(1,1)*afWindowsArea(1,1)/(fRoomAirMass*fAirSpecificHeat);
	E(1,7)		= afWindowsGvalue(1,2)*afWindowsArea(1,2)/(fRoomAirMass*fAirSpecificHeat);
	E(1,8)		= afWindowsGvalue(1,3)*afWindowsArea(1,3)/(fRoomAirMass*fAirSpecificHeat);
	E(1,9)		= afWindowsGvalue(1,4)*afWindowsArea(1,4)/(fRoomAirMass*fAirSpecificHeat);
	E(1,10)		= afWindowsGvalue(1,5)*afWindowsArea(1,5)/(fRoomAirMass*fAirSpecificHeat);
	E(1,11)		= fTotalInternalGainsPerOccupant/(fRoomAirMass*fAirSpecificHeat);

	% if bOccupancy_Test | bNoOccupancy_Test | bConstantOccupancy_Test
	%     E(1,11)		= 1/(fRoomAirMass*fAirSpecificHeat);
	% else
	%     E(1,11)		= fTotalInternalGainsPerOccupant/(fRoomAirMass*fAirSpecificHeat);
	% end
	% Walls 
		% Outdoor wall 1 surface
	E(2,1)		=  fOutdoorConvectionCoefficient*afWallsArea(1,1)/afWallsOutdoorActiveHeatCapacity(1,1);
	E(2,6)		= (fOutdoorConvectionCoefficient*afWallsArea(1,1)*fWallRadiationAbsorptance/fWallHeatTranferCoefficient)/afWallsOutdoorActiveHeatCapacity(1,1);
		% Outdoor wall 2 surface
	E(4,2)		=  fOutdoorConvectionCoefficient*afWallsArea(1,2)/afWallsOutdoorActiveHeatCapacity(1,2);
	% E(4,3)	= (fOutdoorConvectionCoefficient*afWallsArea(1,2)*fWallRadiationAbsorptance/fWallHeatTranferCoefficient)/afWallsOutdoorActiveHeatCapacity(1,2);
		% Outdoor wall 3 surface
	E(6,3)		=  fOutdoorConvectionCoefficient*afWallsArea(1,3)/afWallsOutdoorActiveHeatCapacity(1,3);
	%E(6,4)		= (fOutdoorConvectionCoefficient*afWallsArea(1,3)*fWallRadiationAbsorptance/fWallHeatTranferCoefficient)/afWallsOutdoorActiveHeatCapacity(1,3);
		% Outdoor wall 4 surface
	E(8,4)		=  fOutdoorConvectionCoefficient*afWallsArea(1,4)/afWallsOutdoorActiveHeatCapacity(1,4);
	%E(8,5)		= (fOutdoorConvectionCoefficient*afWallsArea(1,4)*fWallRadiationAbsorptance/fWallHeatTranferCoefficient)/afWallsOutdoorActiveHeatCapacity(1,4);
		% Outdoor wall 5 surface
	E(10,5)		=  fOutdoorConvectionCoefficient*afWallsArea(1,5)/afWallsOutdoorActiveHeatCapacity(1,5);
	%E(10,6)	= (fOutdoorConvectionCoefficient*afWallsArea(1,5)*fWallRadiationAbsorptance/fWallHeatTranferCoefficient)/afWallsOutdoorActiveHeatCapacity(1,5);

	C           = [1 zeros(1,12)];

	aafA		= A; % Dynamic matrix
	aafB		= B; % Input matrix
	aafE		= E; % Disturbance matrix, with radiation data for each surface (4 walls + ceiling)
	aafC		= C; %     

	% [Ec_room_r][w];[w] external uncontrolled variables
	% [Ec_room_r], reduced E matrix   

	aafE		= [E(:,1),E(:,2),E(:,3),E(:,4),E(:,5),E(:,6),E(:,11)];  % Disturbance matrix
	%
end %
