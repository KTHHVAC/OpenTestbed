function BuildSecondaryTimers( tClockManager )
	%
	global tCO2Controller;
	global tTemperatureController;
	global tAirConditionedPIController;
	%
	%Line including the PI radiator controller
	global tRadiatorPIController; 
	%
	global tCO2ControllerRoomA235;
	global tTemperatureControllerRoomA235;
	global tAirConditionedPIControllerRoomA235;
	global tTCPConnection;
	global strRoom;
	%
	try %		
		%
		if(		strcmp(tClockManager.strRunningController,'DeterministicMPC')	...
			||	strcmp(tClockManager.strRunningController,'RandomizedMPC')		)
		%
			if strcmp(strRoom, 'A225')
				%
				tClockManager.atControllerTimers{1} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				  tAirConditionedPIController, tTCPConnection },																	...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIController } },																					...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIController } },																					...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIController } },																					...
					'Period',			tAirConditionedPIController.fSamplingTimeInSeconds,																									...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
								%
		                % Lines including the PI radiator controller
		                tClockManager.atControllerTimers{2} = timer(																						...
		                    'TimerFcn',			{@Controller.RunRadiatorPIController,			 tRadiatorPIController, tTCPConnection},...
		                    'ErrorFcn',			{@Controller.OnError,							{tRadiatorPIController} },				...
		                    'StartFcn',			{@Controller.OnStart,							{tRadiatorPIController} },				...
		                    'StopFcn',			{@Controller.OnExitNoTCPClose,					{tRadiatorPIController} },				...
		                    'Period',			tRadiatorPIController.fSamplingTimeInSeconds,											...
		                    'ExecutionMode',	'fixedRate',																			...
		                    'BusyMode',			'drop'																					);
		                %
		                %
				tClockManager.atControllerTimers{3} = timer(																																...
					'TimerFcn',			{@Controller.Run,				  tCO2Controller, tTemperatureController , tAirConditionedPIController, tRadiatorPIController, tTCPConnection },							...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2Controller, tTemperatureController } },																		...
					'StartFcn',			{@Controller.OnStart,			{ tCO2Controller, tTemperatureController } },																		...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2Controller, tTemperatureController } },																		...
					'Period',			tCO2Controller.fSamplingTimeInSeconds,																												...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
			elseif strcmp(strRoom, 'A235')
				%
				tClockManager.atControllerTimers{1} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				 tAirConditionedPIControllerRoomA235, tTCPConnection },																...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIControllerRoomA235 } },																			...
					'Period',			tAirConditionedPIControllerRoomA235.fSamplingTimeInSeconds,																							...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{2} = timer(																																...
					'TimerFcn',			{@Controller.RunRoomA235,		  tCO2ControllerRoomA235, tTemperatureControllerRoomA235 , tAirConditionedPIControllerRoomA235, tTCPConnection },	...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StartFcn',			{@Controller.OnStart,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'Period',			tCO2ControllerRoomA235.fSamplingTimeInSeconds,																										...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
			elseif strcmp(strRoom, 'A225A235')
				%
				tClockManager.atControllerTimers{1} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				  tAirConditionedPIController, tTCPConnection },																	...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIController } },																					...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIController } },																					...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIController } },																					...
					'Period',			tAirConditionedPIController.fSamplingTimeInSeconds,																									...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{2} = timer(																																...
					'TimerFcn',			{@Controller.Run,				  tCO2Controller, tTemperatureController , tAirConditionedPIController, tRadiatorPIController, tTCPConnection },							...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2Controller, tTemperatureController } },																		...
					'StartFcn',			{@Controller.OnStart,			{ tCO2Controller, tTemperatureController } },																		...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2Controller, tTemperatureController } },																		...
					'Period',			tCO2Controller.fSamplingTimeInSeconds,																												...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{3} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				 tAirConditionedPIControllerRoomA235, tTCPConnection },																...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIControllerRoomA235 } },																			...
					'Period',			tAirConditionedPIControllerRoomA235.fSamplingTimeInSeconds,																							...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{4} = timer(																											...
					'TimerFcn',			{@Controller.RunRoomA235,		  tCO2ControllerRoomA235, tTemperatureControllerRoomA235 , tAirConditionedPIControllerRoomA235, tTCPConnection },	...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StartFcn',			{@Controller.OnStart,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'Period',			tCO2ControllerRoomA235.fSamplingTimeInSeconds,																										...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
			end
			%
			%
		elseif(	strcmp(tClockManager.strRunningController,'ExplicitMPC') )
			%
			if strcmp(strRoom, 'A225')
				%
				tClockManager.atControllerTimers{1} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				  tAirConditionedPIController, tTCPConnection },																	...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIController } },																					...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIController } },																					...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIController } },																					...
					'Period',			tAirConditionedPIController.fSamplingTimeInSeconds,																									...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
								%
		                % Lines including the PI radiator controller
		                tClockManager.atControllerTimers{2} = timer(																						...
		                    'TimerFcn',			{@Controller.RunRadiatorPIController,			 tRadiatorPIController, tTCPConnection},...
		                    'ErrorFcn',			{@Controller.OnError,							{tRadiatorPIController} },				...
		                    'StartFcn',			{@Controller.OnStart,							{tRadiatorPIController} },				...
		                    'StopFcn',			{@Controller.OnExitNoTCPClose,					{tRadiatorPIController} },				...
		                    'Period',			tRadiatorPIController.fSamplingTimeInSeconds,											...
		                    'ExecutionMode',	'fixedRate',																			...
		                    'BusyMode',			'drop'																					);
		                %
		                %
				tClockManager.atControllerTimers{3} = timer(																																...
					'TimerFcn',			{@Controller.RunExpExplicit,	  tCO2Controller, tTemperatureController , tAirConditionedPIController, tRadiatorPIController, tTCPConnection },							...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2Controller, tTemperatureController } },																		...
					'StartFcn',			{@Controller.OnStart,			{ tCO2Controller, tTemperatureController } },																		...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2Controller, tTemperatureController } },																		...
					'Period',			tCO2Controller.fSamplingTimeInSeconds,																												...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
			elseif strcmp(strRoom, 'A235')
				%
				tClockManager.atControllerTimers{1} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				  tAirConditionedPIControllerRoomA235, tTCPConnection },															...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIControllerRoomA235 } },																			...
					'Period',			tAirConditionedPIControllerRoomA235.fSamplingTimeInSeconds,																							...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{2} = timer(																																...
					'TimerFcn',			{@Controller.RunExpExplicit,	  tCO2ControllerRoomA235, tTemperatureControllerRoomA235 , tAirConditionedPIControllerRoomA235, tRadiatorPIController, tTCPConnection },	...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StartFcn',			{@Controller.OnStart,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'Period',			tCO2ControllerRoomA235.fSamplingTimeInSeconds,																										...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
			elseif strcmp(strRoom, 'A225A235')
				%
				tClockManager.atControllerTimers{1} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				  tAirConditionedPIController, tTCPConnection },																	...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIController } },																					...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIController } },																					...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIController } },																					...
					'Period',			tAirConditionedPIController.fSamplingTimeInSeconds,																									...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{2} = timer(																																...
					'TimerFcn',			{@Controller.RunExpExplicit,	  tCO2Controller, tTemperatureController , tAirConditionedPIController, tRadiatorPIController, tTCPConnection },							...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2Controller, tTemperatureController } },																		...
					'StartFcn',			{@Controller.OnStart,			{ tCO2Controller, tTemperatureController } },																		...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2Controller, tTemperatureController } },																		...
					'Period',			tCO2Controller.fSamplingTimeInSeconds,																												...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{3} = timer(																																...
					'TimerFcn',			{@Controller.RunPI,				  tAirConditionedPIControllerRoomA235, tTCPConnection },															...
					'ErrorFcn',			{@Controller.OnError,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StartFcn',			{@Controller.OnStart,			{ tAirConditionedPIControllerRoomA235 } },																			...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tAirConditionedPIControllerRoomA235 } },																			...
					'Period',			tAirConditionedPIControllerRoomA235.fSamplingTimeInSeconds,																							...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
				tClockManager.atControllerTimers{4} = timer(																																...
					'TimerFcn',			{@Controller.RunExpExplicit,	  tCO2ControllerRoomA235, tTemperatureControllerRoomA235 , tAirConditionedPIControllerRoomA235, tRadiatorPIController, tTCPConnection },	...
					'ErrorFcn',			{@Controller.OnError,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StartFcn',			{@Controller.OnStart,			{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'StopFcn',			{@Controller.OnExitNoTCPClose,	{ tCO2ControllerRoomA235, tTemperatureControllerRoomA235 } },														...
					'Period',			tCO2ControllerRoomA235.fSamplingTimeInSeconds,																										...
					'ExecutionMode',	'fixedRate',																																		...
					'BusyMode',			'drop'																																				);
				%
			end
			%
		elseif(	strcmp(tClockManager.strRunningController,'AkademiskaHC') )
			%
			tClockManager.atControllerTimers = [];
			%
		else%
			%
			error('Wrong controller selection');	
			%
		end%;	% end else
		%
	catch exception
		%
		disp(exception.message);
		fprintf('Error starting the secondary timers.');
		%
	end;% catch
	%
end %
