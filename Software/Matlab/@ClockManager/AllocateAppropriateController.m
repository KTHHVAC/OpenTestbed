function AllocateAppropriateController( tClockManager )
	%
	global tCO2Controller;
	global tTemperatureController;
	global tAirConditionedPIController;
	global tCO2ControllerRoomA235;
	global tTemperatureControllerRoomA235;
	global tAirConditionedPIControllerRoomA235;
	global strRoom;
	%
	try %
		%
		%
		if( strcmp( tClockManager.strRunningController,'DeterministicMPC') )
			%
			if strcmp(strRoom, 'A225')
				%
				tCO2ControllerParameters						= Controller.LoadDeterministicCO2MPCParameters();
				tCO2Controller									= Controller.DeterministicCO2MPC( tCO2ControllerParameters );
				tTemperatureControllerParameters				= Controller.LoadDeterministicTemperatureMPCParameters();
				tTemperatureController							= Controller.DeterministicTemperatureMPC( tTemperatureControllerParameters );
				tAirConditionedPIControllerParameters			= Controller.LoadAirConditionedPIControllerParameters();
				tAirConditionedPIController						= Controller.AirConditionedPIController( tAirConditionedPIControllerParameters );
				%
			elseif strcmp(strRoom, 'A235')
				%
				tCO2ControllerParametersRoomA235				= Controller.LoadDeterministicCO2MPCParametersRoomA235();
				tCO2ControllerRoomA235							= Controller.DeterministicCO2MPC( tCO2ControllerParametersRoomA235 );
				tTemperatureControllerParametersRoomA235		= Controller.LoadDeterministicTemperatureMPCParametersRoomA235();
				tTemperatureControllerRoomA235					= Controller.DeterministicTemperatureMPC( tTemperatureControllerParametersRoomA235 );
				tAirConditionedPIControllerParametersRoomA235	= Controller.LoadAirConditionedPIControllerParametersRoomA235();
				tAirConditionedPIControllerRoomA235				= Controller.AirConditionedPIController( tAirConditionedPIControllerParametersRoomA235 );
				%
			elseif strcmp(strRoom, 'A225A235')
				%
				tCO2ControllerParameters						= Controller.LoadDeterministicCO2MPCParameters();
				tCO2Controller									= Controller.DeterministicCO2MPC( tCO2ControllerParameters );
				tTemperatureControllerParameters				= Controller.LoadDeterministicTemperatureMPCParameters();
				tTemperatureController							= Controller.DeterministicTemperatureMPC( tTemperatureControllerParameters );
				tAirConditionedPIControllerParameters			= Controller.LoadAirConditionedPIControllerParameters();
				tAirConditionedPIController						= Controller.AirConditionedPIController( tAirConditionedPIControllerParameters );
				%
				tCO2ControllerParametersRoomA235				= Controller.LoadDeterministicCO2MPCParametersRoomA235();
				tCO2ControllerRoomA235							= Controller.DeterministicCO2MPC( tCO2ControllerParametersRoomA235 );
				tTemperatureControllerParametersRoomA235		= Controller.LoadDeterministicTemperatureMPCParametersRoomA235();
				tTemperatureControllerRoomA235					= Controller.DeterministicTemperatureMPC( tTemperatureControllerParametersRoomA235 );
				tAirConditionedPIControllerParametersRoomA235	= Controller.LoadAirConditionedPIControllerParametersRoomA235();
				tAirConditionedPIControllerRoomA235				= Controller.AirConditionedPIController( tAirConditionedPIControllerParametersRoomA235 );
				%
			end
			%
			% ---------------------------------------------------
		elseif( strcmp( tClockManager.strRunningController,'RandomizedMPC') ) 
			%
			if strcmp(strRoom, 'A225')
				%
				tCO2ControllerParameters						= Controller.LoadStochasticCO2MPCParameters();
				tCO2Controller									= Controller.StochasticCO2MPC( tCO2ControllerParameters );
				tTemperatureControllerParameters				= Controller.LoadStochasticTemperatureMPCParameters();
				tTemperatureController							= Controller.StochasticTemperatureMPC( tTemperatureControllerParameters );
				tAirConditionedPIControllerParameters			= Controller.LoadAirConditionedPIControllerParameters();
				tAirConditionedPIController						= Controller.AirConditionedPIController( tAirConditionedPIControllerParameters );
				%
			elseif strcmp(strRoom, 'A235')
				%
				tCO2ControllerParametersRoomA235				= Controller.LoadStochasticCO2MPCParametersRoomA235();
				tCO2ControllerRoomA235							= Controller.StochasticCO2MPC( tCO2ControllerParametersRoomA235 );
				tTemperatureControllerParametersRoomA235		= Controller.LoadStochasticTemperatureMPCParametersRoomA235();
				tTemperatureControllerRoomA235					= Controller.StochasticTemperatureMPC( tTemperatureControllerParametersRoomA235 );
				tAirConditionedPIControllerParametersRoomA235	= Controller.LoadAirConditionedPIControllerParametersRoomA235();
				tAirConditionedPIControllerRoomA235				= Controller.AirConditionedPIController( tAirConditionedPIControllerParametersRoomA235 );
				%
			elseif strcmp(strRoom, 'A225A235')
				%
				tCO2ControllerParameters						= Controller.LoadStochasticCO2MPCParameters();
				tCO2Controller									= Controller.StochasticCO2MPC( tCO2ControllerParameters );
				tTemperatureControllerParameters				= Controller.LoadStochasticTemperatureMPCParameters();
				tTemperatureController							= Controller.StochasticTemperatureMPC( tTemperatureControllerParameters );
				tAirConditionedPIControllerParameters			= Controller.LoadAirConditionedPIControllerParameters();
				tAirConditionedPIController						= Controller.AirConditionedPIController( tAirConditionedPIControllerParameters );
				%
				tCO2ControllerParametersRoomA235				= Controller.LoadStochasticCO2MPCParametersRoomA235();
				tCO2ControllerRoomA235							= Controller.StochasticCO2MPC( tCO2ControllerParametersRoomA235 );
				tTemperatureControllerParametersRoomA235		= Controller.LoadStochasticTemperatureMPCParametersRoomA235();
				tTemperatureControllerRoomA235					= Controller.StochasticTemperatureMPC( tTemperatureControllerParametersRoomA235 );
				tAirConditionedPIControllerParametersRoomA235	= Controller.LoadAirConditionedPIControllerParametersRoomA235();
				tAirConditionedPIControllerRoomA235				= Controller.AirConditionedPIController( tAirConditionedPIControllerParametersRoomA235 );
				%
			end
			%
			% ---------------------------------------------------
		elseif( strcmp( tClockManager.strRunningController,'ExplicitMPC') ) 
			%
			if strcmp(strRoom, 'A225')
				%
				tCO2ControllerParameters						= Controller.LoadExperimentalExplicitCO2MPCParameters();
				tCO2Controller									= Controller.ExperimentalExplicitCO2MPC( tCO2ControllerParameters );
				tTemperatureControllerParameters				= Controller.LoadExperimentalExplicitTemperatureMPCParameters();
				tTemperatureController							= Controller.ExperimentalExplicitTemperatureMPC( tTemperatureControllerParameters );
				tAirConditionedPIControllerParameters			= Controller.LoadAirConditionedPIControllerParameters();
				tAirConditionedPIController						= Controller.AirConditionedPIController( tAirConditionedPIControllerParameters );
				%
			elseif strcmp(strRoom, 'A235')
				%
				tCO2ControllerParametersRoomA235				= Controller.LoadExperimentalExplicitCO2MPCParametersRoomA235();
				tCO2ControllerRoomA235							= Controller.ExperimentalExplicitCO2MPC( tCO2ControllerParametersRoomA235 );
				tTemperatureControllerParametersRoomA235		= Controller.LoadExperimentalExplicitTemperatureMPCParametersRoomA235();
				tTemperatureControllerRoomA235					= Controller.ExperimentalExplicitTemperatureMPC( tTemperatureControllerParametersRoomA235 );
				tAirConditionedPIControllerParametersRoomA235	= Controller.LoadAirConditionedPIControllerParametersRoomA235();
				tAirConditionedPIControllerRoomA235				= Controller.AirConditionedPIController( tAirConditionedPIControllerParametersRoomA235 );
				%
			elseif strcmp(strRoom, 'A225A235')
				%
				tCO2ControllerParameters						= Controller.LoadExperimentalExplicitCO2MPCParameters();
				tCO2Controller									= Controller.ExperimentalExplicitCO2MPC( tCO2ControllerParameters );
				tTemperatureControllerParameters				= Controller.LoadExperimentalExplicitTemperatureMPCParameters();
				tTemperatureController							= Controller.ExperimentalExplicitTemperatureMPC( tTemperatureControllerParameters );
				tAirConditionedPIControllerParameters			= Controller.LoadAirConditionedPIControllerParameters();
				tAirConditionedPIController						= Controller.AirConditionedPIController( tAirConditionedPIControllerParameters );
				%
				tCO2ControllerParametersRoomA235				= Controller.LoadExperimentalExplicitCO2MPCParametersRoomA235();
				tCO2ControllerRoomA235							= Controller.ExperimentalExplicitCO2MPC( tCO2ControllerParametersRoomA235 );
				tTemperatureControllerParametersRoomA235		= Controller.LoadExperimentalExplicitTemperatureMPCParametersRoomA235();
				tTemperatureControllerRoomA235					= Controller.ExperimentalExplicitTemperatureMPC( tTemperatureControllerParametersRoomA235 );
				tAirConditionedPIControllerParametersRoomA235	= Controller.LoadAirConditionedPIControllerParametersRoomA235();
				tAirConditionedPIControllerRoomA235				= Controller.AirConditionedPIController( tAirConditionedPIControllerParametersRoomA235 );
				%
			end
			%
			% ---------------------------------------------------
		elseif( strcmp( tClockManager.strRunningController,'AkademiskaHC') )  
			%
			% ---------------------------------------------------
		else
			error('Wrong controller selection');
			%	
			%
		end;% end if
		%
	catch exception
		%
		disp(exception.message);
		fprintf('Error starting the secondary timers.\n');
		%
	end;% catch
	%
end %
