% function	fDegreeHour =							...
% 				ComputeDegreeHourFromTemperatureSignal(	...
% 					atRoomTemperatureSignals,			...
% 					fUpperBound,						...
% 					fLowerBound							)
%
function	fDegreeHour =							...
				ComputeDegreeHourFromTemperatureSignal(	...
					atRoomTemperatureSignals,			...
					fUpperBound,						...
					fLowerBound							)
	%
	% TODO implement also the case with faulty on the lower bound
	%
	% room temperatures averaging
	tAverageRoomTemperature = atRoomTemperatureSignals(1).Copy();
	%
	for iRoomTemperatureSignal = 2:numel(atRoomTemperatureSignals);
		%
		tAverageRoomTemperature = tAverageRoomTemperature + atRoomTemperatureSignals(iRoomTemperatureSignal);
		%
	end;%
	%
	tAverageRoomTemperature = tAverageRoomTemperature / numel(atRoomTemperatureSignals);
	%
	% compute the mixed air inlet temperature
	for iTimeSample = 1:numel( tAverageRoomTemperature.afTimes )
		%
		tAverageRoomTemperature.afValues(iTimeSample) = tAverageRoomTemperature.afValues(iTimeSample) - fUpperBound;
		%
		if ( tAverageRoomTemperature.afValues(iTimeSample) < 0 )
			%
			tAverageRoomTemperature.afValues(iTimeSample) = 0;
			%
		end;%
		%
	end;%
	%
	fDegreeHour = tAverageRoomTemperature.IntegrateBetween( tAverageRoomTemperature.afTimes(1),		...
															tAverageRoomTemperature.afTimes(end),	...
															'Hours' );
	%
end % function

