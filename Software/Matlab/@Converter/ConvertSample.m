function ConvertSample(	tRoom,				...
						iSignalID,			...
						iDeviceID,			...
						fValue,				...
						fTime				)
	%
	iSignalIndex = tRoom.GetSignalIndex( iSignalID, iDeviceID );
	%
	if(  numel( tRoom.atSignals ) < iSignalIndex  )
		%
		% to prevent the constructor to erase the previously allocated objects
		% we save them in a temporary array that we restore later on
		if( iSignalIndex > 1 )
			%
			atTemporarySignals = tRoom.atSignals;
			%
		end;%
		%
		tRoom.atSignals = Signal(iSignalIndex);
		%
		% set the information relative to the current signal
		tRoom.atSignals(iSignalIndex).strDescription = ...
			Signal.GetDescription( iSignalID, iDeviceID );
		%
		% restore the previous signals
		if( iSignalIndex > 1 )
			%
			tRoom.atSignals(1:iSignalIndex-1) = atTemporarySignals;
			%
		end;%
		%
		% save the information about the current signal
		tRoom.atSignals(iSignalIndex).iSignalID	= iSignalID;
		tRoom.atSignals(iSignalIndex).iDeviceID = iDeviceID;
		%
		tRoom.atSignals(iSignalIndex).SetInvalidDataMarker();
		%
	end;%
	%
	tRoom.atSignals(iSignalIndex).Insert( fValue, fTime, false );
	%
	% DEBUG
% 	fprintf('ConvertSample(): number of signals at end of method: %d\n', numel( tRoom.atSignals ));
	%
end %
