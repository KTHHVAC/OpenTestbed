% function tNewDataset = SelectRooms( tDataset, aiListOfRoomsIDs )
%
function tNewDataset = SelectRooms( tDataset, aiListOfRoomsIDs )
	%
	tNewDataset.afSignalsTimes = tDataset.afSignalsTimes;
	%
	tNewDataset.aafSignalsValues				= [];
	tNewDataset.aiSignalsIDs					= [];
	tNewDataset.astrSignalsDescriptions			= [];
	tNewDataset.aiDevicesIDs					= [];
	tNewDataset.aiSignalsRoomsIDs				= [];
	tNewDataset.astrSignalsRoomsDescriptions	= [];
	tNewDataset.aafSignalsPositions				= [];
	%
	for iSignal = 1:numel( tDataset.aiSignalsIDs )
		%
		if( sum( tDataset.aiSignalsRoomsIDs(iSignal) == aiListOfRoomsIDs ) > 0 )
			%
			tNewDataset.aafSignalsValues				= [tNewDataset.aafSignalsValues,				tDataset.aafSignalsValues(:, iSignal)];
			tNewDataset.aiSignalsIDs					= [tNewDataset.aiSignalsIDs,					tDataset.aiSignalsIDs(:, iSignal)];
			tNewDataset.astrSignalsDescriptions			= [tNewDataset.astrSignalsDescriptions,			tDataset.astrSignalsDescriptions(:, iSignal)];
			tNewDataset.aiDevicesIDs					= [tNewDataset.aiDevicesIDs,					tDataset.aiDevicesIDs(:, iSignal)];
			tNewDataset.aiSignalsRoomsIDs				= [tNewDataset.aiSignalsRoomsIDs,				tDataset.aiSignalsRoomsIDs(:, iSignal)];
			tNewDataset.astrSignalsRoomsDescriptions	= [tNewDataset.astrSignalsRoomsDescriptions,	tDataset.astrSignalsRoomsDescriptions(:, iSignal)];
			tNewDataset.aafSignalsPositions				= [tNewDataset.aafSignalsPositions,				tDataset.aafSignalsPositions(:, iSignal)];
			%
		end;% signal is valid
		%
	end;% cycle
	%
end %
