%%  VariantKron( aaafA, iNumberOfTimes) is the variant kronecker product with 
%	eye(iNumberOfTimes) and the matrices contained in aaafA
% 
% Outputs :
%			- aafA			 =	the resulting matrix, obtained replicating 
%								aaafA(:,:,k) for each k in [1,NumberOfTimes]
%								on the diagonals
% Inputs  :	
%			- aaafA			 =	a 3-dimensional matrix containing the values of aaf 
%								for each step time
%			- iNumberOfTimes =	an integer that determines the number of
%								blocks on the resulting matrices. This number has to 
%								be set in accord to the number of matrices
%								in aaafA
% 

function [ aafA, aafB ] = VariantSubDiagonalAndVector( aaafA )
	%
	% get size of the matrix for each step
	%
	iRowSizeA		= size(aaafA,1);
	iColumnSizeA	= size(aaafA,2);
	iNumberOfTimes	= size(aaafA,3);
	%
	%
	% inizialize the resulting matrix
	%
	aafA = zeros(iRowSizeA * iNumberOfTimes, iColumnSizeA * iNumberOfTimes);
	%
	aafB = zeros(iRowSizeA * iNumberOfTimes, iColumnSizeA);
	aafB(1:iRowSizeA,:) = aaafA(:,:,1);
	%
	for iTimeStep = 1:iNumberOfTimes-1
		%
		%
		aafA(	1 +	 iTimeStep		* iRowSizeA		: (iTimeStep + 1)	* iRowSizeA,	... 
				1 + (iTimeStep-1)	* iColumnSizeA	:  iTimeStep		* iColumnSizeA)	...
			=																			...
				aaafA(:,:,iTimeStep + 1 );
		%
		%
	end;%
	%
end %

