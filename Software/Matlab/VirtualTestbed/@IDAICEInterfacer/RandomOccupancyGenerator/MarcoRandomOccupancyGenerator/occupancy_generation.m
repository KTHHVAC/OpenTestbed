close all 
clear all
clc
%
%%
% assume the room can be occupied between 8am and 6pm --->  10 hours
HoursOccupied = 10;
% unoccupied time:  14 hours
SamplingTime = 5;   % in minutes
%
NoOfDays = 1;
%
% number of samples per day for occupied hours:
NoOfSamplesOccupied = HoursOccupied*60/SamplingTime;  
%
% number of samples per day for unoccupied hours:
NoOfSamplesUnoccupied = (24-HoursOccupied)*60/SamplingTime;
%
disp(['The number of samples is ',num2str(NoOfSamplesUnoccupied+NoOfSamplesOccupied )])
% maximum occupancy
DeltaO_max = 5;
O_max      = 20;
%
afO = [];
%
% pdf of DeltaO
for k = 0:DeltaO_max
    P(k+1) = 1/(0.03+k);
end
P_n = [P(end:-1:2) P];
P_n = P_n/sum(P_n);
%
stem(-DeltaO_max:1:DeltaO_max,P_n)
%
%
for iDayNumber = 1: NoOfDays
    %
    % initial condition
    afOPerDay = zeros(1,NoOfSamplesOccupied+NoOfSamplesUnoccupied) ;
    %
    for k = 1:NoOfSamplesOccupied
        Delta(k) = AcceptanceRejection(P_n)-(DeltaO_max+1);
        if (Delta(k) < 0 && abs(Delta(k)) > afOPerDay(k))
            afOPerDay(k+1) = afOPerDay(k);
        else
            afOPerDay(k+1) = min(O_max, afOPerDay(k) + Delta(k));
        end
    end
    %
    afO = [afO afOPerDay];
end
figure
stairs(afO)
%% write in a required format
% 
 
 afTimes = 0: SamplingTime/ 60 :  24;
 
  afTimes(2) = []
 
 disp(['the number of samples is ',num2str(size(afTimes,2))])

    fid = fopen('times.txt', 'w');
 	fprintf(fid, '%.0f %.0f %.0f %.0f %.0f \n', afTimes );
%     fwrite(fid,afOPerDay,'*char')
	fclose(fid);

	fid = fopen('values.txt', 'w');
 	fprintf(fid, '%.0f %.0f %.0f %.0f %.0f \n', afO );
%     fwrite(fid,afOPerDay,'*char')
	fclose(fid);