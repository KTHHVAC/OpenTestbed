function [	iNumberOfDays,						...
			iNumberOfSamplesPerDay,				...
			iPeriodStart,						...
			iPeriodEnd,							...
			afTimes,							...
			afValues,							...
			aiDays,								...
			aiMonths,							...
			aiYears					] =	 		...
				GetInformationFromSignal(		...
					tSignal,					...
					iNumberOfSamplesPerDay,		...
					bIsSignalPiecewiseConstant	)
	%
	% find the time span in number of days
	iNumberOfDays = tSignal.GetNumberOfFullDays();
	%
	% get the indexes of the midnights
	aiMidnightsIndexes = tSignal.FindMidnights();
	%
	% sanity check
	if( numel(aiMidnightsIndexes) - 1 ~= iNumberOfDays )
		%
		error('inconsistent number of days and midnights');
		%
	end;%
	%
	%
	% -------------------------------------------------------------------------------------
	% get the various information on the whole signal
	strPeriodStart	= Time.JulianDateToString_YYYYMMDD( tSignal.afTimes(1) ){1};
	strPeriodEnd	= Time.JulianDateToString_YYYYMMDD( tSignal.afTimes(end) ){1};
	strPeriodStart(end-3:end)	= '0101';
	strPeriodEnd(end-3:end)		= '1231';
	iPeriodStart	= str2num(strPeriodStart);
	iPeriodEnd		= str2num(strPeriodEnd);
	%
	%
	% -------------------------------------------------------------------------------------
	% allocate the vectors 'one datum per day' that will be returned by the method
	aiYears			= Time.JulianDateToYear( tSignal.afTimes(aiMidnightsIndexes(1)) );
	aiMonths		= Time.JulianDateToMonth( tSignal.afTimes(aiMidnightsIndexes(1)) );
	aiDays			= Time.JulianDateToDayOfMonth( tSignal.afTimes(aiMidnightsIndexes(1)) );
	%
	% fill the information one datum per day
	for iDay = 2:iNumberOfDays;
		%
		aiYears			= [aiYears; Time.JulianDateToYear( tSignal.afTimes(aiMidnightsIndexes(iDay)) )];
		aiMonths		= [aiMonths; Time.JulianDateToMonth( tSignal.afTimes(aiMidnightsIndexes(iDay)) )];
		aiDays			= [aiDays; Time.JulianDateToDayOfMonth( tSignal.afTimes(aiMidnightsIndexes(iDay)) )];
		%
	end;%
	%
	% insert the default value (-1)
	aiYears			= [aiYears; -1];
	aiMonths		= [aiMonths; -1];
	aiDays			= [aiDays; -1];
	%
	%
	% -------------------------------------------------------------------------------------
	% get the information on the samples of the various days
	[ afValues, afHours ] =									...
		IDAICEInterfacer.GetSamplesInformationFromSignal(	...
			tSignal,										...
			iNumberOfSamplesPerDay,							...
			bIsSignalPiecewiseConstant						);
	%
	% insert the default values
	afValues		= [ afValues; zeros( iNumberOfSamplesPerDay, 1 ) ];
	afTimes			= [ afHours; 0; 24 * ones( iNumberOfSamplesPerDay - 1, 1 ) ];
	%
end % function

