classdef IDAICEInterfacer < handle
	%
	% ---------------------------------------------------------------------
	properties
		%
		%
	end % properties
	%
	%
	% ---------------------------------------------------------------------
	methods
		%
		%
	end % normal methods
	%
	%
	% ---------------------------------------------------------------------
	methods(Static = true)
		%
		GenerateLispFileFromTemplate(				...
			strTemplateFilePath,					...
			strResultsFilePath,						...
			atSignals,								...
			acstrModulesNames,						...
			iNumberOfSamplesPerSignalPerDay			);
		%
		RewriteModuleInLispFile(					...
			strFilepath,							...
			tSignal,								...
		   	cstrModuleName,							...
			iNumberOfSamplesPerDay					);
		%
		RewriteSumboduleInLispFile(					...
			strFilepath,							...
			cstrSubmoduleName,						...
			cstrModuleName,							...
			afValues,								...
			bAreValuesIntegersAndNotFloats			);
		%
		[	iStartIndex,							...
			iEndIndex		] =						...
				FindStartAndEndIndexesOfModule(		...
					acFile,							...
					cstrModuleName					);
		%
		[	iStartIndex,							...
			iEndIndex		] =						...
				FindStartAndEndIndexesOfSubmodule(	...
					acFile,							...
					cstrSubmoduleName,				...
					cstrModuleName					);
		%
		[	iNumberOfDays,							...
			iNumberOfSamplesPerDay,					...
			iPeriodStart,							...
			iPeriodEnd,								...
			afTimes,								...
			afValues,								...
			aiDays,									...
			aiMonths,								...
			aiYears			] = 					...
				GetInformationFromSignal(			...
					tSignal,						...
					iNumberOfSamplesPerDay			);
		%
		%
		tOccupancySignal = GenerateRandomOccupancySignal( fPoissonProcessRateInMinutes, iNumberOfDays );
		%
	end	% static methods
	%
	%
end % classdef

