classdef IDAICEInterfacer < handle
	%
	% ---------------------------------------------------------------------
	properties
		%
		%
	end % properties
	%
	%
	% ---------------------------------------------------------------------
	methods
		%
		%
	end % normal methods
	%
	%
	% ---------------------------------------------------------------------
	methods(Static = true)
		%
		GenerateLispFileFromTemplate(				...
			strTemplateFilePath,					...
			strResultsFilePath,						...
			atSignals,								...
			abAreSignalsPiecewiseConstant,			...
			acstrModulesNames,						...
			iNumberOfSamplesPerSignalPerDay,		...
			fRequestedTimeGranularityForIDALogFiles	);
		%
		RewriteModuleInLispFile(					...
			strFilepath,							...
			tSignal,								...
			bIsSignalPiecewiseConstant,				...
		   	cstrModuleName,							...
			iNumberOfSamplesPerDay					);
		%
		acFile = 									...
			RewriteSubmoduleInLispFile(				...
				acFile,								...
				cstrSubmoduleName,					...
				iModuleStartIndex,					...
				iModuleEndIndex, 					...
				afValues,							...
				bAreValuesIntegersAndNotFloats		);
		%
		[	iStartIndex,							...
			iEndIndex		] =						...
				FindStartAndEndIndexesOfModule(		...
					acFile,							...
					cstrModuleName,					...
					bPrependPrefixToModuleName,		... optional
					iInitialRow						);% optional
		%
		[	iStartIndex,							...
			iEndIndex		] =						...
				FindStartAndEndIndexesOfSubmodule(	...
					acFile,							...
					cstrSubmoduleName,				...
					iModuleStartIndex,				...
					iModuleEndIndex					);
		%
		[	iNumberOfDays,							...
			iNumberOfSamplesPerDay,					...
			iPeriodStart,							...
			iPeriodEnd,								...
			afTimes,								...
			afValues,								...
			aiDays,									...
			aiMonths,								...
			aiYears			] = 					...
				GetInformationFromSignal(			...
					tSignal,						...
					iNumberOfSamplesPerDay,			...
					bIsSignalPiecewiseConstant		);
		%
		RewriteIntegrationTimes(					...
			strFilepath,							...
			fInitialJulianDate,						...
			fFinalJulianDate						);
		%
		RewriteOutTimes(							...
			strFilepath,							...
			fInitialJulianDate,						...
			fFinalJulianDate,						...
			fRequestedTimeGranularityForIDALogFiles	);% in tenths of hours
		%
		tOccupancySignal =						...
			GenerateRandomOccupancySignal(		...
				fPoissonProcessRateInMinutes,	...
				iNumberOfDays,					...
				fStartingDateInJulianDates		);% optional
		%
	end	% static methods
	%
	%
end % classdef

