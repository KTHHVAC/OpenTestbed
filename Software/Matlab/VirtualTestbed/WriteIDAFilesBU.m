
addpath '../'

% parameters
strOriginalFilePath						= '@IDAICEInterfacer/LispFiles/ida_lisp.ida';
strResultsFilePath						= 'ida_lisp_new.ida';
fRequestedTimeGranularityForIDALogFiles = 0.0167;
%
iNumberOfSamplesPerSignalPerDay			= 10;
bConsiderSignalsAsPiecewiseConstant		= true;
iNumberOfDays							= 2;
fOccupancyVariationsIntensity			= 60; % in minutes
%
tOccupancySignal						= IDAICEInterfacer.GenerateRandomOccupancySignal(	...
	fOccupancyVariationsIntensity,															...
	iNumberOfDays,																			...
	Time.GregorianDateToJulianDate( 2014, 11, 27, 0, 0, 0)									);
cstrOccupancyModuleName					= {'Schedule_3'};
cstrOccupancyModuleName2				= {'Schedule_2'};
%
tMainVentilationLevelsSignal			= Signal.ImportFromFormattedTxt(	...
	'@IDAICEInterfacer/SignalsInTxt/main_ventilation_levels.txt',			...
	bConsiderSignalsAsPiecewiseConstant										);
cstrMainVentilationLevelsModuleName		= {'Sched_AHU'};
%
tLocalVentilationLevelsSignal			= Signal.ImportFromFormattedTxt(	...
	'@IDAICEInterfacer/SignalsInTxt/local_ventilation_levels.txt',			...
	bConsiderSignalsAsPiecewiseConstant										);
cstrLocalVentilationLevelsModuleName	= {'Schedule_1'};


% % DEBUG
% tOccupancySignal.Plot();
% tMainVentilationLevelsSignal.Plot();
% tLocalVentilationLevelsSignal.Plot();


% format the information in a convenient way
atSignals				=	[												...
								tOccupancySignal,							...
								tOccupancySignal,							...
								tMainVentilationLevelsSignal,				...
								tLocalVentilationLevelsSignal,				...
							];
abAreSignalsPiecewiseConstant	=	[										...
								bConsiderSignalsAsPiecewiseConstant,		...
								bConsiderSignalsAsPiecewiseConstant,		...
								bConsiderSignalsAsPiecewiseConstant,		...
								bConsiderSignalsAsPiecewiseConstant,		...
							];
acstrModulesNames		=	[												...
								cstrOccupancyModuleName,					...
								cstrOccupancyModuleName2,					...
								cstrMainVentilationLevelsModuleName,		...
								cstrLocalVentilationLevelsModuleName,		...
							];


% write the lisp file
IDAICEInterfacer.GenerateLispFileFromTemplate(	...
	strOriginalFilePath,						...
	strResultsFilePath,							...
	atSignals,									...
	abAreSignalsPiecewiseConstant,				...
	acstrModulesNames,							...
	iNumberOfSamplesPerSignalPerDay,			...
	fRequestedTimeGranularityForIDALogFiles		);


% DEBUG
fprintf('Lisp file generated successfully.\n');

