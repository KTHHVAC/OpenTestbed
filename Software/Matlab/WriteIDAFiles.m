
% parameters
strOriginalFilePath							= '@IDAICEInterfacer/ida_lisp.ida';
strResultsFilePath							= 'ida_lisp_new.ida';
%
iInitialRowOfTimesColForOccupancy			= 
iFinalRowOfValuesColForOccupancy			= 
iInitialRowOfTimesColForMainVentilation		= 
iFinalRowOfValuesColForMainVentilation		= 
iInitialRowOfTimesColForLocalVentilation	= 
iFinalRowOfValuesColForLocalVentilation		= 
%
iNumberOfSamplesPerSignalPerDay				= 10;

tOccupancySignal				= IDAICEInterfacer.GenerateRandomOccupancySignal( 60, 5 );
tMainVentilationLevelsSignal	= Signal.ImportFromFormattedTxt( '@IDAICEInterfacer/local_ventilation_levels.txt' );
tLocalVentilationLevelsSignal	= Signal.ImportFromFormattedTxt( '@IDAICEInterfacer/main_ventilation_levels.txt' );

% % DEBUG
% tOccupancySignal.Plot();
% tMainVentilationLevelsSignal.Plot();
% tLocalVentilationLevelsSignal.Plot();

% format the information in a convenient way
atSignals				=	[												...
								tOccupancySignal,							...
								tMainVentilationLevelsSignal,				...
								tLocalVentilationLevelsSignal,				...
							];
aiInitialRowsIndexes	=	[												...
								iInitialRowOfTimesColForOccupancy,			...
								iInitialRowOfTimesColForMainVentilation,	...
								iInitialRowOfTimesColForLocalVentilation,	...
							];
aiFinalRowsIndexes		=	[												...
								iFinalRowOfValuesColForOccupancy,			...
								iFinalRowOfValuesColForMainVentilation,		...
								iFinalRowOfValuesColForLocalVentilation,	...
							];

IDAICEInterfacer.GenerateLispFile(				...
	strOriginalFilePath,						...
	strResultsFilePath,							...
	atSignals,									...
	aiInitialRowsIndexes,						...
	aiFinalRowsIndexes,							...
	iNumberOfSamplesPerSignalPerDay				);


