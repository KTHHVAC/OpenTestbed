function [	afIncidentDirectRadiations,					... % [ W / m2 ]
			afIncidentDiffuseRadiations,				...	% [ W / m2 ]
			afIncidentReflectedRadiations,				...	% [ W / m2 ]
			afTotalIncidentRadiations		] =			...	% [ W / m2 ]
				ComputeIncidentRadiationsOnJulianDates(	...
					tEnvelope,							...
					afCurrentJulianDates,				...
					afCurrentExtraterrestialRadiations,	...
					afCurrentC1s,						...
					afCurrentC2s						)
	%
	%
	% initialization
	afIncidentDirectRadiations		= 0;
	afIncidentDiffuseRadiations		= 0;
	afIncidentReflectedRadiations	= 0;
	afTotalIncidentRadiations 		= 0;
	%
	%
	%
	% -----------------------------------------------------------------
	% floor
	[	afCurrentIncidentDirectRadiations,								...
		afCurrentIncidentDiffuseRadiations,								...
		afCurrentIncidentReflectedRadiations,							...
		afCurrentTotalIncidentRadiations		] =						...
			tEnvelope.tFloor.ComputeIncidentRadiationsOnJulianDates(	...
				afCurrentJulianDates,									...
				afCurrentExtraterrestialRadiations,						...
				afCurrentC1s,											...
				afCurrentC2s											);
	%
	afIncidentDirectRadiations		= afIncidentDirectRadiations	+ afCurrentIncidentDirectRadiations;
	afIncidentDiffuseRadiations		= afIncidentDiffuseRadiations	+ afCurrentIncidentDiffuseRadiations;
	afIncidentReflectedRadiations	= afIncidentReflectedRadiations	+ afCurrentIncidentReflectedRadiations;
	afTotalIncidentRadiations 		= afTotalIncidentRadiations		+ afCurrentTotalIncidentRadiations;
	%
	%
	%
	% -----------------------------------------------------------------
	% roof
	[	afCurrentIncidentDirectRadiations,							...
		afCurrentIncidentDiffuseRadiations,							...
		afCurrentIncidentReflectedRadiations,						...
		afCurrentTotalIncidentRadiations		] =					...
			tEnvelope.tRoof.ComputeIncidentRadiationsOnJulianDates(	...
				afCurrentJulianDates,								...
				afCurrentExtraterrestialRadiations,					...
				afCurrentC1s,										...
				afCurrentC2s										);
	%
	afIncidentDirectRadiations		= afIncidentDirectRadiations	+ afCurrentIncidentDirectRadiations;
	afIncidentDiffuseRadiations		= afIncidentDiffuseRadiations	+ afCurrentIncidentDiffuseRadiations;
	afIncidentReflectedRadiations	= afIncidentReflectedRadiations	+ afCurrentIncidentReflectedRadiations;
	afTotalIncidentRadiations 		= afTotalIncidentRadiations		+ afCurrentTotalIncidentRadiations;
	%
	%
	%
	% -----------------------------------------------------------------
	% walls 
	for iWall = 1:numel( tEnvelope.atWalls )
		%
		[	afCurrentIncidentDirectRadiations,										...
			afCurrentIncidentDiffuseRadiations,										...
			afCurrentIncidentReflectedRadiations,									...
			afCurrentTotalIncidentRadiations		] =								...
				tEnvelope.atWalls(iWall).ComputeIncidentRadiationsOnJulianDates(	...
					afCurrentJulianDates,											...
					afCurrentExtraterrestialRadiations,								...
					afCurrentC1s,													...
					afCurrentC2s													);
		%
		afIncidentDirectRadiations		= afIncidentDirectRadiations	+ afCurrentIncidentDirectRadiations;
		afIncidentDiffuseRadiations		= afIncidentDiffuseRadiations	+ afCurrentIncidentDiffuseRadiations;
		afIncidentReflectedRadiations	= afIncidentReflectedRadiations	+ afCurrentIncidentReflectedRadiations;
		afTotalIncidentRadiations 		= afTotalIncidentRadiations		+ afCurrentTotalIncidentRadiations;
		%
	end;%
	%
	%
end % function

