function tSignal = GetMeasuredRadiationSignal( tConverter, afJulianDates )
	%
	% construct the roof
	tRoof = PhysicalModels.HorizontalRoof(							...
								tConverter.fLatitudeInDegrees,		...
								tConverter.fLongitudeInDegrees,		...
								tConverter.fTimeZoneInHours,		...
								false								);
	%
	% get the auxiliary signals
	[	afExtraterrestialRadiations,									...
		afC1s,															...
		afC2s						] =									...
			PhysicalModels.GetAuxiliarySignalsForComputingRadiations(	...
				afJulianDates											);
	%
	% compute the radiations
	[	afIncidentDirectRadiations,								... % [ W / m2 ]
		afIncidentDiffuseRadiations,							...	% [ W / m2 ]
		afIncidentReflectedRadiations,							...	% [ W / m2 ]
		afTotalIncidentRadiations		] =						...	% [ W / m2 ]
			tRoof.ComputeIncidentRadiationsOnJulianDates(		...
				afJulianDates,									...
				afExtraterrestialRadiations,					...
				afC1s,											...
				afC2s											);
	%
	% convert them into a Signal()
	tSignalsIDs = Signal.GetSignalsIDs();
	tDevicesIDs = Signal.GetDevicesIDs();
	%
	tSignal = Signal();
	tSignal.Set(											...
		tDevicesIDs.iSLBWeatherForecast,					...
		tSignalsIDs.iExternalLightingTop,					...
		afTotalIncidentRadiations,							...
		afJulianDates,										...
	   	0,													...
	   	0,													...
	   	0													);
	%
end % function

