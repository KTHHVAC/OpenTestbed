% SinElevSun := COS(Lat*deg2rad)*COS(Declination)*COS(Omega)
%                + SIN(Lat*deg2rad)*SIN(Declination);
% 
%    ElevSun := ASIN(SinElevSun)*rad2deg;
% 
% /* Azimuth angle of Sun, counted positive westward from South.
%    It will thus be negative if solar time is less than 12.
%    Cf ASHRAE Fundamentals Chapter 27 */
% 
%    CosAzimSun = (SinElevSun*SIN(Lat*deg2rad) - SIN(Declination))
%                  /(COS(ElevSun*deg2rad)*COS(Lat*deg2rad));
% 
%    AzimutSun := IF CosAzimSun < -1 THEN
%                  180
%                ELSE_IF CosAzimSun > 1 THEN
%                  0
%                ELSE_IF (SolarTime < 12) THEN
%                  (-ACOS(CosAzimSun)*rad2deg)
%                ELSE
%                  ACOS(CosAzimSun)*rad2deg
%                END_IF;
%
classdef SkyCoverToRadiancyConverter < handle
	%
	% ---------------------------------------------------------------------
	properties
		%
		% Look up table of the maximal solar radiations, build in the constructor
		aiHoursInAYear;
		afMaximalSolarRadiation; % watts / m^2
		%
	end %
	%
	%
	% ---------------------------------------------------------------------
	methods
		%
		% standard constructor
		function tConverter = SkyCoverToRadiancyConverter()
			%
			
% Radiation model
h = 1:24;
tConverter.aiHoursInAYear= 1:8760;
time=repmat(h,1,365)';
w=24;
u=365;
v=repmat(1:u,[w 1]);
n=v(:);

% time=[1:200];
% n=time;
% ht=time;
RadSto=load('RadSto.txt');
Idir=RadSto(1:8760,1);
Idiff=RadSto(1:8760,2);
rad2deg=360/(2*pi);
deg2rad=(2*pi)/360;
%calculation of the sun coordinates

% parameters

rho_g=0.2;                                       % ground albedo, [-]
phi = 60;                                        % latitude, [deg]
%beta =90;                                        % angle between the tilted surface and the horizontal plane - ground -, [deg]. 90 for vertical walls, 0 for horizontal slabs. 
gamma = 0;                                       % azimuth angle of the surface,[deg]. 0 for south facing, negative for west facing and positive for east facing.  

%processed parameters
phi_rad=phi*2*pi/360;                             % [radians]
%beta_rad = beta*2*pi/360;                        % [radians]
gamma_rad =gamma*2*pi/360;

%calculated parameters
delta=23.45*sin(2*pi*(284+n)/365);               % solar declination of the nth day of the year, [deg]
omega=15*(time-12);                              % solar hour angle at the moment t, [deg]. t in hours!

%calculated parameters in radians
omega_rad=omega*2*pi/360;                        % solar declination of the nth day of the year, [radians]
delta_rad=delta*2*pi/360;                        % solar declination of the nth day of the year, [radians]

% Solar radiation variables
u_z=sin(phi_rad).*sin(delta_rad)+cos(phi_rad).*cos(delta_rad).*cos(omega_rad);
u_w=cos(delta_rad).*sin(omega_rad);

for i=[1:8760]
if  cos(omega_rad(i))> tan(delta_rad(i))./tan(phi_rad); 
    u_s(i)= (1-u_z(i).^2-u_w(i).^2).^(1/2);
 else
     u_s(i)= -(1-u_z(i).^2-u_w(i).^2).^(1/2);
 end
end
u_s=u_s';

beta_rad= asin(u_z);                                    % solar height
beta=beta_rad*rad2deg;
for i=[1:8760]
if u_s(i)>0;
    psi_rad(i)=asin(u_w(i)./cos(beta_rad(i)));                    % psi = solar azimuth
 else
    psi_rad(i)=pi-asin(u_w(i)./cos(beta_rad(i)));
 end
end
%psi_rad=asin(u_w./cos(beta_rad)); 
% Gathering of the solar radiation data
% INSERT HERE THE CODE!!

% Surface radiation variables 
% Facade 1

psi_surf1=0;                                            % 0= south [degrees]
psi_surf1_rad=psi_surf1*deg2rad;
chi_surf1=90;                                            % surface slope; 90 if vertical
chi_surf1_rad=chi_surf1*deg2rad;

u_z_surf1=cos(chi_surf1_rad);
u_w_surf1=sin(psi_surf1_rad).*sin(chi_surf1_rad);
u_s_surf1=cos(psi_surf1_rad).*sin(chi_surf1_rad);

costheta1=u_z.*u_z_surf1+u_w.*u_w_surf1+u_s.*u_s_surf1;
theta1_rad=acos(costheta1);
theta1=theta1_rad*rad2deg;

% Constraints for radiation
IDN=100;
for i=[1:8760];
if beta(i)>0;
    ID(i)= IDN.*cos(theta1_rad(i));
else
    ID(i)=0;
end
end

for i=[1:8760];
if beta(i)>0;
    theta1(i)= theta1(i);
else
    theta1(i)=0;
end
end

% figure
% subplot(2,1,1), plot(ht(1:48),ID(1:48))
%  xlabel('time [h]')
%  ylabel('rad 2[W/m2]')
% 
% 
% subplot(2,1,2), plot(ht(1:48),theta1(1:48))
%  xlabel('time [h]')
%  ylabel('theta')
% %  
tConverter.afMaximalSolarRadiation = u_z * 1300; % convert to watts / m^2
tConverter.afMaximalSolarRadiation(tConverter.afMaximalSolarRadiation<0) = 0;


%  in=4320;
%  fin=in+48;
%  figure 
%  plot3(-u_w(in:fin),u_s(in:fin),afMaximalSolarRadiation(in:fin))
%  xlabel('u_w')
%  ylabel('u_s')
%  zlabel('u_z')
%  grid on
%  axis square

 
%  figure 
%  plot(ht(1:48),psi_rad(1:48)*rad2deg)
%  
%  figure 
%  plot(ht(1:48),u_w(1:48)./cos(beta_rad(1:48)))
%  figure 
%  subplot(1,2,1),plot(ht(1:48),u_z(1:48))
%  subplot(1,2,2),plot(ht(1:48),u_w(1:48))
%  
% figure
% plot(ht(1:48),theta(1:48))
% xlabel('time [h]')
% ylabel('theta, incidence of the solar rays, {\circ}')
% 
% figure
% plot(ht(1:48),omega(1:48))
% 
% figure
% plot(ht(1:48),u_z(1:48))
% ylabel('u_z')
% 
% figure
% plot(ht(1:48),beta_rad(1:48)*rad2deg)
% ylabel('beta, solar height')
% 
% figure
% plot(ht(1:48),psi_rad(1:48)*rad2deg)
% ylabel('psi, solar azimuth')
% 
% figure 
% plot3(ht(1:48),beta_rad(1:48)*rad2deg, psi_rad(1:48)*rad2deg)

%figure
%plot3(ht,beta_rad,psi_rad)

% cosalpha=sin(delta_rad)*sin(phi_rad)+cos(delta_rad).*cos(phi_rad).*cos(omega_rad);
% alpha=acos(cosalpha)*rad2deg;
% 
% %radiation on the south facade
% 
% cosalpha_t_S= -sin(delta_rad).*cos(phi_rad).*cos(gamma_rad)+cos(delta_rad).*sin(phi_rad).*cos(gamma_rad).*cos(omega_rad)+cos(delta_rad).*sin(gamma_rad).*sin(omega_rad);
% alpha_t_S=acos(cosalpha_t_S)*rad2deg;
% Rb_S=cosalpha_t_S./cosalpha;
% for i= 1 : 8760,
%     if Rb_S(i)>1;
%         Rb_S(i)=1;
%     else
%     if Rb_S(i)<0;
%         Rb_S(i)=0;
%     end
%     end
%      end
% Idir_S=Idir.*Rb_S;
% %It_S=Idir.*(Rb_S+rho_g/2) +Idiff*(1+rho_g)/2
% 
% %radiation on the west facade
% 
% gamma_rad_W=gamma_rad-pi/2;
% cosalpha_t_W= -sin(delta_rad).*cos(phi_rad).*cos(gamma_rad_W)+cos(delta_rad).*sin(phi_rad).*cos(gamma_rad_W).*cos(omega_rad)+cos(delta_rad).*sin(gamma_rad_W).*sin(omega_rad);
% alpha_t_W= acos(cosalpha_t_W)*rad2deg;
% Rb_W=cosalpha_t_W./cosalpha;
% for i= 1 : 8760,
%     if Rb_W(i)>1;
%         Rb_W(i)=1;
%     else
%     if Rb_W(i)<0;
%         Rb_W(i)=0;
%     end
%     end
%      end
% Idir_W=Idir.*Rb_W;
% %It_W=Idir.*(Rb_W+rho_g/2) +Idiff*(1+rho_g)/2
% 
% %radiation on the east facade
% 
% gamma_rad_E=gamma_rad+pi/2;
% cosalpha_t_E= -sin(delta_rad).*cos(phi_rad).*cos(gamma_rad_E)+cos(delta_rad).*sin(phi_rad).*cos(gamma_rad_E).*cos(omega_rad)+cos(delta_rad).*sin(gamma_rad_E).*sin(omega_rad);
% alpha_t_E= acos(cosalpha_t_E)*rad2deg;
% Rb_E=cosalpha_t_E./cosalpha;
% for i= 1 : 8760,
%     if Rb_E(i)>1;
%         Rb_E(i)=1;
%     else
%     if Rb_E(i)<0;
%         Rb_E(i)=0;
%     end
%     end
% end
% Idir_E=Idir.*Rb_E;
% %It_E=Idir.*(Rb_E+rho_g/2) +Idiff*(1+rho_g)/2
% 
% %radiation on the north facade
% 
% gamma_rad_N=gamma_rad+pi;
% cosalpha_t_N= -sin(delta_rad).*cos(phi_rad).*cos(gamma_rad_N)+cos(delta_rad).*sin(phi_rad).*cos(gamma_rad_N).*cos(omega_rad)+cos(delta_rad).*sin(gamma_rad_N).*sin(omega_rad);
% alpha_t_N= acos(cosalpha_t_N)*rad2deg;
% Rb_N=cosalpha_t_N./cosalpha;
% for i= 1 : 8760,
%     if Rb_N(i)>1;
%         Rb_N(i)=1;
%     else
%     if Rb_N(i)<0;
%         Rb_N(i)=0;
%     end
%     end
% end
% Idir_N=Idir.*Rb_N;
% 
% %validation results
% Tot_rad_S= sum(Idir_S);
% Tot_rad_W= sum(Idir_W);
% Tot_rad_E= sum(Idir_E);
% Tot_rad_N= sum(Idir_N);
% Tot_rad= sum(Idir);
% 
% %It_N=Idir.*(Rb_N+rho_g/2) +Idiff*(1+rho_g)/2
% %plot 0
% figure
% plot(ht,Idir)
%  xlabel('time')
%  ylabel('Direct radiation, [W/m^2]')
% % plot 1
% figure                              % radiation chart
% subplot(2,2,1), plot(ht,Idir_S)     % south radiation
%  xlabel('time')
%  ylabel('Rad S, [W/m^2]')
% subplot(2,2,2), plot(ht,Idir_W)     % west radiation
%  xlabel('time')
%  ylabel('Rad W, [W/m^2]')
% subplot(2,2,3), plot(ht,Idir_E)     % east radiation
%  xlabel('time')
%  ylabel('Rad E, [W/m^2]')
% subplot(2,2,4), plot(ht,Idir_N)     % north radiation
%  xlabel('time')
%  ylabel('Rad N, [W/m^2]')
% % plot 2
% figure
% subplot(3,2,1), plot(ht, cosalpha)
%  xlabel('time')
%  ylabel('cos(alpha)')
% subplot(3,2,3), plot(ht, cosalpha_t_S)
%  xlabel('time')
%  ylabel('cos(alpha_t (S))')
% subplot(3,2,4), plot(ht, cosalpha_t_W)
%  xlabel('time')
%  ylabel('cos(alpha_t (W))')
% subplot(3,2,5), plot(ht, cosalpha_t_E)
%  xlabel('time')
%  ylabel('cos(alpha_t (E))')
% subplot(3,2,6), plot(ht, cosalpha_t_N)
%  xlabel('time')
%  ylabel('cos(alpha_t (N))')
% % plot 3
% figure
% subplot(2,2,1), plot(ht,alpha_t_S)
%  xlabel('time')
%  ylabel('alpha_t S, {\circ}')
% subplot(2,2,2), plot(ht,alpha_t_W)
%  xlabel('time')
%  ylabel('alpha_t W, {\circ}')
% subplot(2,2,3), plot(ht,alpha_t_E)
%  xlabel('time')
%  ylabel('alpha_t E, {\circ}')
% subplot(2,2,4), plot(ht,alpha_t_N)
%  xlabel('time')
%  ylabel('alpha_t N, {\circ}')

%  cosalpha_t_S=(sin(delta_rad)*sin(phi_rad)*cos(beta_rad)-sin(delta_rad)*cos(phi_rad)*sin(beta_rad)*cos(gamma_rad)+cos(delta_rad)*cos(phi_rad)*cos(beta_rad)*cos(omega_rad)+cos(delta_rad)*sin(phi_rad)*sin(beta_rad)*cos(gamma_rad)*cos(omega_rad)+cos(delta_rad)*sin(beta_rad)*sin(gamma_rad)*sin(omega_rad));
%  Rb_S=cosalpha_t_S./cosalpha;
%  
%  cosalpha_t_S_2=-sin(delta_rad)*cos(phi_rad)*cos(gamma_rad)+cos(delta_rad)*sin(phi_rad)*cos(gamma_rad)*cos(omega_rad)+cos(delta_rad)*sin(gamma_rad)*sin(omega_rad);
%  Rb_S_2=cosalpha_t_S_2./cosalpha;
%  
%  gamma_rad_W=gamma_rad-pi/2;
%  cosalpha_t_W=(sin(delta_rad)*sin(phi_rad)*cos(beta_rad)-sin(delta_rad)*cos(phi_rad)*sin(beta_rad)*cos(gamma_rad_W)+cos(delta_rad)*cos(phi_rad)*cos(beta_rad)*cos(omega_rad)+cos(delta_rad)*sin(phi_rad)*sin(beta_rad)*cos(gamma_rad_W)*cos(omega_rad)+cos(delta_rad)*sin(beta_rad)*sin(gamma_rad_W)*sin(omega_rad));
%  Rb_W=cosalpha_t_W./cosalpha;
%  
%  gamma_rad_E=gamma_rad+pi/2;
%  cosalpha_t_E=(sin(delta_rad)*sin(phi_rad)*cos(beta_rad)-sin(delta_rad)*cos(phi_rad)*sin(beta_rad)*cos(gamma_rad_E)+cos(delta_rad)*cos(phi_rad)*cos(beta_rad)*cos(omega_rad)+cos(delta_rad)*sin(phi_rad)*sin(beta_rad)*cos(gamma_rad_E)*cos(omega_rad)+cos(delta_rad)*sin(beta_rad)*sin(gamma_rad_E)*sin(omega_rad));
%  Rb_E=cosalpha_t_E./cosalpha;
%  
%  gamma_rad_N=gamma_rad-pi/2;
%  cosalpha_t_N=(sin(delta_rad)*sin(phi_rad)*cos(beta_rad)-sin(delta_rad)*cos(phi_rad)*sin(beta_rad)*cos(gamma_rad_N)+cos(delta_rad)*cos(phi_rad)*cos(beta_rad)*cos(omega_rad)+cos(delta_rad)*sin(phi_rad)*sin(beta_rad)*cos(gamma_rad_N)*cos(omega_rad)+cos(delta_rad)*sin(beta_rad)*sin(gamma_rad_N)*sin(omega_rad));
%  Rb_N=cosalpha_t_N./cosalpha;
% 
%  It_S=Ib*Rb_S +Id*(1+cos(beta_rad))/2+(Ib+Id)*rho_g*(1-cos(beta_rad))/2;
%  It_W=Ib*Rb_W +Id*(1+cos(beta_rad))/2+(Ib+Id)*rho_g*(1-cos(beta_rad))/2;
%  It_E=Ib*Rb_E +Id*(1+cos(beta_rad))/2+(Ib+Id)*rho_g*(1-cos(beta_rad))/2;
%  It_N=Ib*Rb_N +Id*(1+cos(beta_rad))/2+(Ib+Id)*rho_g*(1-cos(beta_rad))/2; 
 % plot(t, delta_rad)
% hold on
% plot(t,gamma_rad)
% plot(t,omega_rad)
% plot(t,phi_rad)
%plot(t,beta_rad)

%plot(n,delta)
 
% %plot(t,It_S, 'r')
% hold on
% plot(t,Rb_S, 'g')
% plot(t,cosalpha_t_S, 'm')
% plot(t,cosalpha, 'b')
% % plot(t,It_W, 'g')
% % plot(t,It_E, 'm')
% % plot(t,It_N,'b')
% xlabel('hour');
% ylabel('total radiation');
% legend('csst','csa')
% %other models

% n=[1:365];
% delta = 23.45*sin(360*(284+n)/365); 
% plot(n,delta)
% a=0.39779;
% b=0.98565;
% c=1.914;
% d=0.98565;
% delta= arcsin(a*cos(b*(n+10)+c*sin(d*(n-2))));

% n=[1:365];
% delta = -23.45*cos(2*pi/365*(n+10));
% plot(n,delta)
% 
% hold on;
% delta2 = -23.45*sin(2*pi/365*(n+284));
% plot(n,delta2)
% 
%  a=0.006918;
%  b=0.399912;
%  c=0.070257;
%  d=0.006758;
%  e=0.000907;
%  f=0.002697;
%  g=0.00148;
% 
% gamma= 2*pi/365*(n-1);
% delta3=a-b*cos(gamma)+c*sin(gamma)-d*cos(2*gamma)+e*sin(2*gamma)-f*cos(3*gamma)+g*sin(2*gamma); %radians
% delta3_deg=delta3*(360/2*pi)
% plot(n,delta3_deg)

			%
		end %
		%
	end %
	%
	%
	% ---------------------------------------------------------------------
	methods (Static = true)
		%
		%
	end %
	%
end %
