clc
%clear classes
clear all
addpath 'C:\Users\marcomo\Dropbox\HVAC Project\Software\Matlab'
import MatlabToTikZ.*
% .* = prendi tutto
% TODOs		- add roof
%			- check different components of radiation against Internet doc
%			- compare with test data
%			- check NaNs
%			- add shadows(?)
%			- create window model

% Declaration of the general parameters
startDay	= 1;			% Simulation start	(day) 
startMonth	= 1;			% Simulation start	(month) 
endDay		= 31;			% Simulation end	(day)
endMonth	= 12;			% Simulation end	(month)
lat			= 60;			% Geographical latitude		(North positive)[°]
long		= 20;			% Geographical longitude	(East positive) [°]
timeZone	= 1;			% Time zone					(East positive) [°]
hourRes		= 1;			% Hourly resolution
iNumberOfSurfaces	= 4;


% Declaration of local parameters: surface 1
for iSurface = 1:iNumberOfSurfaces;
	%
	% Surface tilt angle, angle between normal to surface 
	% and normal to horizontal surface (0 if horizontal,90 vertical), [°]
	atSurfaces(iSurface).fAlpha = 90;
	%
	% Wall azimuth, angle between north and wall normal
	% (North=0;East=90;South=180;West=270),[°]
	atSurfaces(iSurface).fPsi = 90*(iSurface-1);
	
	[atSurfaces(iSurface).aafDirectRadiation,...
	 atSurfaces(iSurface).aafDiffuseRadiation,...
	 atSurfaces(iSurface).aafReflectedRadiation,...
	 atSurfaces(iSurface).aafTotalRadiation,...
	 day,...
	 hour,...
	 InitDay,...
	 LastDay]									= RadiationProcessor_V_1_0( ...
																	startDay,...
																	startMonth,...
																	endDay,...
																	endMonth,...
																	lat,...
																	long,...
																	timeZone,...
																	atSurfaces(iSurface).fAlpha,...
																	atSurfaces(iSurface).fPsi,...
																	hourRes);
%%		% Create output files
	Vert_title	= [1:1/hourRes:24]';
	Hor_title	= {'Hour'};
	for i		= InitDay:LastDay
		Hor_title(end + 1)		= {num2str(i)};
	end
	
    MatlabToTikZ.ExportLineplot(strcat( 'Idir_surf',num2str(iSurface),'.txt'), [Vert_title,atSurfaces(iSurface).aafDirectRadiation], Hor_title); % Export direct radiation values
	MatlabToTikZ.ExportLineplot(strcat( 'Idid_surf',num2str(iSurface),'.txt'), [Vert_title,atSurfaces(iSurface).aafDiffuseRadiation], Hor_title); % Export direct radiation values
	MatlabToTikZ.ExportLineplot(strcat( 'IRefl_surf',num2str(iSurface),'.txt'), [Vert_title,atSurfaces(iSurface).aafReflectedRadiation], Hor_title); % Export direct radiation values
	MatlabToTikZ.ExportLineplot(strcat( 'ITot_surf',num2str(iSurface),'.txt'), [Vert_title,atSurfaces(iSurface).aafTotalRadiation], Hor_title); % Export direct radiation values
%%		
		% Create charts
	figure(iSurface)
	surf(day',hour,atSurfaces(iSurface).aafDirectRadiation)
	str			= sprintf('Direct radiation on the surface %i, days %i - %i;\n latitude = %i deg, longitude = %i; deg surface tilt = %i° azimuth = %i °',(iSurface), InitDay, LastDay , lat, long, atSurfaces(iSurface).fAlpha, atSurfaces(iSurface).fPsi );
	title (str)
	xlabel('day number')
	ylabel('time [h]')
	zlabel('Radiation,[W/m^2]')
	
	figure(iSurface+iNumberOfSurfaces)
	surf(day',hour,atSurfaces(iSurface).aafDiffuseRadiation)
	str			= sprintf('Diffuse radiation on the surface %i, days %i - %i;\n latitude = %i deg, longitude = %i; deg surface tilt = %i° azimuth = %i °',(iSurface), InitDay, LastDay , lat, long, atSurfaces(iSurface).fAlpha, atSurfaces(iSurface).fPsi );
	title (str)
	xlabel('day number')
	ylabel('time [h]')
	zlabel('Radiation,[W/m^2]')
				
	figure(iSurface + 2*iNumberOfSurfaces)
	surf(day',hour,atSurfaces(iSurface).aafReflectedRadiation)
	str			= sprintf('Reflected radiation on the surface %i, days %i - %i;\n latitude = %i deg, longitude = %i; deg surface tilt = %i° azimuth = %i °',(iSurface), InitDay, LastDay , lat, long, atSurfaces(iSurface).fAlpha, atSurfaces(iSurface).fPsi );
	title (str)
	xlabel('day number')
	ylabel('time [h]')
	zlabel('Radiation,[W/m^2]')
	
	figure(iSurface+3*iNumberOfSurfaces)
	surf(day',hour,atSurfaces(iSurface).aafTotalRadiation)
	str			= sprintf('Total radiation on the surface %i, days %i - %i;\n latitude = %i deg, longitude = %i; deg surface tilt = %i° azimuth = %i °',(iSurface), InitDay, LastDay , lat, long, atSurfaces(iSurface).fAlpha, atSurfaces(iSurface).fPsi );
	title (str)
	xlabel('day number')
	ylabel('time [h]')
	zlabel('Radiation,[W/m^2]')
		
end;% for

