% every row of the output is a i.i.d. realization of the r.v.
%
function aafGeneratedSamples = Generate( tGenerator, iNumberOfRealizations )
	%
	% for readability
%	iNumberOfSamples				= size( tGenerator.aafOriginalSamples, 1 ); % each row is a sample
	iNumberOfElementsOfEachSample	= size( tGenerator.aafOriginalSamples, 2 );
	%
	% generate the data from the copula in [0 1]
	aafCopuledSamples =							...
		copularnd(	'Gaussian',					...
					tGenerator.aafCorrelations,	...
					iNumberOfRealizations		);
	%
	%
	% map back each series of elements in the original domain
	%
	% storage allocation
	aafGeneratedSamples = zeros( size(aafCopuledSamples) );
	%
	% cycle for each scalar component of the random vector
	for iElement = 1:iNumberOfElementsOfEachSample;
		%
		% DEBUG
		fprintf('generated element %d\n', iElement);
		%
		aafGeneratedSamples(:, iElement) =								...
			ksdensity(	tGenerator.aafOriginalSamples(:, iElement),		...
						aafCopuledSamples(:, iElement),					...
						'function', 'icdf' );
		%
	end;%
	%
end % function
