% usage:
%
% aafScenarios = tGenerator.ExtractScenarios(             ...
%                                    fJulianDate,         ...
%                                    iNumberOfScenarios,  ...
%                                    fInitialCondition    )  [optional]
%
% inputs:
%
% - fJulianDate           needed to understand if the generation follows the
%                         pattern of the morning / afternoon / night, etc.
%
% - iNumberOfScenarios    how many scenarios one wants to be returned
%
% - fInitialCondition     OPTIONAL, if given it returns only scenarios that
%                         start with that given initial condition. If the
%                         marginals does not admit that initial condition (i.e.,
%                         that condition has never been seen when training the
%                         generator) then the scenarios returned will violate
%                         that initial condition
%
% outputs:
%
% - aafScenarios          matrix, whose rows are scenarios. Thus the matrix has
%                         iNumberOfScenarios rows and a number of columns that
%                         depends on how the generator has been set at the
%                         beginning
%
function aafScenarios =				...
			ExtractScenarios(		...
				tGenerator,			...
				fJulianDate,		...
				iNumberOfScenarios,	...
				fInitialCondition	)
	%
	iPeriod = tGenerator.JulianDateToPeriod( fJulianDate );
	%
	if( nargin < 4 )
		%
		fInitialCondition = [];
		%
	end;%
	%
	aafScenarios = tGenerator.atCopulas(iPeriod).Extract(iNumberOfScenarios, fInitialCondition);
	%
end %
