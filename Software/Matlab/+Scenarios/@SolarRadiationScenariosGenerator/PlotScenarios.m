function PlotScenarios(						...
			tGenerator,						...
			fJulianDate,					...
			aafSolarRadiationScenarios,		...
			aafSkyCoverScenarios,			...
			afMaximalRadiation				)
	%
	% manage the cases where the PlotScenarios() is called without
	% additional parameters
	switch( nargin )
		%
		case 1
			fJulianDate = Time.GetCurrentJulianDate();
			[	aafSolarRadiationScenarios,			...
				aafSkyCoverScenarios,				...
				afMaximalRadiation			] =		...
					tGenerator.ExtractScenarios(	...
						fJulianDate,				...
						10							);
		%
		case 2
			[	aafSolarRadiationScenarios,			...
				aafSkyCoverScenarios,				...
				afMaximalRadiation			] =		...
					tGenerator.ExtractScenarios(	...
						fJulianDate,				...
						10							);
		%
		case 3
			aafSkyCoverScenarios	= [];
			afMaximalRadiation		= [];
		%
		otherwise
			error('wrong number of parameters');
		%
	end;% switch
	%
	%
	% build the scenarios times
	afScenariosTimes =											...
		(														...
				( 1:tGenerator.iForecastingHorizonInSamples )	...
			*	tGenerator.fSamplingTimeInSeconds				...
			*	Time.GetJulianSecond()							...
		)														...
		+														...
		fJulianDate;
	%
	% for readability
	iNumberOfScenarios	= numel( aafSolarRadiationScenarios(:, 1) );
	afDatenums			= Time.JulianDateToDatenum( afScenariosTimes );
	%
	% construct the figure
	figure( tGenerator.iLabel )
	title( sprintf( '%s - plot of %d scenarios', tGenerator.strDescription, iNumberOfScenarios ) );
	hold on;
	%
	for iScenario = 1:iNumberOfScenarios;
		%
		plot(	afDatenums,										...
				aafSolarRadiationScenarios(iScenario, :), 'k'	);
		%
		if( numel(aafSkyCoverScenarios) > 0 )
			%
			plot(	afDatenums,									...
					aafSkyCoverScenarios(iScenario, :), '-b'	);
			%
		end;%
		%
	end;%
	%
	if( numel(afMaximalRadiation) > 0 )
		%
		plot(	afDatenums,					...
				afMaximalRadiation, '-y'	);
		%
	end;%
	%
	datetick('x','HH');
	%
	hold off;
	%
end % function

