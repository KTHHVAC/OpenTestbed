% prepare the workspace
clear all;
clear classes;
close all;
clc;
%
import EstimationAlgorithms.*;
import Scenarios.*;
import MatlabToTikZ.*;
import PhysicalModels.*;


% set the parameters
iForecastingHorizonInSamples	= 10;
fSamplingTimeInSeconds			= 60 * 60;
iNumberOfPrecomputedScenarios	= 100;
[	fLatitudeInDegrees,							...
	fLongitudeInDegrees,						...
	fTimeZoneInHours	] =						...
		PhysicalModels.GetStockholmCoordinates();


% first of all, learn the converter
tConverter = Scenarios.SkyCoverToRadiationConverter(	...
							fLatitudeInDegrees,			...
							fLongitudeInDegrees,		...
							fTimeZoneInHours			);
%
tConverter.Learn(	{'../../Datasets/SkyCoverToRadiation/HVACWebsite_130925000000_131009235959.txt'},	...
					 '../../Datasets/SkyCoverToRadiation/SLBWebsite_131001000000_131009235959.txt'		);
%
% and save it
tConverter.SaveToMatFile('../../Datasets/SkyCoverToRadiation/SkyCoverToRadiationConverter.mat');



% then learn the copulas
tOccupancy 		= Scenarios.OccupancyScenariosGenerator(		fSamplingTimeInSeconds);
tTemperature 	= Scenarios.TemperatureScenariosGenerator(		fSamplingTimeInSeconds);
tSolarRadiation = Scenarios.SolarRadiationScenariosGenerator(	fSamplingTimeInSeconds);
%
tOccupancy.Learn(									...
	iForecastingHorizonInSamples,					...
	iNumberOfPrecomputedScenarios,					...
	{'../../Datasets/manual_people_counting.txt'}	);
%
tTemperature.Learn(									...
	iForecastingHorizonInSamples,					...
	iNumberOfPrecomputedScenarios,					...
	{'../../Datasets/temperatures.txt'}				);
%
tSolarRadiation.Learn(								...
	iForecastingHorizonInSamples,					...
	iNumberOfPrecomputedScenarios,					...
	{'../../Datasets/solar_radiation.txt'}			);
%
% eventually save the results
tOccupancy.SaveToMatFile(		'../../Datasets/Scenarios/OccupancyGenerator.mat');
tTemperature.SaveToMatFile(		'../../Datasets/Scenarios/TemperatureGenerator.mat');
tSolarRadiation.SaveToMatFile(	'../../Datasets/Scenarios/SolarRadiationGenerator.mat');


