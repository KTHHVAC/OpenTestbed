% prepare the workspace
clear all;
clear classes;
close all;
clc;
import EstimationAlgorithms.*;
import PhysicalModels.*;
import MatlabToTikZ.*;
import Scenarios.*;


% load the objects
tOccupancy 		= Scenarios.ScenariosGenerator.LoadFromMatFile('../../Datasets/Scenarios/OccupancyGenerator.mat');
tTemperature 	= Scenarios.ScenariosGenerator.LoadFromMatFile('../../Datasets/Scenarios/TemperatureGenerator.mat');
tSolarRadiation	= Scenarios.ScenariosGenerator.LoadFromMatFile('../../Datasets/Scenarios/SolarRadiationGenerator.mat');


% test them
% tOccupancy.PlotScenarios( Time.GregorianDateToJulianDate( 2013, 1, 1, 7, 0, 0 ) );
% tTemperature.PlotScenarios();
% tSolarRadiation.PlotScenarios();


iNumberOfScenarios = 1;
%
afJulianDates =			Time.GregorianDateToJulianDate( 2013, 1, 1, 10, 0, 0 )		...
					:	Time.GetJulianHour()										...
					:	Time.GregorianDateToJulianDate( 2013, 1, 1, 10, 0, 0 ) + Time.GetJulianHour() * (iNumberOfScenarios - 1);
%
aafOccupancyScenarios		= tOccupancy.ExtractScenarios(		afJulianDates, iNumberOfScenarios)
aafTemperatureScenarios		= tTemperature.ExtractScenarios(	afJulianDates, iNumberOfScenarios)
aafRadiationScenarios		= tSolarRadiation.ExtractScenarios(	afJulianDates, iNumberOfScenarios)
%
afOccupancyEvaluations		= tOccupancy.EvaluatePDFAt(			aafOccupancyScenarios,		afJulianDates )
afTemperatureEvaluations	= tTemperature.EvaluatePDFAt(		aafTemperatureScenarios,	afJulianDates )
afRadiationEvaluations		= tSolarRadiation.EvaluatePDFAt(	aafRadiationScenarios,		afJulianDates )



% tSolarRadiation.atCopulas(1).aafCopula
% 
% u = linspace(0,1,10);
% [U1,U2] = meshgrid(u,u);
% F = copulapdf('Gaussian',[U1(:) U2(:)], tSolarRadiation.atCopulas(1).aafCopula);
% surf(U1,U2,reshape(F,10,10))
% 
% f = copulapdf('Gaussian',[0.6473, 0.7041], tSolarRadiation.atCopulas(1).aafCopula)
% 
% 




