aiNonZerosSlackVariablesIndex = find(tTemperatureController.afOptimizationProblemSolution(end-47:end));


afTimeStepInteresting = zeros(tTemperatureController.iPredictionHorizon,1);
%% Two conditions
for iTimeStep = 1:tTemperatureController.iPredictionHorizon
	%
	afMaxAndMinAtThisStep = diag([1;-1])*tTemperatureController.tModel.afMixedDisturbancesStocastic(2*(iTimeStep-1)+1:iTimeStep*2);
	%
	if afMaxAndMinAtThisStep(1) == 0 
		%do nothing
	else
		%	
		fEvaluationMixed		=	tTemperatureController.tInputsBounds.fMaxHeatingTemperature(iTimeStep)					...
									-	tTemperatureController.tInputsBounds.fMinCoolingTemperature(iTimeStep)				...
									-	afMaxAndMinAtThisStep(2)												...
									+	afMaxAndMinAtThisStep(1);
		%
		fEvaluationOutput		=	tTemperatureController.tOutputsBounds.Temperature.fUpperBoundDay		...
									-	tTemperatureController.tOutputsBounds.Temperature.fLowerBoundDay	...
									-	afMaxAndMinAtThisStep(2)													...
									+	afMaxAndMinAtThisStep(1);
		%
		if (fEvaluationOutput >= 0 &&  fEvaluationMixed >= 0)
			% 
		else
			%
			afTimeStepInteresting(iTimeStep) = 1;
		end;%
			
	end;%
	%
end;%
afOutOfBound = find(afTimeStepInteresting);
%% Cooling
afForcedStepCooling = zeros(1,tTemperatureController.iPredictionHorizon);
%
for iTimeStep = 1:tTemperatureController.iPredictionHorizon
	%
	afMaxAndMinAtThisStep = diag([1;-1])*tTemperatureController.tModel.afMixedDisturbancesStocastic(2*(iTimeStep-1)+1:iTimeStep*2);
	%
	if afMaxAndMinAtThisStep(1) == 0 
		%do nothing
	else
		%	
		fEvaluationMixed		=	tTemperatureController.tInputsBounds.fMaxHeatingTemperature(iTimeStep)		...
									-	(		tTemperatureController.tModel.aafC								...
											*	tTemperatureController.tModel.aafA^(iTimeStep)								...
											*	tTemperatureController.tModel.afX0)								...
									-	afMaxAndMinAtThisStep(2);												...
									
		%
		fEvaluationOutput		=	tTemperatureController.tOutputsBounds.Temperature.fUpperBoundDay			...
									-	(		tTemperatureController.tModel.aafC								...
											*	tTemperatureController.tModel.aafA^(iTimeStep)					...
											*	tTemperatureController.tModel.afX0)								...
									-	afMaxAndMinAtThisStep(2);
		%
		if (fEvaluationOutput < 0 ||  fEvaluationMixed < 0)
			% 
			afForcedStepCooling(iTimeStep) = 1;
		else
			%
			afForcedStepCooling(iTimeStep) = 0;
		end;%
			
	end;%
	%
end;%

%% Heating
afForcedStepHeating = zeros(1,tTemperatureController.iPredictionHorizon);
%
for iTimeStep = 1:tTemperatureController.iPredictionHorizon
	%
	afMaxAndMinAtThisStep = diag([1;-1])*tTemperatureController.tModel.afMixedDisturbancesStocastic(2*(iTimeStep-1)+1:iTimeStep*2);
	%
	if afMaxAndMinAtThisStep(1) == 0 
		%do nothing
	else
		%	
		fEvaluationMixed		=	tTemperatureController.tInputsBounds.fMinCoolingTemperature(iTimeStep)		...
									-	(		tTemperatureController.tModel.aafC								...
											*	tTemperatureController.tModel.aafA^(iTimeStep)								...
											*	tTemperatureController.tModel.afX0)								...
									-	afMaxAndMinAtThisStep(1);												...
									
		%
		fEvaluationOutput		=	tTemperatureController.tOutputsBounds.Temperature.fLowerBoundDay			...
									-	(		tTemperatureController.tModel.aafC								...
											*	tTemperatureController.tModel.aafA^(iTimeStep)					...
											*	tTemperatureController.tModel.afX0)								...
									-	afMaxAndMinAtThisStep(1);
		%
		if (fEvaluationOutput > 0 ||  fEvaluationMixed > 0)
			% 
			afForcedStepHeating(iTimeStep) = 1;
		else
			%
			afForcedStepHeating(iTimeStep) = 0;
		end;%
			
	end;%
	%
end;%
afForcedStepCooling
afForcedStepHeating
afTimeStepInteresting'
aiNonZerosSlackVariablesIndex
