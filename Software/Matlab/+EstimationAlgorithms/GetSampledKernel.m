function aafKernel =								...
			GetSampledKernel(						...
				aafSamples,							... every row is a sample
				tKernelEvaluationFunctionHandle,	...
				afKernelParameters					)
	%
	% check if the samples are meaningful
	if( sum( sum( isnan(aafSamples) ) ) )
		%
		warning('some samples contain some NaNs!!');
		%
	end;%
	%
	% for readability
	iNumberOfSamples = size( aafSamples, 1 );
	%
	% storage allocation
	aafKernel = zeros(iNumberOfSamples, iNumberOfSamples);
	%
	% cycle on the various couples of locations
	for iFirstInputLocationIndex	= 1:iNumberOfSamples;
	for iSecondInputLocationIndex	= 1:iNumberOfSamples;
		%
		% for readability
		afFirstInputLocation	= aafSamples(iFirstInputLocationIndex, :);
		afSecondInputLocation	= aafSamples(iSecondInputLocationIndex, :);
		%
		aafKernel(iFirstInputLocationIndex, iSecondInputLocationIndex) =	...
			tKernelEvaluationFunctionHandle(								...
				afFirstInputLocation,										...
				afSecondInputLocation,										...
				afKernelParameters											);
		%
	end;%
	end;%
	%
end % function

