function aaaafKernel = GenerateBidimensionalLaplacianKernel( afXAxis, afYAxis, fScale )
	%
	% for readability
	iNumberOfXInputLocations = numel( afXAxis );
	iNumberOfYInputLocations = numel( afYAxis );
	%
	% storage allocation
	aaaafKernel = zeros(	iNumberOfXInputLocations, iNumberOfYInputLocations,	...
   							iNumberOfXInputLocations, iNumberOfYInputLocations	);
	%
	% cycle on the various couples of locations
	for iFirstXInputLocationIndex = 1:iNumberOfXInputLocations;
	for iFirstYInputLocationIndex = 1:iNumberOfYInputLocations;
		%
		% second couple
		for iSecondXInputLocationIndex = 1:iNumberOfXInputLocations;
		for iSecondYInputLocationIndex = 1:iNumberOfYInputLocations;
			%
			% for readability
			afFirstInputLocation = [	afXAxis( iFirstXInputLocationIndex );	...
										afYAxis( iFirstYInputLocationIndex )	];
			afSecondInputLocation = [	afXAxis( iSecondXInputLocationIndex );	...
										afYAxis( iSecondYInputLocationIndex )	];
			%
			aaaafKernel(	iFirstXInputLocationIndex,	iFirstYInputLocationIndex,			...
							iSecondXInputLocationIndex,	iSecondYInputLocationIndex	) =		...
				exp																			...
				(																			...
					-	norm( afFirstInputLocation - afSecondInputLocation )				...
					/	fScale																...
				);
			%
		end;%
		end;%
		%
	end;%
	end;%
	%
end % function

