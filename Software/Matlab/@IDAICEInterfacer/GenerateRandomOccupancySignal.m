function tOccupancySignal = GenerateRandomOccupancySignal( fPoissonProcessRateInMinutes, iNumberOfDays )
	%
	% set the times as they are starting from today ad 00:00
	fStartingTime	= Time.GetCurrentJulianDay();
	fEndingTime		= fStartingTime + iNumberOfDays * Time.GetJulianDay();
	%
	% start filling up the values
	afTimes(1) = fStartingTime;
	afOccupancies(1) = 0;
	%
	% up to the moment that the ending time is not reached add samples
	while( afTimes(end) < fEndingTime )
		%
		afTimes(end+1) = afTimes(end) + exprnd(fPoissonProcessRateInMinutes) * Time.GetJulianMinute();
		afOccupancies(end+1) = max( afOccupancies(end) + randi([-1 1],1), 0 );
		%
	end;%
	%
	% construct the object
	%
	% for readability
	tDevicesIDs = Signal.GetDevicesIDs();
	tSignalsIDs = Signal.GetSignalsIDs();
	%
	tOccupancySignal = Signal();
	tOccupancySignal.Set( tDevicesIDs.iUserDefinedDevice, tSignalsIDs.iOccupancy, afOccupancies, afTimes );
	%
end % function

