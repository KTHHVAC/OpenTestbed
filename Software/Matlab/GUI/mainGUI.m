function varargout = mainGUI(varargin)
% MAINGUI MATLAB code for mainGUI.fig
%      MAINGUI, by itself, creates a new MAINGUI or raises the existing
%      singleton*.
%
%      H = MAINGUI returns the handle to a new MAINGUI or the handle to
%      the existing singleton*.
%
%      MAINGUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in MAINGUI.M with the given input arguments.
%
%      MAINGUI('Property','Value',...) creates a new MAINGUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before mainGUI_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to mainGUI_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help mainGUI

% Last Modified by GUIDE v2.5 31-Oct-2013 09:34:37

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @mainGUI_OpeningFcn, ...
                   'gui_OutputFcn',  @mainGUI_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

% --- Executes just before mainGUI is made visible.
function mainGUI_OpeningFcn(hObject, eventdata, handles, varargin)
	% This function has no output args, see OutputFcn.
	% hObject    handle to figure
	% eventdata  reserved - to be defined in a future version of MATLAB
	% handles    structure with handles and user data (see GUIDATA)
	% varargin   command line arguments to mainGUI (see VARARGIN)
	%
	%
	set(handles.Connect,			'BackgroundColor', 'red');
	set(handles.Disconnect,			'BackgroundColor', 'red');
	%
	set(handles.PIDPanel,			'Visible', 'off');
	set(handles.NoControllerPanel,	'Visible', 'off');
	set(handles.MPCPanel,			'Visible', 'off');
	%
	handles.bConnected				= false;
	%
	%----------------------------------------------------------------------
% 	CreateTemperatureAndCO2Signals( handles ); % I had to put it
% 	explicitely because otherwise I couldn't save actually the signals
		%
		%
		handles.atPlottedSignals					= Signal( 2 );
		%
		tDevicesIDs									= Signal.GetDevicesIDs();
		tSignalsIDs									= Signal.GetSignalsIDs();
		%
		%						
		% Temperature
		handles.atPlottedSignals(1).iDeviceID 		= tDevicesIDs.iMote1035; 
		handles.atPlottedSignals(1).iSignalID 		= tSignalsIDs.iTemperatureOfEnvironment; 
		handles.atPlottedSignals(1).strLocation 	= 'LB201_A225'; 
		handles.atPlottedSignals(1).strDescription	= ...
			Signal.GetDescription(	handles.atPlottedSignals(1).iSignalID,	...
									handles.atPlottedSignals(1).iDeviceID	); 
		%
		% CO2
		handles.atPlottedSignals(2).iDeviceID 		= tDevicesIDs.iPLC_A225; 
		handles.atPlottedSignals(2).iSignalID 		= tSignalsIDs.iCO2OfEnvironment; 
		handles.atPlottedSignals(2).strLocation 	= 'LB201_A225'; 
		handles.atPlottedSignals(2).strDescription	= ...
			Signal.GetDescription(	handles.atPlottedSignals(2).iSignalID,	...
									handles.atPlottedSignals(2).iDeviceID	); 
		%	
		%
	%----------------------------------------------------------------------
	%
	% Choose default command line output for mainGUI
	handles.output	= hObject;
	%
	% Update handles structure
	guidata(hObject, handles);
	save('handles');
	%
	%
% end function

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

% UIWAIT makes mainGUI wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = mainGUI_OutputFcn(hObject, eventdata, handles) 
	% varargout  cell array for returning output args (see VARARGOUT);
	% hObject    handle to figure
	% eventdata  reserved - to be defined in a future version of MATLAB
	% handles    structure with handles and user data (see GUIDATA)

	% Get default command line output from handles structure
	varargout{1} = handles.output;

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

% --- Executes on button press in Connect.
function Connect_Callback(hObject, eventdata, handles)
	%
	load('handles');
	%
	try %
		%
		handles.tTCPConnectionParameters.strUser		= get( handles.UserName ,'String');
		handles.tTCPConnectionParameters.strPassword	= get( handles.Password ,'String');
		%
		% allocate the TCP connection and the controller
		handles.tTCPConnection 	= InternetConnection.KTHConnection( handles.tTCPConnectionParameters );
		%
		set(handles.Connect,		'BackgroundColor', 'green');
		set(handles.Disconnect,		'BackgroundColor', 'green');
		%
		%TODOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO : real check on the status
		handles.bConnected = true;
		%
		save('handles');
		%
		handles.GeneralPlotTimer = timer(															...
									'TimerFcn',	{@PlotTemperatureAndCO2 , handles},					...
									'Period', 30 ,													...
									'ExecutionMode', 'fixedRate'									);
		%
		%
		start(handles.GeneralPlotTimer);
		%
	catch exception
		%
		set(handles.ConnectionMsg,	'String','Not Connected!! Error!!');
		%
		disp( exception.message );
		warning('Unable to Connect');
		%
	end % try
	%
	guidata(hObject, handles);
	save('handles');
	%
% end function


function PlotTemperatureAndCO2( src, evt , handles )
	%
	try %
		%
		load('handles');
		%
		handles.atPlottedSignals(1).Update( handles.tTCPConnection );
		handles.atPlottedSignals(2).Update( handles.tTCPConnection );
		%
		guidata(hObject, handles);
		save('handles');
		%
		PlotSignal( handles.atPlottedSignals(1), handles.TemperatureAxes , handles );
		PlotSignal( handles.atPlottedSignals(2), handles.CO2Axes , handles );
		%
		%
		%
	catch exception
		%
		disp( exception.message );
		warning('Unable to get the data from the server and plot.');
		%
	end % try
	%	
	%
% end function
	
function PlotSignal( tSignal,  tSpot, handles )
	%
	try %
		%
		load('handles');
		%
		afDatenums = Time.JulianDateToDatenum( tSignal.afTimes );
		%
		hold on;
		%
		%
		plot( tSpot, afDatenums, tSignal.afValues, 'k');
		%
		hold off;
		%
		%
		fDeltaY = max(tSignal.afValues) - min(tSignal.afValues);
		fYMin	= min(tSignal.afValues) - 0.1 * fDeltaY;
		fYMax	= max(tSignal.afValues) + 0.1 * fDeltaY;
		%
		%
		set(tSpot , 'xlim', [	Time.JulianDateToDatenum(tSignal.afTimes(1)		- Time.GetJulianHour )	...
								Time.JulianDateToDatenum(tSignal.afTimes(end)	+ Time.GetJulianHour )]	);
		%
		set( tSpot , 'xticklabel', datestr( get( tSpot ,'xtick'),'HH:MM') );
		
		if( fYMin < fYMax )
			%
			ylim( [ fYMin, fYMax ] );
			set(tSpot , 'ylim', [ fYMin, fYMax ] );
			%
		end;%
		%
		%
		guidata(hObject, handles);
		save('handles');
		%
	catch exception
		%
		disp( exception.message );
		warning('Unable to Plot the data.');
		%
	end % try
	%	
	%
% end function
		
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

% --- Executes on button press in Disconnect.
function Disconnect_Callback(hObject, eventdata, handles)
	% hObject    handle to Disconnect (see GCBO)
	% eventdata  reserved - to be defined in a future version of MATLAB
	% handles    structure with handles and user data (see GUIDATA)
	%
	load('handles');
	%
	try %
		%
		delete(handles.GeneralPlotTimer);
		fclose( handles.tTCPConnection.tTcpIpClient );
		%
		%
		set(handles.Connect,		'BackgroundColor', 'red');
		set(handles.Disconnect,		'BackgroundColor', 'red');
		%
		%TODOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO : real check on the status
		handles.bConnected = false;
		%
	catch exception
		%
		set(handles.ConnectionMsg,	'String','Not disconnected!! Error!!');
		%
		disp( exception.message );
		warning('Unable to disconnect');
		%
	end % try
	%
	guidata(hObject, handles);
	save('handles');
	%
% end function

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

function UserName_Callback(hObject, eventdata, handles)
% hObject    handle to UserName (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of UserName as text
%        str2double(get(hObject,'String')) returns contents of UserName as a double


% --- Executes during object creation, after setting all properties.
function UserName_CreateFcn(hObject, eventdata, handles)
% hObject    handle to UserName (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


function Password_Callback(hObject, eventdata, handles)
% hObject    handle to Password (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Password as text
%        str2double(get(hObject,'String')) returns contents of Password as a double

% --- Executes during object creation, after setting all properties.
function Password_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Password (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



% --- Executes on button press in NoController.
function NoController_Callback(hObject, eventdata, handles)
	%
	load('handles');
	%
	set(handles.MPC,	'Value',0);
	set(handles.PID,	'Value',0);
	set(handles.SMPC,	'Value',0);
	%
	set(handles.PIDPanel,			'Visible', 'off');
	set(handles.NoControllerPanel,	'Visible', 'on');
	set(handles.MPCPanel,			'Visible', 'off');
	%
	handles.tGUIParameters.strController	= 'NO';
	%
	save('handles');
	%
% end function


% --- Executes on button press in PID.
function PID_Callback(hObject, eventdata, handles)
	%
	load('handles');
	%
	set(handles.MPC,				'Value', 0);
	set(handles.NoController,		'Value', 0);
	set(handles.SMPC,				'Value', 0);
	%
	set(handles.PIDPanel,			'Visible', 'on');
	set(handles.NoControllerPanel,	'Visible', 'off');
	set(handles.MPCPanel,			'Visible', 'off');
	%
	handles.tGUIParameters.strController	= 'PID';
	%
	save('handles');
	%
% end function

% --- Executes on button press in MPC.
function MPC_Callback(hObject, eventdata, handles)
	%
	load('handles');
	%
	set(handles.PID,				'Value', 0);
	set(handles.NoController,		'Value', 0);
	set(handles.SMPC,				'Value', 0);
	%
	set(handles.PIDPanel,			'Visible', 'off');
	set(handles.NoControllerPanel,	'Visible', 'off');
	set(handles.MPCPanel,			'Visible', 'on');
	%
	handles.tGUIParameters.strController	= 'MPC';
	%
	save('handles');
	%
% end function

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

% --- Executes on button press in SMPC.
function SMPC_Callback(hObject, eventdata, handles)
	%
	load('handles');
	%
	set(handles.PID,				'Value', 0);
	set(handles.NoController,		'Value', 0);
	set(handles.MPC,				'Value', 0);
	%
	set(handles.PIDPanel,			'Visible', 'off');
	set(handles.NoControllerPanel,	'Visible', 'off');
	set(handles.MPCPanel,			'Visible', 'on');
	%
	handles.tGUIParameters.strController	= 'SMPC';
	%
	save('handles');
	%
% end function

% Hint: get(hObject,'Value') returns toggle state of SMPC

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


% --- Executes on button press in StartController.
function StartController_Callback(hObject, eventdata, handles)
% hObject    handle to StartController (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


% --- Executes on button press in StopController.
function StopController_Callback(hObject, eventdata, handles)
% hObject    handle to StopController (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


function Ventilation_Callback(hObject, eventdata, handles)
% hObject    handle to Ventilation (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Ventilation as text
%        str2double(get(hObject,'String')) returns contents of Ventilation as a double


% --- Executes during object creation, after setting all properties.
function Ventilation_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Ventilation (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

function Cooling_Callback(hObject, eventdata, handles)
% hObject    handle to Cooling (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Cooling as text
%        str2double(get(hObject,'String')) returns contents of Cooling as a double


% --- Executes during object creation, after setting all properties.
function Cooling_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Cooling (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

function Radiator_Callback(hObject, eventdata, handles)
% hObject    handle to Radiator (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Radiator as text
%        str2double(get(hObject,'String')) returns contents of Radiator as a double


% --- Executes during object creation, after setting all properties.
function Radiator_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Radiator (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

function KP_Callback(hObject, eventdata, handles)
% hObject    handle to KP (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of KP as text
%        str2double(get(hObject,'String')) returns contents of KP as a double


% --- Executes during object creation, after setting all properties.
function KP_CreateFcn(hObject, eventdata, handles)
% hObject    handle to KP (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

function KI_Callback(hObject, eventdata, handles)
% hObject    handle to KI (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of KI as text
%        str2double(get(hObject,'String')) returns contents of KI as a double


% --- Executes during object creation, after setting all properties.
function KI_CreateFcn(hObject, eventdata, handles)
% hObject    handle to KI (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

function KD_Callback(hObject, eventdata, handles)
% hObject    handle to KD (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of KD as text
%        str2double(get(hObject,'String')) returns contents of KD as a double


% --- Executes during object creation, after setting all properties.
function KD_CreateFcn(hObject, eventdata, handles)
% hObject    handle to KD (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
