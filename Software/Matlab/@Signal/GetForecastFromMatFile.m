function [ afValues, afTimes ] = GetForecastFromMatFile( tRequestedSignal )
	%
	% initialization
	afValues 	= [];
	afTimes 	= [];
	tSignalsIDs	= Signal.GetSignalsIDs();
	tDevicesIDs	= Signal.GetDevicesIDs();
	%
		try %
		%
		if		( tRequestedSignal.iSignalID > tSignalsIDs.iForecastedOccupancyCurrent && tRequestedSignal.iSignalID < 51000 ) ...
			&&	( tRequestedSignal.iDeviceID == tDevicesIDs.iA225ExpectedValuesForecast )
			%
			% the requested signal is an occupancy forecast
			%
			try %
				%
				load('../../Datasets/weekly_measured_occupancy_profile.mat');
				%
				[ afValues, afTimes ] = tRequestedSignal.GetOccupancyFromMatFile( tSignal );
				%
			catch exception1
				%
				disp(exception1.message);
				warning('Unable to load the forecasted occupancy');
				%
			end;% catch
			%
			%
			
			% TODO: add the case of radiation forecasts!
			
			%
		else%
			%
			warning('Cases not yet studied and included in this function');
			%
		end;% end of the considered cases
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('tConnection.GetFromServer: caught an exception');
		%
	end;% end catch
	%
end % function