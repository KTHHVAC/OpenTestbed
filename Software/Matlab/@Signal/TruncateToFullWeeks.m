function TruncateToFullWeeks( tSignal )
	%
	% DEBUG
	if( tSignal.bPrintDebugInformation )
		%
		fprintf('truncation to full weeks of signal %s:\n', tSignal.strDescription);
		fprintf('initial starting time: %s\n', Time.JulianDateToString( tSignal.afTimes(1) ){1});
		fprintf('initial ending time:   %s\n', Time.JulianDateToString( tSignal.afTimes(end) ){1});
		%
	end;%
	%
	% indexes of the first samples of the days
	aiSundayMidnights	= Time.FindSundayMidnights( tSignal.afTimes );
	%
	% DEBUG
	if( tSignal.bPrintDebugInformation )
		%
		fprintf('Sunday midnights samples:\n');
		%
		for iMidnight = 1:numel( aiSundayMidnights );
			%
			fprintf('%s\n', Time.JulianDateToString( tSignal.afTimes( aiSundayMidnights(iMidnight) ) ){1});
			%
		end;%
		%
	end;%
	%
	% in case of no midnights or only one midnight, then remove all the samples and return
	if(  numel(aiSundayMidnights) < 2  )
		%
		tSignal.Reset();
		%
		% DEBUG
		if( tSignal.bPrintDebugInformation )
			%
			warning('there are no full weeks in the considered signal -- I am resetting it!!\n');
			%
		end;%
		%
		return;
		%
	end;%
	%
	% for readability, get the correct indexes
	iFirstSample	= aiSundayMidnights(1);
	iLastSample		= aiSundayMidnights(end) - 1;
	%
	% truncated signals
	tSignal.afTimes			= tSignal.afTimes(iFirstSample:iLastSample);
	tSignal.afValues		= tSignal.afValues(iFirstSample:iLastSample);
	tSignal.afInaccuracies	= tSignal.afInaccuracies(iFirstSample:iLastSample);
	%
	% DEBUG
	if( tSignal.bPrintDebugInformation )
		%
		fprintf('final starting time:  %s\n', Time.JulianDateToString( tSignal.afTimes(1) ){1});
		fprintf('final ending time:    %s\n', Time.JulianDateToString( tSignal.afTimes(end) ){1});
		%
	end;%
	%
end % function

