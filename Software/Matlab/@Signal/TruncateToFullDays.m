function TruncateToFullDays( tSignal )
	%
	% DEBUG
	if( tSignal.bPrintDebugInformation )
		%
		fprintf('truncation to full days of signal %s:\n', tSignal.strDescription);
		fprintf('initial starting time: %s\n', Time.JulianDateToString( tSignal.afTimes(1) ){1});
		fprintf('initial ending time:   %s\n', Time.JulianDateToString( tSignal.afTimes(end) ){1});
		%
	end;%
	%
	% indexes of the first samples of the days
	aiMidnights	= Time.FindMidnights( tSignal.afTimes );
	%
	% DEBUG
	if( tSignal.bPrintDebugInformation )
		%
		fprintf('midnights samples:\n');
		%
		for iMidnight = 1:numel( aiMidnights );
			%
			fprintf('%s\n', Time.JulianDateToString( tSignal.afTimes( aiMidnights(iMidnight) ) ){1});
			%
		end;%
		%
	end;%
	%
	% in case of no midnights or only one midnight, then remove all the samples and return
	if(  numel(aiMidnights) < 2  )
		%
		tSignal.Reset();
		%
		% DEBUG
		if( tSignal.bPrintDebugInformation )
			%
			warning('there are no full days in the considered signal -- I am resetting it!!\n');
			%
		end;%
		%
		return;
		%
	end;%
	%
	% for readability, get the correct indexes
	iFirstSample	= aiMidnights(1);
	iLastSample		= aiMidnights(end) - 1;
	%
	% truncated signals
	tSignal.afTimes			= tSignal.afTimes(iFirstSample:iLastSample);
	tSignal.afValues		= tSignal.afValues(iFirstSample:iLastSample);
	tSignal.afInaccuracies	= tSignal.afInaccuracies(iFirstSample:iLastSample);
	%
	% DEBUG
	if( tSignal.bPrintDebugInformation )
		%
		fprintf('final starting time:  %s\n', Time.JulianDateToString( tSignal.afTimes(1) ){1});
		fprintf('final ending time:    %s\n', Time.JulianDateToString( tSignal.afTimes(end) ){1});
		%
	end;%
	%
end % function

