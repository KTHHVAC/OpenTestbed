classdef Signal < handle
	%
	% ---------------------------------------------------------------------
	properties
		%
		iSignalID;
		iDeviceID;
		%
		afTimes;
		afValues;
		afInaccuracies;
		%
		afX;
		afY;
		afZ;
		%
		afInvalidDataMarkers;
		fInvalidDataLowerBound;
		fInvalidDataUpperBound;
		%
		strDescription;
		strLocation;
		%
	end %
	%
	%
	% ---------------------------------------------------------------------
	methods
		%
		% standard constructor
		function atSignals = Signal( iNumberOfSignals )
		if( nargin > 0 )
			%
			atSignals(iNumberOfSignals).afTimes = [];
			%
		end;% nargin > 0
		end % standard constructor
		%
	end %
	%
	%
	% ---------------------------------------------------------------------
	methods(Static = true)
		%
		tSignalsIDs 								= GetSignalsIDs();
		tDevicesIDs 								= GetDevicesIDs();
		%
		bIsAMote 									= IsAMote( iDeviceID );
		bIsAPeopleCounter 							= IsAPeopleCounter( iDeviceID );
		bIsAPLC 									= IsAPLC( iDeviceID );
		bIsACurrentWeather 							= IsACurrentWeather( iSignalID, iDeviceID );
		bIsAWeatherForecast							= IsAWeatherForecast( iSignalID, iDeviceID );
		iIndex										= GetIndexOfDatumInTCPPacket( iSignalID, iDeviceID );
		%
		strDataType									= SignalAndDeviceIDsToHVACServerDataType(iSignalID, iDeviceID);
		%
		strDescription								= GetDescription( iSignalID, iDeviceID );
		[ fInitialJulianDate, fFinalJulianDate ]	= GetTimeSpan( atSignals );
		%
		fClosestElement 							= FindClosestElement( afDomain, fOriginalElement );
		tMergedSignal								= Merge( atOriginalSignals, fSmoothingParameter );
		fValue										= LoadValueFromFile( strFileName );
		iIndex										= FindSignalIndex( atSignals , iSignalID , iDeviceID );
		%
	end	%
	%
	%
end %

