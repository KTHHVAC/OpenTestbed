function [ afValues, afTimes ] = GetSolarRadiationFromMatFile(							...
													tSignal ,							...
													strPathSolarRadiationConverter,		...
													strPathExpectedCloudCover )
	%
	afValues	= []; 
	afTimes		= [];
	%
	try %
		%
		% load the object 'tConverter'
		load(strPathSolarRadiationConverter);
		%
		% load the value 'fExpectedCloudCover'
		load(strPathExpectedCloudCover);
		%
		iNumberOfHourlyNeededSamples = mod( tSignal.iSignalID, 100 );
		%
		fCurrentJulianDate			= Time.GetCurrentJulianDate();
		%
		afTimes = [			fCurrentJulianDate								...+ Time.GetJulianHour()	...
						:	Time.GetJulianHour()														...
						:	fCurrentJulianDate + Time.GetJulianHour() * iNumberOfHourlyNeededSamples	];
		%							
		tMaximalSolarRadiationForecast	= tConverter.GetMaximalRadiationSignal( afTimes );
		afMaximalRadiations				= tMaximalSolarRadiationForecast.afValues;
		%
		afSkyCovers					= ones( size(afMaximalRadiations) ) * fExpectedCloudCover;
		%
		afValues = tConverter.Convert( afSkyCovers, afMaximalRadiations );
		%
		% check on the values that cannot be higher than the maximal
		% possible radiation
		afValues( afValues > afMaximalRadiations ) = afMaximalRadiations( afValues > afMaximalRadiations );
		%
	catch exception
		%
		disp(exception.message);
		warning('Error in the loading of the forecasted solar radiation from the mat file');
		%
	end;% end catch
	%
end % end function
			
