function tResampledSignal = ResampleAt(	tOriginalSignal,				...
										afNewSamplingTimesInJulianDates	)
	%
	% allocate the new object and copy the old properties
	tResampledSignal = tOriginalSignal.Copy();
	%
	% put some NaNs on the new sampling times
	tResampledSignal.Insert( NaN( numel(afNewSamplingTimesInJulianDates), 1 ),	...
							afNewSamplingTimesInJulianDates,					...
							false												);% this prevents that one resamples a signal on its own sampling times and lose all the information
	%
	% interpolate them
	tResampledSignal.InterpolateInvalidData();
	%
	% select only the desired times
	[afValues, afInaccuracies] = tResampledSignal.ExtractSamplesAt( afNewSamplingTimesInJulianDates );
	%
	tResampledSignal.afValues		= afValues;
	tResampledSignal.afTimes		= afNewSamplingTimesInJulianDates;
	tResampledSignal.afInaccuracies	= afInaccuracies;
	%
	% put the signals as columns
	tResampledSignal.afValues =									...
		reshape(	tResampledSignal.afValues,					...
					numel( tResampledSignal.afValues ), 1		);
	tResampledSignal.afTimes =									...
		reshape(	tResampledSignal.afTimes,					...
					numel( tResampledSignal.afTimes ), 1		);
	tResampledSignal.afInaccuracies =							...
		reshape(	tResampledSignal.afInaccuracies,			...
					numel( tResampledSignal.afInaccuracies ), 1	);
	%
end %

