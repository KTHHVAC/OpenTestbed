% function Update( tSignal, tTCPConnection )
%
function Update( tSignal, tTCPConnection )
	%
	try %
		%
		iSourceForUpdate = tSignal.ChooseSourceForUpdate();
		%
		switch iSourceForUpdate
			%
			case 1 % from the server
				%
				[ afValues, afTimes ] = tTCPConnection.GetFromServer( tSignal.iSignalID, tSignal.iDeviceID );
				%
			case 2 % from a mat file
				%
				[ afValues, afTimes ] = tSignal.GetForecastFromMatFile();
				%
			case 3 % from a lookup table or a txt file
				%
				[ afValues, afTimes ] = tSignal.GetFromTxtFileOrLookUpTable();
				%
			case 4 % sinusoidal forecast that depends on the current value and the time of the day
				%
				[ afValues, afTimes ] = tSignal.GetSinusoidalForecasts( tTCPConnection );
				%
			otherwise
				%
				error('Error occurred: the chosen update source does not exist');
				%
		end		%
		%
		%
		if( numel( afValues ) > 0 )
			%
			tSignal.Insert( afValues, afTimes, true ); % the true says "overwrite old samples with the very same julian date"
			%
		else%
			%
			warning('signal %d - %d (%s) did not update its values', tSignal.iSignalID, tSignal.iDeviceID, tSignal.strDescription );
			%
		end;%
		%
	catch exception
		%
		disp(exception.message)
		warning('unable to update the signal')
		%
	end;% end catch
	%
end % function



%% BACKUP
%
% 	try %
% 		%
% 		tSignalsIDs	= Signal.GetSignalsIDs();
% 		tDevicesIDs	= Signal.GetDevicesIDs();
% 		%
% 		if (	(																						...
% 					(	tDevicesIDs.iA202LocalLookUpTableForecast <=	tSignal.iDeviceID			)	...
% 				&&																						...
% 					(	tSignal.iDeviceID <= tDevicesIDs.iEXTERNALLocalLookUpTableWeatherForecast	)	...
% 				)																						...
% 				||	( tSignal.iDeviceID == tDevicesIDs.iManualPeopleCounter	)							...
% 				||	( tSignal.iSignalID == tSignalsIDs.iExternalLightingTop )							)
% 			%
% 			if	(	(		tSignal.iSignalID >= tSignalsIDs.iForecastedExternalLightingTopCurrent		...
% 						&&	tSignal.iSignalID <= tSignalsIDs.iForecastedExternalLightingTop8h		)	...
% 					||	( tSignal.iSignalID == tSignalsIDs.iExternalLightingTop )					)
% 				%
% 				[ afValues, afTimes ] = tSignal.GetFromFileOrLookUpTable(); 
% 				%
% 			else%
% 				%
% 				[ afValues, afTimes ] = tSignal.GetRoomTemperatureSinusoidalForecasts( tTCPConnection );
% 				%
% 				%
% 			end;%
% 			%
% 		elseif (																						...
% 					(	tDevicesIDs.iA202ExpectedValuesForecast <=	tSignal.iDeviceID				)	...
% 				&&																						...
% 					(	tSignal.iDeviceID <= tDevicesIDs.iEXTERNALExpectedValuesForecast			)	...
% 				)																			
% 			%
% 			[ afValues, afTimes ] = tSignal.GetForecastFromMatFile();
% 			%
% 			% 
% 		else%
% 			%
% 			[ afValues, afTimes ] = tTCPConnection.GetFromServer( tSignal.iSignalID, tSignal.iDeviceID );
% 			%
% 		end;% end getting values and times of the signal
% 		%
% 		%
% 		if( numel( afValues ) > 0 )
% 			%
% 			tSignal.Insert( afValues, afTimes, true ); % the true says "overwrite old samples with the very same julian date"
% 			%
% 		else%
% 			%
% 			warning('signal %d - %d (%s) did not update its values', tSignal.iSignalID, tSignal.iDeviceID, tSignal.strDescription );
% 			%
% 		end;%
% 		%
% 	catch exception
% 		%
% 		disp(exception.message)
% 		warning('unable to update the signal')
% 		%
% 	end;% end catch
% 	%