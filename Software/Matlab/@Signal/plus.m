% notice that tSignalB may be a scalar
%
function tSum = plus( tSignalA, tSignalB )
	%
	if( isa(tSignalB, 'Signal') )
		%
		% resample the signals on the same times
		afUnionOfTimes = sort( unique( [ tSignalA.afTimes ; tSignalB.afTimes ] ) );
		%
		tResampledA = tSignalA.ResampleAt( afUnionOfTimes );
		tResampledB = tSignalB.ResampleAt( afUnionOfTimes );
		%
		% we copy the information of the first signal
		tSum = tSignalA.Copy();
		%
		tSum.afTimes 		= afUnionOfTimes;
		tSum.afValues 		= tResampledA.afValues + tResampledB.afValues;
		tSum.afInaccuracies	= max( tResampledA.afInaccuracies, tResampledB.afInaccuracies );
		%
	else%
		%
		tSum = tSignalA.Copy();
		%
		if( numel(tSignalB) ~= 1 )
			%
			warning('+ between signals called in a wrong way! Returning only the first argument');
			%
		else%
			%
			tSum.afValues = tSum.afValues + tSignalB;
			%
		end;%
		%
	end;%
	%
end % function

