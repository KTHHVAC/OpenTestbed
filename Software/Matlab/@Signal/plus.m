% notice that tSignalB may be a scalar
%
function tSum = plus( tSignalA, tSignalB )
	%
	if( isa(tSignalB, 'Signal') )
		%
		% copy the information of the first signal
		tSum = tSignalA.Copy();
		%
		% if only A has samples...
		if(		( numel(tSignalA.afTimes) >  0 )	...
			&&	( numel(tSignalB.afTimes) == 0 )	)
			%
			return;
			%
		elseif(	( numel(tSignalA.afTimes) == 0 )	...
			&&	( numel(tSignalB.afTimes) >  0 )	)
			%
			% if only B has samples...
			tSum.afTimes 		= tSignalB.afTimes;
			tSum.afValues 		= tSignalB.afValues;
			tSum.afInaccuracies = tSignalB.afInaccuracies;
			%
		elseif(	( numel(tSignalA.afTimes) == 0 )	...
			&&	( numel(tSignalB.afTimes) == 0 )	)
			%
			% if nobody has samples...
			return;
			%
		else%
			%
			% if both have samples...
			%
			% if the two signals are separated in time then just merge them
			if( tSignalA.afTimes(end) < tSignalB.afTimes(1) )
				%
				tSum.afTimes 		= [ tSignalA.afTimes ; tSignalB.afTimes ];
				tSum.afValues 		= [ tSignalA.afValues ; tSignalB.afValues ];
				tSum.afInaccuracies = [ tSignalA.afInaccuracies ; tSignalB.afInaccuracies ];
				%
			elseif( tSignalB.afTimes(end) < tSignalA.afTimes(1) )
				%
				tSum.afTimes 		= [ tSignalB.afTimes ; tSignalA.afTimes ];
				tSum.afValues 		= [ tSignalB.afValues ; tSignalA.afValues ];
				tSum.afInaccuracies = [ tSignalB.afInaccuracies ; tSignalA.afInaccuracies ];
				%
			else%
				%
				% otherwise, resample the signals on the same times
				afUnionOfTimes = sort( unique( [ tSignalA.afTimes ; tSignalB.afTimes ] ) );
				%
				tResampledA = tSignalA.ResampleAt( afUnionOfTimes );
				tResampledB = tSignalB.ResampleAt( afUnionOfTimes );
				%
				tSum.afTimes 		= afUnionOfTimes;
				tSum.afValues 		= tResampledA.afValues + tResampledB.afValues;
				tSum.afInaccuracies	= max( tResampledA.afInaccuracies, tResampledB.afInaccuracies );
				%
			end;% if / elseif on the fact that signals should be just merged or not
			%
		end;% if / elseif on who has at least one sample
		%
	else%
		%
		tSum = tSignalA.Copy();
		%
		if( numel(tSignalB) ~= 1 )
			%
			warning('+ between signals called in a wrong way! Returning only the first argument');
			%
		else%
			%
			tSum.afValues = tSum.afValues + tSignalB;
			%
		end;%
		%
	end;%
	%
end % function

