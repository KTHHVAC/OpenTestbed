% function [afTimes, afValues] = GetOneStepPredictionError( tSignal, tForecastedSignal, fSamplingTime )
%
% tForecastedSignal is the signal downloaded from the database that gives
% the 1 hour prediction (the prediction for the very next hour, i.e. if it
% is 12:50 it gives the prediction for 13:00)
%
function [afTimes, afValues] = GetOneStepPredictionError( tSignal, tForecastedSignal, fSamplingTimeInJulianDate )
	%
	%
	afInterestedSampleTimes = [ tSignal.afTimes(1) : fSamplingTimeInJulianDate : tSignal.afTimes(end) ];
	iNumberOfSamples		= numel(afInterestedSampleTimes);
	%
	afMeasuredValues		= tSignal.ExtractSamplesAt( afInterestedSampleTimes );
	%
	tOneStepPredictor		= Signal();
	%
	% calculate the one step predictions x(t|t-1), insert in a Signal in
	% the next sample time ( in order to do x(t|t-1)-x(t) )
	for iSampleTime = 1 : iNumberOfSamples
		%
		fCurrentSampleTime			= afInterestedSampleTimes(iSampleTime);
		fNextInterestedSampleTime	= afInterestedSampleTimes(iSampleTime) + fSamplingTimeInJulianDate;
		fNextHour					= Time.GetNextHour( fCurrentSampleTime );
		%
		fCurrentMeasuredValue		= tSignal.ExtractSamplesAt( fCurrentSampleTime );
		fCurrentNextHourForecast	= tForecastedSignal.ExtractSamplesAt( fCurrentSampleTime );
		%
		tTempSignal = Signal();
		tTempSignal.Insert( [fCurrentMeasuredValue	fCurrentNextHourForecast],	...
							[fCurrentSampleTime		fNextHour]					);
		fNextStepPrediction = tTempSignal.ExtractSampleAt( fNextInterestedSampleTime );
		%
		tOneStepPredictor.Insert( fNextStepPrediction, fNextInterestedSampleTime );
		%
	end;%
	%
	tOneStepPredictorError	= Signal();
	tOneStepPredictorError	= tOneStepPredictor - tSignal;
	%
	afTimes		= tOneStepPredictorError.afTimes;
	afValues	= tOneStepPredictorError.afValues;
	%
end %

% If it is preferred the output can be set as a Signal directly tOneStepPredictorError
