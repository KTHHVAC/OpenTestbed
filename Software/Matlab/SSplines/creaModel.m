
function [eta,M,D,S]=creaModel(eta,nv,lab,m);

for i=1:m;
    F(i,:)=eta(:,:,i)';
end
	
% DEBUG
fprintf('%s\n', lab)

if lab=='yy'%c'e' la parte autoregressiva e gli ingressi
    M = idpoly([1 -eta(:,:,1)'],[zeros(m-1,1) F(2:m,:)],1,1,ones(m-1,1),nv,1);
    g=eta(:,:,1)';
    g=[0 g zeros(1,200)];
    g=g(1:200);
    n=size(g,2);
    e=[1 zeros(1,n-1)];
    g=-g+e;
    gg=sqrt(nv)*filter(1,g,e);
    n=300-max(size(gg));
    S=[gg zeros(1,n)]';%parte stocastica comprendente nv
    for i=2:m;
        ff=eta(:,:,i)';
        n=300-max(size(ff))-1;
        ff=[0 ff zeros(1,200+n)];
        ff=ff(1:200);
        D(:,i-1)=filter(ff,1,gg)';%parte deterministica
    end
elseif lab=='ny'%non c'e' la parte autoregressiva, solo ingressi
    M = idpoly([1],[zeros(m,1) F(1:m,:)],1,1,ones(m,1),nv,1);
    g=eta(:,:,1)';
    g=[0 g zeros(1,200)];
    g=g(1:200);
    n=size(g,2);
    S=[sqrt(nv) zeros(1,n)]';%parte stocastica comprendente nv
    for i=1:m; 
        D(:,i)=eta(:,:,i)';%parte deterministica
    end
%     etat(:,:,1)=[zeros(p,1)];%porto m a m+1 per uniformare l'eta a quello ottenuto nel caso noe
%     for i=1:m;
%         etat(:,:,i+1)=eta(:,:,i);
%     end
%     eta=etat;
elseif lab=='yn'%c'e' solo la parte autoregressiva
    M = idpoly([1 -eta(:,:,1)'],0,1,1,1,nv,1);
    g=eta(:,:,1)';
    g=[0 g zeros(1,200)];
    g=g(1:200);
    n=size(g,2);
    e=[1 zeros(1,n-1)];
    g=-g+e;
    gg=sqrt(nv)*filter(1,g,e);
    n=300-max(size(gg));
    S=[gg zeros(1,n)]';%parte stocastica comprendente nv
    D=0*S;
end
%YY=impulse(M);
