
%Returns
% W1 W1ytest W1ref W1ytestref           TC on future data with WN or same input stats as training 
% W2 W2ytest W2ref W2ytestref           SS on future data with WN or same input stats as training
% WDC WDCytest WDCref WDCytestref       DC on future data with WN or same input stats as training

% WOr WOrytest WOr2 WOr2ytest           Or=tuned on future data generated by WN
%                                       Or2=tuned on future data generated by training stats    
%                                       WOr>=WOr2, WOrytest<=WOr2ytest
% Wsub1,Wsub1ytest,Wsub2,Wsub2ytest     N4sid,PEM
% WAIC WAICytest                        AIC on future data with WN or same input stats as training 
% WCV  WCVytest                         CV on future data with WN or same input stats as training 
% W1oe W1oeytest                        PEM+TC on future data with WN or same input stats as training 
% W1oeb W1oebytest                      Avg(TC,PEM+TC) on future data with WN or same input stats as training 

clear all;close all;randn('state',sum(100*clock))

%cd Results
%load('SimN200inp3(2).mat')
load('/Users/giapi/Desktop/DT#1/ResultsNullCI/SimN200inp3(2).mat')
cd /Users/giapi/Desktop/DT#1


for jj=1:niter;jj

    clear numG numH den b U
    f=accf(1:nf,jj);di=size(accdatt,1)-size(accdat,1);
    y=accdat(1:N,1,jj);yy=accdatt(1:(N+di),1,jj);ytest=accdatTest(:,1,jj)';
    U=accdat(1:N,2,jj);UU=accdatt(1:(N+di),2,jj);Utest=accdatTest(:,2,jj)';

    dat=iddata(y,U);%the training set
    datDC=iddata(yy,UU);%the training set for DC
    datTr=iddata(y(1:N/2),U(1:N/2));
    datVal=iddata(y((N/2+1):end),U((N/2+1):end));
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%% PEM with AIC,CV and Oracle %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %clear L1 L2 ll1 Or0 Or1 Or2 RROrM RROr2M DOr SOr
    t=0;mPEM=20;
    for i1=1:mPEM
        for i2=i1:mPEM;
            t=t+1;
            if CI==0
                Mpem{t}=oe(dat,[i1 i2 1],'LimitError',0,'InitialState','Zero');
                MpemTr=oe(datTr,[i1 i2 1],'LimitError',0,'InitialState','Zero');
            else
                Mpem{t}=oe(dat,[i1 i2 1],'LimitError',0);
                MpemTr=oe(datTr,[i1 i2 1],'LimitError',0);
            end

            npar=max(size(Mpem{t}.ParameterVector))+1;
            ndat=Mpem{t}.EstimationInfo.DataLength;
            predd=predict(Mpem{t},dat,1);predd=iddata(predd);predd=predd.y;
            RM=sum((predd-y).^2);
            LAIC(t)=ndat*log(RM/ndat)+log(ndat)*(npar+i2*(CI~=0));%AIC%aic(Mpem); %ndat*log(RM/ndat)+[ndat*(ndat+npar)]/[ndat-npar-2]
            LAIC2(t)=ndat*log(RM/ndat)+2*(npar+i2*(CI~=0));%AIC%aic(Mpem); %ndat*log(RM/ndat)+[ndat*(ndat+npar)]/[ndat-npar-2]
            LAIC3(t)=ndat*log(RM/ndat)+2*(npar+i2*(CI~=0))+[2*(npar+i2*(CI~=0))*(npar+i2*(CI~=0)+1)]/[ndat-npar-i2*(CI~=0)-1];
        
            preddVal=predict(MpemTr,datVal,1,'z');preddVal=iddata(preddVal);preddVal=preddVal.y;
            LCV(t)=sum((preddVal-y((N/2+1):end)).^2);

            [WOR(t),WORytest(t)]=CompFIT(Mpem{t},f,Utest,ytest);

        end
    end
    %Oracle (WOr>=WOr2, WOrytest<=WOr2ytest)
    [WWOr(jj),aaccOr(jj)]=max(WOR);
    WWOrytest(jj)=WORytest(aaccOr(jj));
    [WWOr2ytest(jj),aaccOr2(jj)]=max(WORytest);
    WWOr2(jj)=WOR(aaccOr2(jj));

    %results from AIC
    [q,aaccAIC(jj)]=min(LAIC);
    WWAIC(jj)=WOR(aaccAIC(jj));
    WWAICytest(jj)=WORytest(aaccAIC(jj));

    %results from AIC2
    [q,aaccAIC2(jj)]=min(LAIC2);
    WWAIC2(jj)=WOR(aaccAIC2(jj));
    WWAIC2ytest(jj)=WORytest(aaccAIC2(jj));

    %results from AIC3
    [q,aaccAIC3(jj)]=min(LAIC3);
    WWAIC3(jj)=WOR(aaccAIC3(jj));
    WWAIC3ytest(jj)=WORytest(aaccAIC3(jj));
    
    %results from CV
    [q,aaccCV(jj)]=min(LCV);
    WWCV(jj)=WOR(aaccCV(jj));
    WWCVytest(jj)=WORytest(aaccCV(jj));

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end

