
%Returns
% W1 W1ytest W1ref W1ytestref           TC on future data with WN or same input stats as training 
% W2 W2ytest W2ref W2ytestref           SS on future data with WN or same input stats as training
% WDC WDCytest WDCref WDCytestref       DC on future data with WN or same input stats as training

% WOr WOrytest WOr2 WOr2ytest           Or=tuned on future data generated by WN
%                                       Or2=tuned on future data generated by training stats    
%                                       WOr>=WOr2, WOrytest<=WOr2ytest
% Wsub1,Wsub1ytest,Wsub2,Wsub2ytest     N4sid,PEM
% WAIC WAICytest                        AIC on future data with WN or same input stats as training 
% WCV  WCVytest                         CV on future data with WN or same input stats as training 
% W1oe W1oeytest                        PEM+TC on future data with WN or same input stats as training 
% W1oeb W1oebytest                      Avg(TC,PEM+TC) on future data with WN or same input stats as training 

clear all;close all;randn('state',sum(100*clock))

cd Results
load('SimN200inpWN.mat')
cd ..


for jj=1:niter;jj

    clear numG numH den b U
    f=accf(1:nf,jj);di=size(accdatt,1)-size(accdat,1);
    y=accdat(1:N,1,jj);yy=accdatt(1:(N+di),1,jj);%ytest=accdatTest(:,1,jj)';
    U=accdat(1:N,2,jj);UU=accdatt(1:(N+di),2,jj);%Utest=accdatTest(:,2,jj)';

    dat=iddata(y,U);%the training set
    datDC=iddata(yy,UU);%the training set for DC
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%% STABLE SPLINE ESTIMATOR%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    lab='ny';%'yy' means that it is required also to estimate the noise model
    LP=0;LP2=0;%these settings disable some special sparsification options
    red=length(yy)-p;%number of data used to estimate the hyperparameters (=n means that all the data are used)
    mb=1;%mb = 1 only one \beta to estimate
    cn=0;%dimension of \theta (number of poles with negative real part to be introduced)
    mv=0;%mv = 1 only one \lambda to estimate, otherwise one for each predictor impulse response
    
    %OrderKernel=1;
    %[Mnpe,ipere,A,S1,Ak1,Mref]=SSpline(yy,UU,p,lab,mv,mb,cn,red,LP,LP2);
    %pref=size(Mref.B,2)-1;
    pref=100;
    
    options=impulseestOptions('RegulKernel','DC');AlsoDC=1;
    Mnpe=impulseest(datDC,p,1,options);
    [WDC(jj),WDCytest(jj)]=CompFIT(Mnpe,f,Utest,ytest);
    Mnpe=impulseest(datDC,pref,1,options);
    [WDCref(jj),WDCytestref(jj)]=CompFIT(Mnpe,f,Utest,ytest);
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%RESULTS%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    if AlsoDC==1;
        disp(['     Or       Or2     Avg(Oe,SS)  Oe+SS       SS       SS2       DC       BIC       CV'])
        disp([mean(WOr)  mean(WOr2)   mean(W1oeb)    mean(W1oe)   mean(W1ref)  mean(W2ref)   mean(WDCref)  mean(WAIC)  mean(WCV)])

        disp(['     Or       Or2     Avg(Oe,SS)  Oe+SS       SS       SS2       DC       BIC       CV'])
        disp([mean(WOrytest)  mean(WOr2ytest)   mean(W1oebytest)    mean(W1oeytest)   mean(W1ytestref)  mean(W2ytestref)   mean(WDCytestref)  mean(WAICytest)  mean(WCVytest)])
    else
        disp(['     Or       Or2     Avg(Oe,SS)  Oe+SS       SS       SS2       BIC       CV'])
        disp([mean(WOr)  mean(WOr2)   mean(W1oeb)    mean(W1oe)   mean(W1ref)  mean(W2ref)   mean(WAIC)  mean(WCV)])

        disp(['     Or       Or2     Avg(Oe,SS)  Oe+SS       SS       SS2       BIC       CV'])
        disp([mean(WOrytest)  mean(WOr2ytest)   mean(W1oebytest)    mean(W1oeytest)   mean(W1ytestref)  mean(W2ytestref)   mean(WAICytest)  mean(WCVytest)])
    end
    disp(['  n4sid      PEM'])
    disp([mean(Wsub1)  mean(Wsub2)])
    disp(['n4sidytest  PEMytest'])
    disp([mean(Wsub1ytest)   mean(Wsub2ytest)])
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
end

%Returns
% W1 W1ytest W1ref W1ytestref           TC on future data with WN or same input stats as training 
% W2 W2ytest W2ref W2ytestref           SS on future data with WN or same input stats as training
% WDC WDCytest WDCref WDCytestref       DC on future data with WN or same input stats as training

% WOr WOrytest WOr2 WOr2ytest           Or=tuned on future data generated by WN
%                                       Or2=tuned on future data generated by training stats    
%                                       WOr>=WOr2, WOrytest<=WOr2ytest
% Wsub1,Wsub1ytest,Wsub2,Wsub2ytest     N4sid,PEM
% WAIC WAICytest                        AIC on future data with WN or same input stats as training 
% WCV  WCVytest                         CV on future data with WN or same input stats as training 
% W1oe W1oeytest                        PEM+TC on future data with WN or same input stats as training 
% W1oeb W1oebytest                      Avg(TC,PEM+TC) on future data with WN or same input stats as training 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%% PLOTS FOR SURVEY %%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
close all
figure(1);
lab={'Oe+Or1' 'Oe+Or2' 'TC' 'SS' 'DC' 'Oe+CV'};
boxplot([WOr' WOr2' W1ref'  W2ref' WDCref' WCV'],'labels',lab);
a=axis;a(3)=min(WOr)-0.5;a(4)=100;axis(a);h = findobj(gca,'Type','text');set(h,'Fontsize',13);ylabel('Fits')
disp(sum([WOr' WOr2' W1ref'  W2ref' WDCref' WCV']<a(3)))
figure(2);
boxplot([WOrytest' WOr2ytest' W1ytestref'  W2ytestref' WDCytestref' WCVytest'],'labels',lab);
a=axis;a(3)=min(WOr)-0.5;a(4)=100;axis(a);h = findobj(gca,'Type','text');set(h,'Fontsize',13);ylabel('Fits')
disp(sum([WOrytest' WOr2ytest' W1ytestref'  W2ytestref' WDCytestref' WCV']<a(3)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%% PLOTS FOR ALCOSP %%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
figure(3);
lab={'Oe+Or1' 'Oe+Or2' 'Avg(Oe+KB,KB)' 'Oe+KB' 'KB' 'Oe+CV'};
boxplot([WOr' WOr2' W1oeb'  W1oe' W1ref' WCV'],'labels',lab);
a=axis;a(3)=min(WOr)-0.5;a(4)=100;axis(a);h = findobj(gca,'Type','text');set(h,'Fontsize',13);ylabel('Fits')
disp('Oe+KB as Oracle 1 (input WN)')
disp(100*sum(accSS1==accOr)/length(accSS1))%W1oe as Oracle for WN
disp(sum([WOr' WOr2' W1oeb'  W1oe' W1ref' WCV']<a(3)))

figure(4);
boxplot([WOrytest' WOr2ytest' W1oebytest'  W1oeytest' W1ytestref' WCVytest'],'labels',lab);
a=axis;a(3)=min(WOr)-0.5;a(4)=100;axis(a);h = findobj(gca,'Type','text');set(h,'Fontsize',13);ylabel('Fits')
disp('Oe+KB as Oracle 2 (input stats as for training)')
disp(100*sum(accSS1==accOr2)/length(accSS1))%W1oe as Oracle for input as training
disp(sum([WOrytest' WOr2ytest' W1oebytest'  W1oeytest' W1ytestref' WCVytest']<a(3)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 



%     d=[0 0.02:0.02:1];%grid for convex combination
%     Convex Oracle
%     for i=1:length(d);
%         f7=(d(i)*f1+(1-d(i))*f5);
%         Wnum=norm(f-f7);
%         Wvec(i)=100*(1-Wnum/Wden);
%         Wvecc(i)=100*Wnum/norm(f);
%         Y=filter(f7,1,Utest);
%         AA(i)=100*(1-norm(Y-ytest)/norm(ytest-mean(ytest)));
%     end
%     W1Orb(jj)=min(Wvecc);%Convex Oracle
%     [W1Or(jj),D1(jj)]=max(Wvec);
%     W1Orbytest(jj)=max(AA);

