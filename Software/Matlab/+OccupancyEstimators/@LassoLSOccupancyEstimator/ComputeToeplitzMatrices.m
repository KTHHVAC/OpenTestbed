function [aafA, aafB] = GetToeplitzMatrices( tEstimator, iNumberOfSamples )
	%
	% autoregressive part
	iResponsesLength = size(tEstimator.tIdentifiedModel.A, 2) + 1;
	%
	afImpulseResponse =		...
		[ 0		tEstimator.tIdentifiedModel.A(1, 2:end)		zeros(1, iNumberOfSamples - iResponsesLength + 1) ];
	%
	aafA = tril( toeplitz( afImpulseResponse ) );
	%
	%
	%
	% inputs part
	iNumberOfInputs			= numel(tEstimator.tIdentifiedModel.B);
	iResponsesLength		= numel(tEstimator.tIdentifiedModel.B{1}) + 1;
	iImpulseResponsesLength = numel([ tEstimator.tIdentifiedModel.B{1}, zeros(1, iNumberOfSamples - iResponsesLength + 1) ]);
	%
	% storage allocation
	aafB = zeros( iImpulseResponsesLength, iImpulseResponsesLength, iNumberOfInputs );
	%
	for iInputIndex = 1:iNumberOfInputs;
		%
		afImpulseResponse =		...
			[ tEstimator.tIdentifiedModel.B{iInputIndex}	zeros(1, iNumberOfSamples - iResponsesLength + 1) ];
		%
		aafB(:,:,iInputIndex) = tril( toeplitz( afImpulseResponse ) );
		%
	end;%
	%
end % function
