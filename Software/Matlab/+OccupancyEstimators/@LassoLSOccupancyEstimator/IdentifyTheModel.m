% algorithm:
%
% - see the manuscript
%
function IdentifyTheModel(	tEstimator,		...
							aafInputs,		...
							afOutput		)
	%
	fprintf('Starting identifying the model\n');
	%
	iNumberOfInputs = size( aafInputs, 2 );
	%
	switch( tEstimator.strIdentifiedModelType )
		%
		% -----------------------------------------------------------------
		case 'ARX'
			%
			nb = 2;
			na = 1;
			%
			nnb = nb * ones(1, iNumberOfInputs);
			nna = na * ones(1, iNumberOfInputs);
			%
			tEstimator.tIdentifiedModel =				...
				arx(	iddata(	afOutput,		...
								aafInputs	),	...
						[1 nnb nna]						);
		%
		% -----------------------------------------------------------------
		case 'SSplines'
			%
			iImpulseResponsesLength						= 100;  %p
			strtModelStructure							= 'yy';  %lab(armax)
			bImpulseResponsesHaveTheSameVariance		= 0;  % previous:mv
			bImpulseResponsesHaveTheSameNegativeBias	= 1;   % mb
			iNumberOfPolesWithNegativeRealPart			= 0;  % cn
			fHyperparametersTrainingSetSize				= round(size( aafInputs, 1 ) / 5);
			bForceSparsity								= 1;  %LP
			LP2											= 0;
			%
			tIdentifiedModel =										...
				SSpline(											...
					afOutput,										...
					aafInputs,										...
					iImpulseResponsesLength,						...
					strtModelStructure,								...
					bImpulseResponsesHaveTheSameVariance,			...
					bImpulseResponsesHaveTheSameNegativeBias,		...
					iNumberOfPolesWithNegativeRealPart,				...
					fHyperparametersTrainingSetSize,				...
					bForceSparsity,									...
					LP2												);
			%
			tEstimator.tIdentifiedModel = tIdentifiedModel; % we hate matlab
		%
		% -----------------------------------------------------------------
		otherwise
			%
			error('wrong model type')
		%
	end;% switch
	%
	% now it is possible to compute the A, B, and Delta matrices
	[	tEstimator.aafA,							...
		tEstimator.aafB		] =						...
			tEstimator.GetToeplitzMatrices(			...
				tEstimator.iWindowsLengthInSamples	);
	%
	tEstimator.aafDelta = tEstimator.GetDeltaMatrix( tEstimator.iWindowsLengthInSamples );
	%
	% DEBUG
	[~, fFit, ~]	=									...
		compare(	iddata(	afOutput, aafInputs ),		...
					tEstimator.tIdentifiedModel			);
	%
	fprintf('Model identified. Fit = %.2f\n', fFit);
	%
end % function

