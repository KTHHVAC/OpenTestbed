% algorithm:
%
% - see the manuscript
%
function LearnModel( tEstimator )
	%
	fprintf('Started learning the model\n');
	%
	switch( tEstimator.strModelType )
		%
		% -----------------------------------------------------------------
		case 'ARX'
			%
			nb = 2;
			na = 1;
			tEstimator.tEstimatedModel =							...
				arx(	iddata(	tEstimator.aafTrainingOutputs,		...
								tEstimator.aafTrainingInputs	),	...
						[1 [nb nb nb] [na na na]]					);
		%
		% -----------------------------------------------------------------
		case 'SSplines'
			%
			iImpulseResponsesLength						= 100;  %p
			strtModelStructure							= 'yy';  %lab(armax)
			bImpulseResponsesHaveTheSameVariance		= 0;  % previous:mv
			bImpulseResponsesHaveTheSameNegativeBias	= 1;   % mb
			iNumberOfPolesWithNegativeRealPart			= 0;  % cn
			fHyperparametersTrainingSetSize				= round(size( tEstimator.aafTrainingInputs, 1 ) / 5);
			bForceSparsity								= 1;  %LP
			LP2											= 0;
			%
			tEstimatedModel =										...
				SSpline(											...
					tEstimator.aafTrainingOutputs,					...
					tEstimator.aafTrainingInputs,					...
					iImpulseResponsesLength,						...
					strtModelStructure,								...
					bImpulseResponsesHaveTheSameVariance,			...
					bImpulseResponsesHaveTheSameNegativeBias,		...
					iNumberOfPolesWithNegativeRealPart,				...
					fHyperparametersTrainingSetSize,				...
					bForceSparsity,									...
					LP2												);
			%
			tEstimator.tEstimatedModel = tEstimatedModel; % we hate matlab
		%
		% -----------------------------------------------------------------
		otherwise
			%
			error('wrong model type')
		%
	end;% switch
	%
	%
	fprintf('Model learned.\n');
	%
end % function
