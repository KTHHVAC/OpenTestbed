function Estimate(								...
			tEstimator,							...
			tAirInletValveOpeningSignal,		...
			tAirInletTemperatureSignal,			...
			tAirInletCO2Signal,					...
			tRoomCO2Signal,						...
			tRoomTemperatureSignal,				...
			fCurrentJulianDate					) % NOT NECESSARY -- this input may be used to force the estimator
	%
	if( nargin == 6 )
		%
		% if not passed, then get the current julian date
		fCurrentJulianDate = Time.GetCurrentJulianDate();
		%
	end;%
	%
	% ...from which understand where to sample the signals
	afJulianDates =												...
		fliplr(													...
			fCurrentJulianDate									...	
		-	(													...	
					( 0:tEstimator.iWindowsLengthInSamples-1 )	...	
				*	tEstimator.fSamplingTimeInSeconds			...	
				*	Time.GetJulianSecond()						...	
			)													...
		);
	%
	% compute then the matrices for the batch estimate
	[	aafInputs,									...
		afOutput 	] =								...
			tEstimator.TransformSignals(			...
				tAirInletValveOpeningSignal,		...
				tAirInletTemperatureSignal,			...
				tAirInletCO2Signal,					...
				tRoomCO2Signal,						...
				tRoomTemperatureSignal,				...
				[],									...
				afJulianDates						);
	%
	% compute the estimate over the whole orizon
	afEstimatedOccupancy = tEstimator.EstimateBatch( aafInputs, afOutput );
	%
	% insert the last sample in the corresponding signal
	tEstimator.tEstimatedOccupancySignal.Insert(	...
		afEstimatedOccupancy(end),					...
		fCurrentJulianDate							);
	%
	%
	%
	% DEBUG
% 	Time.JulianDateToString( afJulianDates )
% 	figure(1)
% 	plot(aafInputs(:, 1))
% 	figure(2)
% 	plot(aafInputs(:, 2))
% 	figure(3)
% 	plot(aafInputs(:, 3))
% 	figure(4)
% 	plot(afOutput)
% 	figure(5)
% 	plot(afEstimatedOccupancy)
	%
end % function

