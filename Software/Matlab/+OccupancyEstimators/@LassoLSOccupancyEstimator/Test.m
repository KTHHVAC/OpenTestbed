function Test(	tEstimator,						...
				tAirInletValveOpeningSignal,	...
				tAirInletTemperatureSignal,		...
				tAirInletCO2Signal,				...
				tRoomCO2Signal,					...
				tRoomTemperatureSignal,			...
				tManualPeopleCounterTestSignal	)
	%
	% find the julian dates
	afJulianDates =																...
				tRoomCO2Signal.afTimes(1)										...
			:	( tEstimator.fSamplingTimeInSeconds / Time.GetJulianSecond() )	...
			:	tRoomCO2Signal.afTimes(end);
	%us
	% allocate the signal
	%
	% cycle on the plausible estimation windows
	for iDateIndex = tEstimator.iWindowsLengthInSamples:numel(afJulianDates);
		%
		% perform the estimation step
		tEstimator.Estimate(					...
			tAirInletValveOpeningSignal,		...
			tAirInletTemperatureSignal,			...
			tAirInletCO2Signal,					...
			tRoomCO2Signal,						...
			tRoomTemperatureSignal,				...
			afJulianDates(iDateIndex)			);
		%
	end;% cycle on the plausible estimation windows
	%
	% compute the performance indexes
	[	fOccupancyMSE,																	...
		fOccupancyFalsePositives,														...
		fOccupancyFalseNegatives,														...
		fAccuracy	] =																	...
			OccupancyEstimators.GetPerformanceIndexes(									...
				tEstimator.tEstimatedOccupancySignal.ExtractSamplesAt( afJulianDates ),	...
				tManualPeopleCounterTestSignal.ExtractSamplesAt( afJulianDates )		);
	%
	% DEBUG
% 	tAirInletValveOpeningSignal.Plot();
% 	tAirInletTemperatureSignal.Plot();
% 	tAirInletCO2Signal.Plot();
% 	tRoomCO2Signal.Plot();
% 	tRoomTemperatureSignal.Plot();
	tManualPeopleCounterTestSignal.Plot();
	tEstimator.tEstimatedOccupancySignal.Plot();
	%
	fprintf('Test results: MSE = %.2f, FP = %.2f, FN = %.2f, Accuracy = %.2f\n',	...
			fOccupancyMSE,															...
			fOccupancyFalsePositives,												...
			fOccupancyFalseNegatives,												...
			fAccuracy																);
	%
end % function

