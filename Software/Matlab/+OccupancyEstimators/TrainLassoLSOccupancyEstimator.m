clc;
close all;
clear classes;
clear all;

import OccupancyEstimators.*;

% tDataset =																	...
% 	Convert(																	...
% 			{'C:\downloads\0614_0701.txt',										...
% 			 'C:\Dropbox\HVAC Project\Datasets\manual_people_counting.txt',		...
% 			 'C:\Dropbox\HVAC Project\Datasets\additional_heater_A.txt',		...
% 			 'C:\Dropbox\HVAC Project\Datasets\additional_heater_B.txt'},		...
% 			300,																	...
% 			'C:\Dropbox\HVAC Project\Papers\BuildSys2013_Occupancy\Matlab\Datasets\0614_0701.mat', ...
% 			[19, 1006]															);

% for readability
iDownsamplingFactor						= 1;
tLabels.ROOM_TEMPERATURE				= 1;
tLabels.TEMPERATURE_OF_AIR_INLET		= 2;
tLabels.ROOM_CO2						= 3;
tLabels.CO2_OF_AIR_INLET				= 4;
tLabels.MANUAL_PEOPLE_COUNTER			= 5;
tLabels.AIR_INLET_VALVE_OPENING			= 6;
load ./../../Datasets/OccupancyEstimators/2013_07.mat;

% ?? for some strange reason we have 2000 years more OKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK
tTrainingSet = Converter.SelectDates(										...
				tDataset,													...
				Time.GregorianDateToJulianDate( 4013, 7, 14,  0, 0, 0 ),	...
				Time.GregorianDateToJulianDate( 4013, 7, 21,  0, 0, 0 )		);

tTestSet = Converter.SelectDates(											... for offline!!
				tDataset,													...
				Time.GregorianDateToJulianDate( 4013, 7, 21,  0,  0, 0 ),	...
				Time.GregorianDateToJulianDate( 4013, 7, 28,  0,  0, 0 )	);

% tTestSet = Converter.SelectDates(											... for online!!
% 				tDataset,													...
% 				Time.GregorianDateToJulianDate( 4013, 7, 25,  0,  0, 0 ),	...
% 				Time.GregorianDateToJulianDate( 4013, 7, 26,  0,  0, 0 )	);

fprintf('loaded %d samples\n',			numel( tDataset.afSignalsTimes ));
fprintf('- %d samples for training\n',	numel( tTrainingSet.afSignalsTimes ));
fprintf('- %d samples for test\n',		numel( tTestSet.afSignalsTimes ));
%
% DEBUG
% Converter.PlotSignals( tDataset, [10, 20, 30, 31, 32, 50, 61, 62, 64, 65] );
% Converter.PlotSignals( tDataset, 50 );
%
clear tDataset;

astrInputLabels		= [	tLabels.MANUAL_PEOPLE_COUNTER,		... OCCUPANCY MUST BE THE FIRST ONE
						tLabels.AIR_INLET_VALVE_OPENING,	... comment / uncomment to consider or not the ventilation
						tLabels.ROOM_TEMPERATURE			];
astrOutputLabels	= [ tLabels.ROOM_CO2 ];
%
bRemoveMean			= 1;  % 1 if you want to remove mean values of output signal
%
[ aafTrainingInputs, aafTrainingOutputs	]	= TransformDataset(astrInputLabels,astrOutputLabels,tTrainingSet,tLabels, bRemoveMean);
[ aafTestInputs, aafTestOutputs	]			= TransformDataset(astrInputLabels,astrOutputLabels,tTestSet,tLabels, bRemoveMean);

fSamplingTimeInSeconds = (tDataset.afSignalsTimes(2) - tDataset.afSignalsTimes(1)) * Time.GetJulianSecond();

tEstimator = OccupancyEstimators.LassoLSOccupancyEstimator(		...
				'ARX',											...
				fSamplingTimeInSeconds,							...
			   	iWindowsLengthInSamples							);

afPlausibleLambdas = linspace(0.2, 1, 5);

tEstimator.Train(aafTrainingInputs, aafTrainingOutputs, afPlausibleLambdas);


