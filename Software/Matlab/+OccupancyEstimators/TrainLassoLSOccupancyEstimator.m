clc;
close all;
clear classes;
clear all;
import OccupancyEstimators.*;



% ---------------------------------------------------------------------------------
% load the raw data
%
% tDataset =																	...
% 	Convert(																	...
% 			{'C:\downloads\0614_0701.txt',										...
% 			 'C:\Dropbox\HVAC Project\Datasets\manual_people_counting.txt',		...
% 			 'C:\Dropbox\HVAC Project\Datasets\additional_heater_A.txt',		...
% 			 'C:\Dropbox\HVAC Project\Datasets\additional_heater_B.txt'},		...
% 			300,																	...
% 			'C:\Dropbox\HVAC Project\Papers\BuildSys2013_Occupancy\Matlab\Datasets\0614_0701.mat', ...
% 			[19, 1006]															);
%
% for readability
iDownsamplingFactor						= 1;
tLabels.ROOM_TEMPERATURE				= 1;
tLabels.TEMPERATURE_OF_AIR_INLET		= 2;
tLabels.ROOM_CO2						= 3;
tLabels.CO2_OF_AIR_INLET				= 4;
tLabels.MANUAL_PEOPLE_COUNTER			= 5;
tLabels.AIR_INLET_VALVE_OPENING			= 6;
load ./../../Datasets/OccupancyEstimators/2013_07.mat;
%
% ?? for some strange reason we have 2000 years more
tTrainingSet = Converter.SelectDates(										...
				tDataset,													...
				Time.GregorianDateToJulianDate( 4013, 7, 14,  0, 0, 0 ),	...
				Time.GregorianDateToJulianDate( 4013, 7, 21,  0, 0, 0 )		);
%
tTestSet = Converter.SelectDates(											...
				tDataset,													...
				Time.GregorianDateToJulianDate( 4013, 7, 14,  0,  0, 0 ),	...
				Time.GregorianDateToJulianDate( 4013, 7, 21,  0,  0, 0 )	);% offline was 21 - 28
%
% DEBUG
fprintf('loaded %d samples\n',			numel( tDataset.afSignalsTimes ));
fprintf('- %d samples for training\n',	numel( tTrainingSet.afSignalsTimes ));
fprintf('- %d samples for test\n',		numel( tTestSet.afSignalsTimes ));
%
tSignalsIDs = Signal.GetSignalsIDs();
tDevicesIDs = Signal.GetDevicesIDs();
%
tAirInletValveOpeningTrainingSignal	= Converter.GetSignal( tTrainingSet, tSignalsIDs.iFreshAirInletValveOpeningPercentage,	tDevicesIDs.iPLC_A225 );
tAirInletTemperatureTrainingSignal	= Converter.GetSignal( tTrainingSet, tSignalsIDs.iTemperatureOfFreshAirInlet,			tDevicesIDs.iMote1004 );
tAirInletCO2TrainingSignal			= Converter.GetSignal( tTrainingSet, tSignalsIDs.iCO2OfFreshAirInlet,					tDevicesIDs.iMote1004 );
tRoomCO2TrainingSignal				= Converter.GetSignal( tTrainingSet, tSignalsIDs.iCO2OfEnvironment,						tDevicesIDs.iPLC_A225 );
tRoomTemperatureTrainingSignal		= Converter.GetSignal( tTrainingSet, tSignalsIDs.iTemperatureOfEnvironment,				tDevicesIDs.iPLC_A225 );
tManualPeopleCounterTrainingSignal	= Converter.GetSignal( tTrainingSet, tSignalsIDs.iOccupancy,							tDevicesIDs.iManualPeopleCounter );
%
tAirInletValveOpeningTestSignal	= Converter.GetSignal( tTestSet, tSignalsIDs.iFreshAirInletValveOpeningPercentage,	tDevicesIDs.iPLC_A225 );
tAirInletTemperatureTestSignal	= Converter.GetSignal( tTestSet, tSignalsIDs.iTemperatureOfFreshAirInlet,			tDevicesIDs.iMote1004 );
tAirInletCO2TestSignal			= Converter.GetSignal( tTestSet, tSignalsIDs.iCO2OfFreshAirInlet,					tDevicesIDs.iMote1004 );
tRoomCO2TestSignal				= Converter.GetSignal( tTestSet, tSignalsIDs.iCO2OfEnvironment,						tDevicesIDs.iPLC_A225 );
tRoomTemperatureTestSignal		= Converter.GetSignal( tTestSet, tSignalsIDs.iTemperatureOfEnvironment,				tDevicesIDs.iPLC_A225 );
tManualPeopleCounterTestSignal	= Converter.GetSignal( tTestSet, tSignalsIDs.iOccupancy,							tDevicesIDs.iManualPeopleCounter );



% ---------------------------------------------------------------------------------
% set the parameters
fSamplingTimeInSeconds	= (tDataset.afSignalsTimes(2) - tDataset.afSignalsTimes(1)) * Time.GetJulianSecond();
iWindowsLengthInSamples	= 500;
afPlausibleLambdas		= linspace(0.5, 0.7, 10);
fCO2Offset				= 400;



% ---------------------------------------------------------------------------------
% construct the object, train it, test it, and save it
%
tEstimator =											...
	OccupancyEstimators.LassoLSOccupancyEstimator(		...
		'ARX',											...
		fSamplingTimeInSeconds,							...
		iWindowsLengthInSamples,						...
		fCO2Offset										);	
%
tEstimator.Train(										...
	tAirInletValveOpeningTrainingSignal,				...
	tAirInletTemperatureTrainingSignal,					...
	tAirInletCO2TrainingSignal,							...
	tRoomCO2TrainingSignal,								...
	tRoomTemperatureTrainingSignal,						...
	tManualPeopleCounterTrainingSignal,					...
	afPlausibleLambdas									);
%
tEstimator.Test(										...
	tAirInletValveOpeningTestSignal,					...
	tAirInletTemperatureTestSignal,						...
	tAirInletCO2TestSignal,								...
	tRoomCO2TestSignal,									...
	tRoomTemperatureTestSignal,							...
	tManualPeopleCounterTestSignal						);
%
% 	tAirInletValveOpeningTrainingSignal,				...
% 	tAirInletTemperatureTrainingSignal,					...
% 	tAirInletCO2TrainingSignal,							...
% 	tRoomCO2TrainingSignal,								...
% 	tRoomTemperatureTrainingSignal,						...
% 	tManualPeopleCounterTrainingSignal					);
tEstimator.SaveEstimatorToMatFile( './+OccupancyEstimators/TrainedEstimators/LassoLSEstimator.mat' );


% 
% % tEstimator =																	...
% % 	OccupancyEstimators.LassoLSOccupancyEstimator.LoadEstimatorFromMatFile(		...
% % 		'./+OccupancyEstimators/TrainedEstimators/LassoLSEstimator.mat'			);
% 
% 


% tEstimator.Test(										...
% 	aafTestInputs,										...
% 	aafTestOutputs,										...
% 	tTestSet.afSignalsTimes								);

