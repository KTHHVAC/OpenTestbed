% ALGORITHM
%
% - receive the raw data from labview as 'labview inputs'
% - save this raw data in the corresponding Signal() structures
% - process the signals using the dedicated estimation object
function	fEstimatedOccupancy =				...
				EstimateOccupancyInLabview(		...
					fAirInletValveOpening,		...
					fAirInletTemperature,		...
					fAirInletCO2,				...
					fRoomCO2,					...
					fRoomTemperature			)
	%
	global bPrintDebugInformationOCCUPANCY;
	global tFileIDOCCUPANCY;
	global tEstimator;
	global tAirInletValveOpeningSignal;
	global tAirInletTemperatureSignal;
	global tAirInletCO2Signal;
	global tRoomCO2Signal;
	global tRoomTemperatureSignal;
	%
	%
	% ---------------------------------------------------------------------
	% allocate the estimator
	if( numel(tEstimator) == 0 );
		%
		tEstimator =																	...
			OccupancyEstimators.LassoLSOccupancyEstimator.LoadEstimatorFromMatFile(		...
				'./+OccupancyEstimators/TrainedEstimators/LassoLSEstimator.mat'			);
		%
	end;%
	%
	if( numel(tAirInletValveOpeningSignal) == 0 );
		%
		tDevicesIDs = Signal.GetDevicesIDs();
		tSignalsIDs = Signal.GetSignalsIDs();
		%
		tAirInletValveOpeningSignal = Signal();
		tAirInletValveOpeningSignal.Set(						...
			tDevicesIDs.iPLC_A225,								...
			tSignalsIDs.iFreshAirInletValveOpeningPercentage,	...
			[], [],												...
			0.4, 0.2, 0											);
		%
	end;%
	%
	if( numel(tAirInletTemperatureSignal) == 0 );
		%
		tDevicesIDs = Signal.GetDevicesIDs();
		tSignalsIDs = Signal.GetSignalsIDs();
		%
		tAirInletTemperatureSignal = Signal();
		tAirInletTemperatureSignal.Set(							...
			tDevicesIDs.iPLC_A225,								...
			tSignalsIDs.iTemperatureOfFreshAirInlet,			...
			[], [],												...
			0.4, 0.2, 0											);
		%
	end;%
	%
	if( numel(tAirInletCO2Signal) == 0 );
		%
		tDevicesIDs = Signal.GetDevicesIDs();
		tSignalsIDs = Signal.GetSignalsIDs();
		%
		tAirInletCO2Signal = Signal();
		tAirInletCO2Signal.Set(									...
			tDevicesIDs.iPLC_A225,								...
			tSignalsIDs.iCO2OfFreshAirInlet,					...
			[], [],												...
			0.4, 0.2, 0											);
		%
	end;%
	%
	if( numel(tRoomCO2Signal) == 0 );
		%
		tDevicesIDs = Signal.GetDevicesIDs();
		tSignalsIDs = Signal.GetSignalsIDs();
		%
		tRoomCO2Signal = Signal();
		tRoomCO2Signal.Set(										...
			tDevicesIDs.iPLC_A225,								...
			tSignalsIDs.iCO2OfEnvironment,						...
			[], [],												...
			0.4, 0.2, 0											);
		%
	end;%
	%
	if( numel(tRoomTemperatureSignal) == 0 );
		%
		tDevicesIDs = Signal.GetDevicesIDs();
		tSignalsIDs = Signal.GetSignalsIDs();
		%
		tRoomTemperatureSignal = Signal();
		tRoomTemperatureSignal.Set(								...
			tDevicesIDs.iPLC_A225,								...
			tSignalsIDs.iTemperatureOfEnvironment,				...
			[], [],												...
			0.4, 0.2, 0											);
		%
	end;%
	%
	%
	% ---------------------------------------------------------------------
	% insert the information in the appropriate structures
	%
	% get the current julian date
	fCurrentJulianDate = Time.GetCurrentJulianDate();
	%
	% do the insertion
	tAirInletValveOpeningSignal.Insert(	fAirInletValveOpening,	fCurrentJulianDate );
	tAirInletTemperatureSignal.Insert(	fAirInletTemperature,	fCurrentJulianDate );
	tAirInletCO2Signal.Insert(			fAirInletCO2,			fCurrentJulianDate );
	tRoomCO2Signal.Insert(				fRoomCO2,				fCurrentJulianDate );
	tRoomTemperatureSignal.Insert(		fRoomTemperature,		fCurrentJulianDate );
	%
	%
	% ---------------------------------------------------------------------
	% perform the estimation
	tEstimator.Estimate(					...
		tAirInletValveOpeningSignal,		...
		tAirInletTemperatureSignal,			...
		tAirInletCO2Signal,					...
		tRoomCO2Signal,						...
		tRoomTemperatureSignal,				...
		fCurrentJulianDate					);
	%
	% save the estimation results
	fEstimatedOccupancy = tEstimator.tEstimatedOccupancySignal.afValues(end);
	%
	if( bPrintDebugInformationOCCUPANCY )
		%
		fprintf(tFileIDOCCUPANCY, 'Estimate at time %s: %.4f\n', Time.JulianDateToString(fCurrentJulianDate){1}, fEstimatedOccupancy);
		%
	end;%
	%
end % function
