% 
% function Insert( tSignal, afValues, afXAxis, afYAxis )
% 
% insert some values at specific XY positions 
%
function Insert( tSignal, afValues, afXAxis, afYAxis )
	%
	% if there is nothing to insert then exit
	if( numel(afValues) == 0 )
		%
		return;
		%
	end;%
	%
	%
	% if this is the first time that something is inserted then
	% construct the necessary structures
	if( numel( tSignal.tYSignalsIndexes ) == 0 )
		%
		% consistency check
		if( numel( tSignal.atYSignals ) ~= 0 )
			%
			error('some error occurred in constructing a bidimensional signal: there is something in atYSignals but nothing in tYSignalsIndexes');
			%
		end;%
		%
		tSignal.tYSignalsIndexes = Signal();
		tSignal.tYSignalsIndexes.Set(						...
			tSignal.iDeviceID,								...
		   	tSignal.iSignalID,								...
		   	[],												... ordinate
		   	[],												... abscissa
		   	tSignal.afX,									...
		   	tSignal.afY,									...
		   	tSignal.afZ										);
		%
	end;%
	%
	%
	% cycle on the various values to be inserted
	for iValue = 1:numel( afValues )
		%
		% find the right signal index
		iCurrentYSignalIndex = tSignal.GetYSignalIndex( afXAxis( iValue ) );
		%
		% if it is a new x sample then allocate the corresponding new y signal
		if( iCurrentYSignalIndex > numel( tSignal.atYSignals ) )
			%
			% save the information on the y signal index
			tSignal.tYSignalsIndexes.Insert(					...
				iCurrentYSignalIndex,							... ordinate
				afXAxis(iValue)									);% abscissa
			%
			tSignal.atYSignals{iCurrentYSignalIndex} = Signal();
			tSignal.atYSignals{iCurrentYSignalIndex}.Set(		...
				tSignal.iDeviceID,								...
				tSignal.iSignalID,								...
				[],												... ordinate
				[],												... abscissa
				tSignal.afX,									...
				tSignal.afY,									...
				tSignal.afZ										);
			%
		end;%
		%
		% insert the value in the right y signal
		tSignal.atYSignals{iCurrentYSignalIndex}.Insert(		...
			afValues(iValue),									... ordinate
			afYAxis(iValue)										);% abscissa
		%
	end;% cycle on the values to be inserted
	%
	%
end % function

