%% Energy Computation

fRhoSoftConstraintsWeight	=	tTemperatureController.fRhoSoftConstraintsWeight;
fTemperatureUpperBound		=	tTemperatureController.tOutputsBounds.fLowerBound;	
fTemperatureLowerBound		=	tTemperatureController.tOutputsBounds.fUpperBound;
afLinearCostMatrix			=	tTemperatureController.afLinearCostMatrix;


fInputsEnergy_RR = sum(afLinearCostMatrix * u_sol_RR);
fInputsEnergy_FR = sum(afLinearCostMatrix * u_sol_FR);

afViolation_RR = zeros(1, tTemperatureController.iPredictionHorizon); 
afViolation_FR = zeros(1, tTemperatureController.iPredictionHorizon); 

for iTimeStep = 1:tTemperatureController.iPredictionHorizon
	%
	if y_13_RR(iTimeStep)< fTemperatureLowerBound
		%
		%
		afViolation_RR(iTimeStep) = ( fTemperatureLowerBound -  y_13_RR(iTimeStep) );
		%
	elseif y_13_RR(iTimeStep)< fTemperatureUpperBound
		%
		afViolation_RR(iTimeStep) = ( y_13_RR(iTimeStep)	-	fTemperatureLowerBound);
		%
	else
		afViolation_RR(iTimeStep) = 0;
		%
	end;%		
end;%

for iTimeStep = 1:tTemperatureController.iPredictionHorizon
	%
	if y_13_FR(iTimeStep)< fTemperatureLowerBound
		%
		%
		afViolation_FR(iTimeStep) = ( fTemperatureLowerBound -  y_13_FR(iTimeStep) );
		%
	elseif y_13_FR(iTimeStep)< fTemperatureUpperBound
		%
		afViolation_FR(iTimeStep) = ( y_13_FR(iTimeStep)	-	fTemperatureLowerBound);
		%
	else
		afViolation_FR(iTimeStep) = 0;
		%
	end;%		
end;%
	
fViolationEnergy_RR = sum(afViolation_RR)*fRhoSoftConstraintsWeight;
fViolationEnergy_FR = sum(afViolation_FR)*fRhoSoftConstraintsWeight;

fTotalEnergy_RR		= fInputsEnergy_RR + fViolationEnergy_RR;
fTotalEnergy_FR		= fInputsEnergy_RR + fViolationEnergy_FR;
afEnergy = [	fTotalEnergy_RR, fTotalEnergy_FR;			...
				fViolationEnergy_RR, fViolationEnergy_FR;	...
				fInputsEnergy_RR, fInputsEnergy_FR];		
figure;
 bar(afEnergy,'grouped'); title('Group')
 set(gca,'xTickLabel',{'TotalEnergy','ViolationEnergy','InputsEnergy'});
 legend('13states-RR','13states-FR')
	