clc
clear all
close all

% to get the updated models
addpath(genpath('Models/'));


load('SavedData/Disturbances.mat')
load('SavedData/OccupancyScenario.mat')

cd ..

% tTemperatureControllerParameters								= Controller.LoadStochasticCO2MPCParameters();
% tTemperatureController											= Controller.StochasticCO2ComparisonMPC( tTemperatureControllerParameters );
% 
% tTemperatureController.fSamplingTimeInSeconds					= 30*60;	
% tTemperatureController.iPredictionHorizon						= 24;		
% tTemperatureController.iNumberOfScenarios						= 1000 ;
fInitialCondition												= 500;
% 
% %% Implicit Simulation Temperature
% 
% tTemperatureController.tModel.afCurrentState					= fInitialCondition*ones(1,1);
% tTemperatureController.tModel.aafDisturbancesScenarioMatrix		= aafDisturbancesScenarioMatrix;
% 
% 
% 
% aafStatesMatrixImplicit													...	
% 	= zeros(	1,														...
% 				tTemperatureController.iPredictionHorizon + 1);
% afInputsMatrixImplicit													...
% 	= zeros(	1,														...
% 				tTemperatureController.iPredictionHorizon);
% aafStatesMatrixImplicit(:,1)											... 
% 	= tTemperatureController.tModel.afCurrentState;
% 
% for iTimeStep = 1:tTemperatureController.iPredictionHorizon
% 	%
% 	tTemperatureController.ComputeControlInputs();
% 	%
% 	afInputsMatrixImplicit(:,iTimeStep)									...
% 		= tTemperatureController.tModel.afInputsSolution;
% 	%
% 	cd Comparisons
% 	Simulation
% 	%
% 	cd ..
% 	tTemperatureController.tModel.afCurrentState				...
% 		= aafStatesMatrixImplicit(:,iTimeStep );
% end;%
% 
W = aafOccupancyGeneratedScenarios(:,1);

% Explicit Simulation
A = 0.8975;
B = -2.064;
E = 19.1;

x0	= fInitialCondition*ones(1,1);

aafStatesMatrixExplicit													...	
	= zeros(	1,														...
				24);
afInputsMatrixExplicit													...
	= zeros(	1,														...
				24);
aafStatesMatrixExplicit(:,1)											... 
	= fInitialCondition*ones(1,1);


[Inputs, iRegion]				=	OriginalPWAfunction(x0);
afInputsMatrixExplicit(:,1)		=	Inputs;


for k =  1:24
	%
	%
	aafStatesMatrixExplicit(:,k+1)		=		A	* aafStatesMatrixExplicit(:,k)		...
											+	E	* W(k)							...
											+	B	* afInputsMatrixExplicit(:,k) ;
	%
	[afInputs, iRegion]					=	OriginalPWAfunction(aafStatesMatrixExplicit(:,k+1));
	%
	afInputsMatrixExplicit(:,k+1)		=	afInputs;
	%
end;%

N = 24;


% afInputsMatrixImplicit	= afInputsMatrixImplicit(:,1:N);
afInputsMatrixExplicit	= afInputsMatrixExplicit(:,1:N);

% afOutputVectorImplicit		= C	* aafStatesMatrixImplicit;
afOutputVectorExplicit		=	 aafStatesMatrixExplicit;
for i = 1:24
end


% cd Comparisons\	
% EnergyComputation


figure(1)

hold on
% plot(0:1:N,afOutputVectorImplicit,'--rs','LineWidth',2,...
%                        'MarkerEdgeColor','k',...
%                        'MarkerFaceColor','r',...
%                        'MarkerSize',10)
plot(0:1:N,afOutputVectorExplicit,'--bs','LineWidth',2,...
                       'MarkerEdgeColor','k',...
                       'MarkerFaceColor','b',...
                       'MarkerSize',10)		   
plot(0:1:N,0*ones(1,N+1),'--g','LineWidth',2)
plot(0:1:N,450*ones(1,N+1),'--g','LineWidth',2)
hold off
legend('Implicit','Explicit')
title('output')

figure(2)
hold on
% stairs(0:N-1,fDeltaRadImplicit,'r');
stairs(0:N-1,afInputsMatrixExplicit,'b');
legend('Implicit','Explicit')

