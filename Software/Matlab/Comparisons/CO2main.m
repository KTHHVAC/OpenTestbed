clc
clear all
close all

% to get the updated models
addpath(genpath('Models/'));
addpath(genpath('C:\Users\Luca\Documents\GitHub\OpenTestbed\Software\Matlab\Comparisons/'));


load('SavedData/Disturbances.mat')
load('SavedData/OccupancyScenario.mat')

cd ..

tCO2ControllerParameters								= Controller.LoadStochasticCO2MPCParameters();
tCO2Controller											= Controller.StochasticCO2ComparisonMPC( tCO2ControllerParameters );

tCO2Controller.aafOccupancyGeneratedScenarios = aafOccupancyGeneratedScenarios;


tCO2Controller.fSamplingTimeInSeconds					= 30*60;	
tCO2Controller.iPredictionHorizon						= 24;		
tCO2Controller.iNumberOfScenarios						= 1000 ;
fInitialCondition										= 200;
% 
%% Implicit Simulation Temperature

tCO2Controller.tModel.afCurrentState					= fInitialCondition*ones(1,1);



aafStatesMatrixImplicit													...	
	= zeros(	1,														...
				tCO2Controller.iPredictionHorizon + 1);
afInputsMatrixImplicit													...
	= zeros(	1,														...
				tCO2Controller.iPredictionHorizon);
aafStatesMatrixImplicit(:,1)											... 
	= tCO2Controller.tModel.afCurrentState;
i = randi(1000,1,1);
W = aafOccupancyGeneratedScenarios(:,i);
for iTimeStep = 1:tCO2Controller.iPredictionHorizon
	%
	tCO2Controller.ComputeControlInputs();
	%
	tCO2Controller.tModel.afInputsSolution = tCO2Controller.afOptimizationProblemSolution(1);
	afInputsMatrixImplicit(:,iTimeStep)									...
		= tCO2Controller.tModel.afInputsSolution;
	%

	SimulationCO2
	%
	tCO2Controller.tModel.afCurrentState				...
		= aafStatesMatrixImplicit(:,iTimeStep );
end;%
% 


% Explicit Simulation
A = 0.8975;
B = -2.064;
E = 19.1;

x0	= fInitialCondition*ones(1,1);

aafStatesMatrixExplicit													...	
	= zeros(	1,														...
				24);
afInputsMatrixExplicit													...
	= zeros(	1,														...
				24);
aafStatesMatrixExplicit(:,1)											... 
	= fInitialCondition*ones(1,1);


[Inputs, iRegion]				=	OriginalPWAfunction(x0);
afInputsMatrixExplicit(:,1)		=	Inputs;


for k =  1:24
	%
	%
	aafStatesMatrixExplicit(:,k+1)		=		A	* aafStatesMatrixExplicit(:,k)		...
											+	E	* W(k)							...
											+	B	* afInputsMatrixExplicit(:,k) ;
	%
	[afInputs, iRegion]					=	OriginalPWAfunction(aafStatesMatrixExplicit(:,k+1));
	%
	afInputsMatrixExplicit(:,k+1)		=	afInputs;
	%
end;%

N = 24;


afInputsMatrixImplicit	= afInputsMatrixImplicit(:,1:N);
afInputsMatrixExplicit	= afInputsMatrixExplicit(:,1:N);

afOutputVectorImplicit		= C	*	aafStatesMatrixImplicit;
afOutputVectorExplicit		= C *	aafStatesMatrixExplicit;



% cd Comparisons\	
% EnergyComputation


figure(1)

hold on
plot(0:1:N,afOutputVectorImplicit,'--rs','LineWidth',2,...
                       'MarkerEdgeColor','k',...
                       'MarkerFaceColor','r',...
                       'MarkerSize',10)
plot(0:1:N,afOutputVectorExplicit,'--bs','LineWidth',2,...
                       'MarkerEdgeColor','k',...
                       'MarkerFaceColor','b',...
                       'MarkerSize',10)		   
plot(0:1:N,0*ones(1,N+1),'--g','LineWidth',2)
plot(0:1:N,450*ones(1,N+1),'--g','LineWidth',2)
hold off
legend('Implicit','Explicit')
title('output')

figure(2)
hold on
stairs(0:N-1,afInputsMatrixImplicit,'b');
stairs(0:N-1,afInputsMatrixExplicit,'b');
legend('Implicit','Explicit')

