% locked out from the system
if( any( strcmp( who, 'tTCPConnection' ) ) )
	
	fclose( tTCPConnection.tTcpIpClient );
	
end;

close all;
clear all;
clear classes;
clc;

% to get the updated models
addpath(genpath('Models/'));

% to get CPLEX path
addpath(genpath('C:/Program Files/IBM/ILOG/CPLEX_Studio125/cplex'));

% import the necessary classes
import EstimationAlgorithms.*;
import Controller.*;
import MatlabToTikZ.*;
import InternetConnection.*;
import Scenarios.*;

% allocate the TCP connection object
global tTCPConnection;
tTCPConnectionParameters				= InternetConnection.LoadDefaultTCPConnectionParameters();
tTCPConnection							= InternetConnection.KTHConnection( tTCPConnectionParameters );

% allocate the controller
global tTempClosedLoopController;
tTempClosedLoopControllerParameters			= Controller.LoadClosedLoopTemperatureMPCParameters();
tTempClosedLoopController					= Controller.ClosedLoopTemperatureMPC( tTempClosedLoopControllerParameters );
% tTempClosedLoopController.bUseRadiators		= true;


%% timer
tControllerDebugTimer = timer(                                                                                          	...
		'TimerFcn',			{@Controller.RunClosedLoopTemperatureMPCController,	 tTempClosedLoopController, tTCPConnection},...
		'ErrorFcn',			{@Controller.OnError,                               {tTempClosedLoopController} },				...
		'StartFcn',			{@Controller.OnStart,                               {tTempClosedLoopController} },				...
		'StopFcn',			{@Controller.OnExitNoTCPClose,                      {tTempClosedLoopController} },				...
		'Period',			tTempClosedLoopController.fSamplingTimeInSeconds,                                           	...
		'TasksToExecute',	tTempClosedLoopController.iNumberOfRunsToBeExecuted,                                        	...
		'ExecutionMode',	'fixedRate',                                                                                	...
		'BusyMode',			'drop'                                                                                      	);

start( tControllerDebugTimer );


%% At the end of the experience

% Set the actuation values again to zero
% tTCPConnection.SendToServer( 61, 2002, 'LB201_A225', 0 );
% tTCPConnection.SendToServer( 62, 2002, 'LB201_A225', 0 );
% tTCPConnection.SendToServer( 63, 2002, 'LB201_A225', 0 );
% tTCPConnection.SendToServer( 65, 2002, 'LB201_A225', 0 );
%
% always delete timers before exiting!
% delete(tControllerDebugTimer);
%
% Experiment is done -> We close the connection
% fclose( tTCPConnection.tTcpIpClient );




