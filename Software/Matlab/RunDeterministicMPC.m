% locked out from the system
if( any( strcmp( who, 'tTCPConnection' ) ) )
	%
	fclose( tTCPConnection.tTcpIpClient );
	%
end;%

close all;
clear all;
clear classes;
clc;
 
% to get the updated models
addpath(genpath('Models/'));

% to get CPLEX path
addpath(genpath('/Users/giorgiopattarello/Applications/IBM/ILOG/CPLEX_Studio1251/cplex/'))
% addpath(genpath('C:/Program Files/IBM/ILOG/CPLEX_Studio125/cplex'));

% import the necessary classes
import Controller.*;
import MatlabToTikZ.*;
import InternetConnection.*;
import Scenarios.*;

% select if to use the true testbed or not
bUseVirtualTestbed = true;
%
if( bUseVirtualTestbed )
	%
	% connection
	tTCPConnection	= InternetConnection.VirtualConnection();
	%
	% controllers parameters
	tCO2ControllerParameters			= Controller.LoadVirtualDeterministicCO2MPCParameters();
	tTemperatureControllerParameters	= Controller.LoadVirtualDeterministicTemperatureMPCParameters();
	%
else%
	%
	% connection
	tTCPConnectionParameters			= InternetConnection.LoadDefaultTCPConnectionParameters();
	tTCPConnection						= InternetConnection.KTHConnection( tTCPConnectionParameters );
	%
	% controllers parameters
	tCO2ControllerParameters			= Controller.LoadDeterministicCO2MPCParameters();
	tTemperatureControllerParameters	= Controller.LoadDeterministicTemperatureMPCParameters();
	%
end;%

% allocate the controllers
tCO2Controller			= Controller.DeterministicCO2MPC( tCO2ControllerParameters );
tTemperatureController	= Controller.DeterministicTemperatureMPC( tTemperatureControllerParameters );


% TODO: implement the OnError() OnStart() etc.....
tControllerDebugTimer = timer(																							...
	'TimerFcn',			{@Controller.RunDeterministicMPC,	tCO2Controller, tTemperatureController , tTCPConnection },	...
	'ErrorFcn',			{@Controller.OnError,				tCO2Controller},											...
	'StartFcn',			{@Controller.OnStart,				tCO2Controller},											...
	'StopFcn',			{@Controller.OnExitNoTCPClose,		tCO2Controller},											...
	'Period',			tCO2Controller.fSamplingTimeInSeconds,															...
	'TasksToExecute',	tCO2Controller.iNumberOfRunsToBeExecuted,														...
	'ExecutionMode',	'fixedRate',																					...
	'BusyMode',			'drop'														);

start( tControllerDebugTimer );
disp('ControlTimer Started');


% %
% % fclose( tTCPConnection.tTcpIpClient );
% % %
% % %always delete timers before exiting!
% % %
% % delete(tControllerDebugTimer);



