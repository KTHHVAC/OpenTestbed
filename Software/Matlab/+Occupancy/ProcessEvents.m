% the 'aafRawData' matrix has 2 columns: the first one is the event type,
% the second one is the timestamp in milliseconds
%
% there are two kind of events: raw data events, and occupancy events. The
% occupancy events are generated by sets of raw data events
%
function [	aiEstimatedClasses,		...
			iEndingTime ]		=	...
				ProcessEvents(		...
					aafRawData,		...
					iStartingTime	)
	%	
	global bPrintDebugInformation;
	global tFileID;
	%
	if( bPrintDebugInformation )
		%
		fprintf(tFileID, 'Processing the events, starting time = %d\n', iStartingTime);
		%
	end;%
	%
	% if there is no data then exit
	if( numel( aafRawData ) == 0 )
		%
		aiEstimatedClasses	= [];
		iEndingTime			= iStartingTime;
		%
	else%
		%
		% segmentate the raw data into the events
		[ atEvents, iEndingTime ] = Occupancy.TransformRawDataIntoEvents( aafRawData, iStartingTime );
		%
		% load the SVMs
		load('./+Occupancy/TrainedSVMs/SVM.mat');
		%
		% check if there is the variable we wanted
		if(		~exist('atSVMs',				'var')	...
			||	~exist('aiLabelsVsClassesLUT',	'var')	)
			%
			error('there is no trained SVM!! How can I classify?');
			%
		end;%
		%
		% classify the events
		aiEstimatedClasses =			...
			Occupancy.ClassifyEvents(	...
				atEvents,				...
				atSVMs,					...
				aiLabelsVsClassesLUT	);
		%
	end;%
	%
	% DEBUG
	if( bPrintDebugInformation )
		%
		fprintf(tFileID, 'Ended processing the events. Ending time = %d\n', iEndingTime);
		%
	end;%
	%
end % function
 
