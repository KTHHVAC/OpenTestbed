function aafData = RemoveOldData( aafRawData, iRequestedStartingTime )
	%
	% DEBUG
% 	fprintf('Removing the old data\n');
	%
	% for readability
	TIME_COLUMN = 2;
	%
	% find where the last sample has been inserted
	[ iEndingTime, iIndexOfEndingTime ] = max( aafRawData( :, TIME_COLUMN ) );
	%
	if( iRequestedStartingTime >= iEndingTime )
		%
		aafData = [];
% 		fprintf('Requested a starting time that is bigger then the ending time => returning\n')
		return;
		%
	end;%
	%
	% check for errors
	if( numel(iIndexOfEndingTime) ~= 1 )
		%
		warning('something wrong in RemoveOldData')
		%
	end;%
	%
	% sort the data in the circular buffer
	if( iIndexOfEndingTime < size( aafRawData, 1 ) )
		%
		aafSortedData = [	aafRawData( iIndexOfEndingTime+1:end, : );	...
							aafRawData( 1:iIndexOfEndingTime, : )		];
		%
	else%
		%
		aafSortedData = aafRawData;
		%
	end;%
	%
	% remove the rows corresponding to the too old data
	iIndexOfNewData		= find(aafRawData(:, TIME_COLUMN) > iRequestedStartingTime, 1, 'first');
	aafData				= aafRawData(iIndexOfNewData:end, :);
	% 
	% DEBUG
% 	fprintf('Ended removing the old data\n');
	%
end % function

