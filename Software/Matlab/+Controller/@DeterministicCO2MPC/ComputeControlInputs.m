function ComputeControlInputs( tController )
	%Setting all the matrices of the linear time inveriant discrete model
	%
	%
	% TODO: GET THE REQUIRED INDEXES AND "MEASUREMENTS"!!!
	%
	tController.SetInitialConditions();
% 	%
% 	tController.SetDisturbancesVector();
% 	%
% 	[	tController.tModel.aafAA ,							...
% 		tController.tModel.aafAB ,							...
% 		tController.tModel.aafAE ,							...
% 		tController.tModel.aafCC ]							...
% 			= tController.BuildModelEvolutionMatrices(		...
% 					tController.tModel.aafA,				...
% 					tController.tModel.aafB,				...
% 					tController.tModel.aafE,				...
% 					tController.tModel.aafC,				...
% 					5										);
% 	%										
% 	tController.BuildConstraintsEvolutionMatrices(						...
% 		[	tController.tActuationBounds.afActuationLowerBounds;		...
% 			tController.tActuationBounds.afActuationUpperBounds		],	...
% 		[	tController.tComfortBounds.afComfortLowerBounds;			...
% 			tController.tComfortBounds.afComfortUpperBounds			],	...
% 			5															);
% 	%
% 	[	aafLeftSideOptimizationProblem,			...
% 		afRightSideOptimizationProblem		]	...
% 			= tController.GetInequalityLeftAndRightSides();
% 	%
% 	[ aafCostMatrixC , aafCostMatrixQ ]			...
% 			= tController.BuildCostEvolutionMatrices(				...
% 					tController.afLinearCostFunctionMatrix',		...
% 					tController.aafQuadraticCostFunctionMatrix,		...
% 					5												);
% 	%
% 	[	afOptimizationProblemSolution,								...
% 		fCostFunctionOptimalValue,									...
% 		iSolverStatus					]							...
% 			= tController.SolveOptimizationProblem(					...
% 				aafCostMatrixC,										...
% 				aafCostMatrixQ,										...
% 				aafLeftSideOptimizationProblem,						...
% 				afRightSideOptimizationProblem		);
	
	%
end % end function