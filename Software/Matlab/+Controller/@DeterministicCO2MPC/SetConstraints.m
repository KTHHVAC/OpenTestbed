% function SetConstraints( tController, tParameters )
%
function SetConstraints( tController )
	% Setting the actuation and comfort constraints to pass for the system
	% dynamic
	%
	try %
		%
		LOWEST_CO2_CONCENTRATION_POSSIBLE	= tController.fLowestCO2ConcentrationPossible; %TODO: put it in the parameters or find another way to acquire it
		%
		%------------------------------------------------------------------
		%	
		tController.tOutputsBounds.afOutputsLowerBounds		=	0;
		%	
		tController.tOutputsBounds.afOutputsUpperBounds		=		...
					tController.tOutputsBounds.CO2.fUpperBound		...
				-	tController.fLowestCO2ConcentrationPossible;
		%
		tController.tInputsBounds.afInputsLowerBounds = 0;
		%
		tController.tInputsBounds.afInputsUpperBounds = 450 * tController.tInputsBounds.AirMassFlow.fUpperBound;
		%
		tController.tModel.aafGxMixed = [	-	tController.tInputsBounds.AirMassFlow.fLowerBound;	...
												tController.tInputsBounds.AirMassFlow.fUpperBound ] ;
		%
		tController.tModel.aafGu =  [-1 ; 1];
		%								
		tController.tModel.aafGeMixed = [   tController.tInputsBounds.AirMassFlow.fLowerBound;		...
											tController.tInputsBounds.AirMassFlow.fUpperBound   ];
		tController.tModel.aafGuMixed = [ -	1 ; 1	];  % TO DO:remove numbers
		tController.tModel.afR		  = [	0 ; 0	];  % TO DO:remove numbers
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the constraints.')
		%
	end;% end catch
	%
end %



