% function SetConstraints( tController, tParameters )
%
function SetConstraints( tController )
	% Setting the actuation and comfort constraints to pass for the system
	% dynamic
	%
	try %
		tDevicesIDs							= Signal.GetDevicesIDs();
		tSignalsIDs							= Signal.GetSignalsIDs();
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		LOWEST_CO2_CONCENTRATION_POSSIBLE	= tController.fLowestCO2ConcentrationPossible; %TODO: put it in the parameters or find another way to acquire it
		%
		%------------------------------------------------------------------
		%retriving the needed indexes
		%
		iCO2OfTheRoomIndex	=									...
				Signal.FindSignalIndex(							...
							tController.atMeasurementsSignals,	...
							tSignalsIDs.iCO2OfEnvironment,		...
							tDevicesIDs.iPLC_A225				);
		%
		%------------------------------------------------------------------
		% catching the measurements
		%
		fCO2OfTheRoom		= tController.atMeasurementsSignals(iCO2OfTheRoomIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		%------------------------------------------------------------------
		% setting and calculating the bounds
		%
		tController.tInputsBounds.afInputsLowerBounds		=				...
					tController.tInputsBounds.AirMassFlow.fLowerBound		...
				*	( fCO2OfTheRoom - LOWEST_CO2_CONCENTRATION_POSSIBLE );
		%	
		tController.tInputsBounds.afInputsUpperBounds		=				...
					tController.tInputsBounds.AirMassFlow.fUpperBound		...
				*	( fCO2OfTheRoom - LOWEST_CO2_CONCENTRATION_POSSIBLE );
		%	
		tController.tOutputsBounds.afOutputsLowerBounds		=	0;%			...
% 					tController.tOutputsBounds.CO2.fLowerBound	...
% 				-	tController.fLowestCO2ConcentrationPossible; 
		%	
		tController.tOutputsBounds.afOutputsUpperBounds		=				...
					tController.tOutputsBounds.CO2.fUpperBound	...
				-	tController.fLowestCO2ConcentrationPossible;
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the constraints.')
		%
	end;% end catch
	%
end %



