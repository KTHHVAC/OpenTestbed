%locked out from the system
if( any( strcmp( who, 'tTCPConnection' ) ) )
	%
	fclose( tTCPConnection.tTcpIpClient );
	%
end;%

close all;
clear all;
clear classes;
clc;

% to get the updated models
addpath(genpath('Models/'));

% % to get CPLEX path
% addpath(genpath('/Users/giorgiopattarello/Applications/IBM/ILOG/CPLEX_Studio1251/cplex/'))
addpath(genpath('C:/Program Files/IBM/ILOG/CPLEX_Studio125/cplex'));

% import the necessary classes
import Controller.*;
import MatlabToTikZ.*;
import InternetConnection.*;
import Scenarios.*;

%% Connection
%
tTCPConnectionParameters			= InternetConnection.LoadDefaultTCPConnectionParameters();
tTCPConnection						= InternetConnection.KTHConnection( tTCPConnectionParameters );
%
%
%% Explicit MPC Controller

% % Worst case Explicit 
% tTemperatureControllerParameters					= Controller.LoadExplicitTemperatureMPCParameters();
% tTemperatureController								= Controller.ExplicitWCTemperatureMPC( tTemperatureControllerParameters );
% %
% tTemperatureController.AcquireMeasurements( tTCPConnection );
% tTemperatureController.AcquireForecasts( tTCPConnection );
% %
% tTemperatureController.ComputeControlInputs();
%
% Two stage Explicit
tTemperatureControllerParameters					= Controller.LoadExplicitTemperatureMPCParameters();
tTemperatureController								= Controller.ExplicitTSTemperatureMPC( tTemperatureControllerParameters );
%
tTemperatureController.AcquireMeasurements( tTCPConnection );
tTemperatureController.AcquireForecasts( tTCPConnection );
%
tTemperatureController.ComputeControlInputs();

% % % ICC Explicit
% tTemperatureControllerParameters					= Controller.LoadExplicitTemperatureMPCParameters();
% tTemperatureController							= Controller.ExplicitICCTemperatureMPC( tTemperatureControllerParameters );
% %
% tTemperatureController.AcquireMeasurements( tTCPConnection );
% tTemperatureController.AcquireForecasts( tTCPConnection );
% % %
% tTemperatureController.ComputeControlInputs();

