% Prepare model matrices over the prediction orizon for deterministic MPC.
%
%	BuildModelEvolutionMatrices(tController)
% 	
%
%
function BuildModelEvolutionMatrices (tController)
	%
	%
	try
		% getting the size of model's matricies
		%
		iNumberOfStates		  = size(tController.tModel.aafB,1);		% state size								
		iNumberOfInputs		  = size(tController.tModel.aafB,2);		% number of inputs								
		iNumberOfDisturbances = size(tController.tModel.aafE,2);		% number of disturbances
		%
		%
		%
		% space allocation for matrices
		tController.tModel.aafAA				    = zeros(iNumberOfStates * tController.iPredictionHorizon,	iNumberOfStates );
		tController.tModel.aafAB				    = zeros(iNumberOfStates * tController.iPredictionHorizon,	...	
															iNumberOfInputs * tController.iPredictionHorizon);
		tController.tModel.aafAE			        = zeros(iNumberOfStates * tController.iPredictionHorizon,	...
															iNumberOfDisturbances * tController.iPredictionHorizon);
		%
		%------------------------------------------------------------------
		% AA costruction
		%
		for iTimeStep=1:1:tController.iPredictionHorizon
			%
			tController.tModel.aafAA((iTimeStep-1) * iNumberOfStates+1:iTimeStep * iNumberOfStates, :)  ...
			=  tController.tModel.aafA^iTimeStep;
			%
		end;%end of for
		%
		%------------------------------------------------------------------
		% CC construction
		%
		tController.tModel.aafCC = kron(eye(tController.iPredictionHorizon), tController.tModel.afC);
		%
		%------------------------------------------------------------------
		% AE construction
		%
		for  iStepTimeRow=1:tController.iPredictionHorizon
		   %
		   for iStepTimeColumn=1:iStepTimeRow
			   %
				tController.tModel.aafAE																			...
					(																								...
								(iStepTimeRow-1)																	...
							*	iNumberOfStates + 1 : iStepTimeRow * iNumberOfStates								...
						,																							...                  			
						(																							...
								(iStepTimeColumn-1)																	...
							*	iNumberOfDisturbances + 1 : iStepTimeColumn * iNumberOfDisturbances					...
						)																							...		
					)																								...			
				= tController.tModel.aafA^(iStepTimeRow-iStepTimeColumn)*tController.tModel.aafE;
				%
			end %end of innested for
			%
		end;%end of for  
		%
		%------------------------------------------------------------------
		%------------------------------------------------------------------
		%
	catch exception
		%
		disp(exception.message);
		warning('Error computing model evolution matrices');
		%
	end;%
	%
	%
end %end of the function