% function SetInitialConditions( tController )
% 
function SetInitialConditions( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		%
		%------------------------------------------------------------------
		% retriving the measurements i need
		% 
		fTemperatureOfTheRoom	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iRoomTemperature).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureWall_1_Out	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall1Out).ExtractSamplesAt(fCurrentJulianDate);		
		fTemperatureWall_1_In	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall1In).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureWall_2_Out	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall2Out).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureWall_2_In	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall2In).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureWall_3_Out	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall3Out).ExtractSamplesAt(fCurrentJulianDate);			
		fTemperatureWall_3_In	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall3In).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureWall_4_Out	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall4Out).ExtractSamplesAt(fCurrentJulianDate);			
		fTemperatureWall_4_In	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall4In).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureFloor_Out	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfFloorOut).ExtractSamplesAt(fCurrentJulianDate);	
		fTemperatureFloor_In	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfFloorIn).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureCeiling_Out = tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfCeilingOut).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureCeiling_In	= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfCeilingIn).ExtractSamplesAt(fCurrentJulianDate);
		%
		afInitialConditions	= [		fTemperatureOfTheRoom	;
									fTemperatureWall_1_Out	;
									fTemperatureWall_1_In	;
									fTemperatureWall_2_Out	;
									fTemperatureWall_2_In	;
									fTemperatureWall_3_Out	;
									fTemperatureWall_3_In	;
									fTemperatureWall_4_Out	;
									fTemperatureWall_4_In	;
									fTemperatureFloor_Out	;
									fTemperatureFloor_In	;
									fTemperatureCeiling_Out ;
									fTemperatureCeiling_In		];
		%
		tController.tModel.afX0 = afInitialConditions;
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the initial conditions of the optimization problem');
		%
	end;% end catch
	%
end %