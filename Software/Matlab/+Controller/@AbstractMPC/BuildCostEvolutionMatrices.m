% Prepare  cost matrices over the prediction orizon for deterministic MPC.
%
% function [	afExtendedLinearCostMatrix,				...
%				aafExtendedQuadraticCostMatrix   ] =	...
%					BuildCostEvolutionMatrices(			...
%						afLinearCostMatrix,				...
%						aafQuadraticCostMatrix,			...
%						iHorizonLength					)
%
function [	afExtendedLinearCostMatrix,				...
			aafExtendedQuadraticCostMatrix   ] =	...
				BuildCostEvolutionMatrices(			...
					afLinearCostMatrix,				...
					aafQuadraticCostMatrix,			...
					iHorizonLength					)
	%
	try %
		% Linear Contribution costruction 
		%
		afExtendedLinearCostMatrix = repmat(afLinearCostMatrix, 1, iHorizonLength);
		%
		% Quadratic Contribution costruction
		aafExtendedQuadraticCostMatrix = kron(eye(iHorizonLength), aafQuadraticCostMatrix);
		%
	catch exception
		%
		disp(exception.message)
		warning('Problems buildings the cost evolution matrices')
		%
	end;% end catch
	%
end % end function
