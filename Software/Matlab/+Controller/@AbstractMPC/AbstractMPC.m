classdef AbstractMPC < Controller.Controller
	%
    properties
		%
		% -----------------------------------------------------------------
		% cost function
		afLinearCostFunctionMatrix;
		aafQuadraticCostFunctionMatrix;
		%
		% -----------------------------------------------------------------
		% general properties
		tModel;
		%
	end;%
	%
	%
	% ---------------------------------------------------------------------
	methods
		%
		function tController = AbstractMPC( tParameters )
			%
			tController = tController@Controller.Controller( tParameters );
			%
			
			%
		end;% default constructor
		%
	end %
	%
	%
	% List of abstract methods
	methods (Static)
		%
		% Other static methods implemented 
		[ afOptimizationProblemSolution, fCostFunctionOptimalValue, iSolverStatus ]				...
									= SolveOptimizationProblem(	afLinearCostFunction,			...
																aafQuadraticCostFunction,		...
																aafLeftSideConstraintMatrix,	...
																afRightSideConstraintMatrix		);
		%
		%
		[	aafExtendedToOrizonFreeEvolutionMatrix,				...
			aafExtendedToOrizonForcingEvolutionMatrix,			...					
			aafExtendedToOrizonDisturbanceMatrix,				...
			aafExtendedToOrizonOutputMatrix				] =		...
				BuildModelEvolutionMatrices(					...
					aafStatesTransitionMatrix,					...
					aafInputsToStatesMatrix,					...
					aafDisturbancesToStatesMatrix,				...
					afStatesToOutputsMatrix,					...
					iPredictionHorizon							);
		%
		%
		[	afExtendedLinearCostMatrix,				...
			aafExtendedQuadraticCostMatrix   ] =	...
				BuildCostEvolutionMatrices(			...
					afLinearCostMatrix,				...
					aafQuadraticCostMatrix,			...
					iHorizonLength					);
		%
	end %
	%
	%
	% List of abstract methods
	methods (Abstract)
		%
		SetLinearModelMatrices( tController );
		SetCostParameters( tController );
		SetConstraints( tController, tParameters );
		afInitialCondition	= SetInitialConditions( tController );
		%
	end % end abstrct methods
	%
end % classdef

