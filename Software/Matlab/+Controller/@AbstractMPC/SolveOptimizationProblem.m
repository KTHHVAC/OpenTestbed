function afOutput = SolveOptimizationProblem(	afLinearCostFunction,			...
												aafQuadraticCostFunction,		...
												aafLeftSideConstraintMatrix,	...
												afRightSideConstraintMatrix		)
	%
	try %
		%
		[	afOptimizationProblemSolution,			... 
			fCostFunctionOptimalValue,				...
			iSolverStatus,							...
			tSolver.output						]	...
							= cplexlp ( afLinearCostFunction,			 ...
										aafLeftConstrCoef,  ...
														tController.tConstraints.afRightConstrCoef,  ...
														[] ,                                 ...
														[] ,				                 ...	% Quadratic constraints not supported
														tController.tCost.afLowerBound,				 ...
														tController.tCost.afUpperBound,				 ...
														[] );
		%
	catch exception
		%
		disp(exception.message)
		warning('');
		%
	end;% end catch
	%
end % end function