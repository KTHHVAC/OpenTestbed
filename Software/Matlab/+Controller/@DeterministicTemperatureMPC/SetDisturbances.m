function SetDisturbances( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		%------------------------------------------------------------------
		% preliminary operations
		tDevicesIDs							= Signal.GetDevicesIDs();
		tSignalsIDs							= Signal.GetSignalsIDs();
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		%
		%------------------------------------------------------------------
		% retriving the needed indexes 
		iForecastedOccupancyIndex	=										...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedOccupancy8h,				...
							tDevicesIDs.iLocalLookUpTableWeatherForecast	);
		%
		iCurrentOccupancyIndex		=										...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iOccupancy,							...
							tDevicesIDs.iManualPeopleCounter				);
		%
		iForecastedSolarRadiationIndex	=												...
				Signal.FindSignalIndex(													...
							tController.atForecastsSignals,								...
							tSignalsIDs.tSignalsIDs.iForecastedExternalLightingTop8h,	...
							tDevicesIDs.iLocalLookUpTableWeatherForecast				);
		%
		%
		iCurrentSolarRadiationIndex		=									...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iExternalLightingTop,				...
							tDevicesIDs.iLocalLookUpTableWeatherForecast	);
		%				
		iForecastedOutsideTemperatureIndex	=								...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedExternalTemperature8h,	...
							tDevicesIDs.iWundergroundWeatherForecast	); 
		%
		%				
		iCurrentOutsideTemperatureIndex	=									...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iTemperatureOfOutsideEnvironment,	...
							tDevicesIDs.iPLC	);				
		%
		%------------------------------------------------------------------
		% setting the disturbances vector
		%
		% interested samples times for the forecasts
		fSamplingTimeInJulianDates =	Time.GetJulianSecond * tController.fSamplingTimeInSeconds;
		%
		afTimesNeededForTheForecastedOccupancy =																...
				[		fCurrentJulianDate + fSamplingTimeInJulianDates											...
					:	fSamplingTimeInJulianDates																...
					:	fCurrentJulianDate + fSamplingTimeInJulianDates * ( tController.iPredictionHorizon - 1)	]';
		%
		%
		% occupancy
		aiForecastedOccupancy					...
			= tController.atForecastsSignals(iForecastedOccupancyIndex).ExtractSamplesAt(afTimesNeededForTheForecastedOccupancy);
		iCurrentOccupancy						...
			= tController.atMeasurementsSignals(iCurrentOccupancyIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		% solar radiation
		iForecastedSolarRadiation				...
			= tController.atForecastsSignals(iForecastedSolarRadiationIndex).ExtractSamplesAt(afTimesNeededForTheForecastedOccupancy);
		iCurrentSolarRadiation					...
			= tController.atForecastsSignals(iCurrentSolarRadiationIndex).ExtractSamplesAt(afTimesNeededForTheForecastedOccupancy);
		%
		% outside temperature
		iForecastedOutsideTemperature			...
			= tController.atForecastsSignals(iForecastedOutsideTemperatureIndex).ExtractSamplesAt(afTimesNeededForTheForecastedOccupancy);
		iCurrentOutsideTemperature				...
			= tController.atForecastsSignals(iCurrentOutsideTemperatureIndex).ExtractSamplesAt(afTimesNeededForTheForecastedOccupancy);
		%
		%
		% arrange the vector in the requested way
		aiOccupancy				= [ iCurrentOccupancy ;				...
									aiForecastedOccupancy			];
								
		afSolareRadiation		= [ iCurrentSolarRadiation ;		...
									iForecastedSolarRadiation		];
								
		afOutsideTemperature	= [ iCurrentOutsideTemperature ;	...
									iForecastedOutsideTemperature	];
								
		afDisturbances			= [ afOutsideTemperature' ;			...
									afSolareRadiation' ;			...
									aiOccupancy'					];
		%
		tController.tModel.afWW = afDisturbances(:);
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the disturbances vector for the optimization problem');
		%
	end;% end catch
	%
end %