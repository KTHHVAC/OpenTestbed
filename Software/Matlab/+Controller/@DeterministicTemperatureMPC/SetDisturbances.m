function SetDisturbances( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		%------------------------------------------------------------------
		% preliminary operations
		tDevicesIDs							= Signal.GetDevicesIDs();
		tSignalsIDs							= Signal.GetSignalsIDs();
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		%
		%------------------------------------------------------------------
		% retriving the needed indexes 
		iForecastedOccupancyIndex	=										...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedOccupancy8h,				...
							tDevicesIDs.iA225LocalLookUpTableForecast	);
		%
		iCurrentOccupancyIndex		=										...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iOccupancy,							...
							tDevicesIDs.iManualPeopleCounter				);
		%
		iForecastedSolarRadiationIndex	=												...
				Signal.FindSignalIndex(													...
							tController.atForecastsSignals,								...
							tSignalsIDs.iForecastedExternalLightingTop8h,	...
							tDevicesIDs.iEXTERNALLocalLookUpTableWeatherForecast		);
		%
		%
		iCurrentSolarRadiationIndex		=									...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iExternalLightingTop,				...
							tDevicesIDs.iEXTERNALLocalLookUpTableWeatherForecast	);
		%				
		iForecastedOutsideTemperatureIndex	=								...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedExternalTemperature8h,	...
							tDevicesIDs.iWundergroundWeatherForecast	); 
		%
		%				
		iCurrentOutsideTemperatureIndex	=									...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iTemperatureOfOutsideEnvironment,	...
							tDevicesIDs.iPLC	);				
		%
		%
		%
		%
		%				
		iForecastedRoom2TemperatureIndex	=								...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedTemperatureOfEnvironment8h,	...
							tDevicesIDs.iA231LocalLookUpTableForecast		); 
		
		iForecastedCorridorTemperatureIndex	=								...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedTemperatureOfEnvironment8h,	...
							tDevicesIDs.iA208LocalLookUpTableForecast		); 
						
		iForecastedRoom3TemperatureIndex	=								...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedTemperatureOfEnvironment8h,	...
							tDevicesIDs.iA221LocalLookUpTableForecast	); 
						
		iForecastedCeilingTemperatureIndex	=								...
				Signal.FindSignalIndex(										...
							tController.atForecastsSignals,					...
							tSignalsIDs.iForecastedTemperatureOfEnvironment8h,	...
							tDevicesIDs.iA225LocalLookUpTableForecast		); 
		
						
		iCurrentRoom2TemperatureIndex	=									...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iTemperatureOfEnvironment,			...
							tDevicesIDs.iMote1213							); 
		
		iCurrentCorridorTemperatureIndex	=								...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iTemperatureOfEnvironment,			...
							tDevicesIDs.iMote1003							); 
						
		iCurrentRoom3TemperatureIndex	=									...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iTemperatureOfWall,					...
							tDevicesIDs.iMote1110							); 
						
		iCurrentCeilingTemperatureIndex	=									...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iTemperatureOfCeiling,				...
							tDevicesIDs.iMote1037							); 
		
		
		
		
		%------------------------------------------------------------------
		% setting the disturbances vector
		%
		% interested samples times for the forecasts
		fSamplingTimeInJulianDates =	Time.GetJulianSecond * tController.fSamplingTimeInSeconds;
		%
		afTimesNeededForTheDisturbancesForecasts =																...
				[		fCurrentJulianDate + fSamplingTimeInJulianDates											...
					:	fSamplingTimeInJulianDates																...
					:	fCurrentJulianDate + fSamplingTimeInJulianDates * ( tController.iPredictionHorizon - 1)	]';
		%
		%
		% occupancy
		aiForecastedOccupancy					...
			= tController.atForecastsSignals(iForecastedOccupancyIndex).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts,true);
		iCurrentOccupancy						...
			= tController.atMeasurementsSignals(iCurrentOccupancyIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		% solar radiation
		iForecastedSolarRadiation				...
			= tController.atForecastsSignals(iForecastedSolarRadiationIndex).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		iCurrentSolarRadiation					...
			= tController.atMeasurementsSignals(iCurrentSolarRadiationIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		% outside temperature
		iForecastedOutsideTemperature			...
			= tController.atForecastsSignals(iForecastedOutsideTemperatureIndex).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		iCurrentOutsideTemperature				...
			= tController.atMeasurementsSignals(iCurrentOutsideTemperatureIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		% room 2
		afForecastedTemperatureRoom2			...
			= tController.atForecastsSignals(iForecastedRoom2TemperatureIndex).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureRoom2				...
			= tController.atMeasurementsSignals(iCurrentRoom2TemperatureIndex).ExtractSamplesAt(fCurrentJulianDate); 
		%
		% corridor
		afForecastedTemperatureCorridor			...
			= tController.atForecastsSignals(iForecastedCorridorTemperatureIndex).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCorridor				...
			= tController.atMeasurementsSignals(iCurrentCorridorTemperatureIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		% room 3
		afForecastedTemperatureRoom3			...
			= tController.atForecastsSignals(iForecastedRoom3TemperatureIndex).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureRoom3				...
			= tController.atMeasurementsSignals(iCurrentRoom3TemperatureIndex).ExtractSamplesAt(fCurrentJulianDate); 
		%
		% Ceiling
		afForecastedTemperatureCeiling			...
			= tController.atForecastsSignals(iForecastedCeilingTemperatureIndex).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCeiling				...
			= tController.atMeasurementsSignals(iCurrentCeilingTemperatureIndex).ExtractSamplesAt(fCurrentJulianDate); 
		%
		%
		%		
		% arrange the vector in the requested way
		aiOccupancy				= [ iCurrentOccupancy ;				...
									aiForecastedOccupancy			];
								
		afSolareRadiation		= [ iCurrentSolarRadiation ;		...
									iForecastedSolarRadiation		];
								
		afOutsideTemperature	= [ iCurrentOutsideTemperature ;	...
									iForecastedOutsideTemperature	];
		
		afRoom2					= [ fCurrentTemperatureRoom2 ;		...
									afForecastedTemperatureRoom2	];
		
		afCorridor				= [ fCurrentTemperatureCorridor ;	...
									afForecastedTemperatureCorridor	];
								
		afRoom3					= [ fCurrentTemperatureRoom3 ;		...
									afForecastedTemperatureRoom3	];
								
		afCeiling				= [ fCurrentTemperatureCeiling ;	...
									afForecastedTemperatureCeiling	];
										
		% [E][w];[w] external uncontrolled variables
		%                1     2    3    4    5   6  7  8  9 10    11
		%[w]=transpose([Tamb,Two2,Two3,Two4,Two5,I1,I2,I3,I4,I5, Npeople])

		% Ec_room_r   = [E(:,1),E(:,2),E(:,3),E(:,4),E(:,5),E(:,6),E(:,11)];  % Disturbance matr
		%
		%
		aafDisturbances			= [ afOutsideTemperature' ;			...
									afRoom2' ;						...
									afCorridor' ;					...
									afRoom3' ;						...
									afCeiling'	;					...
									afSolareRadiation' ;			...
									aiOccupancy'					];
		%
		tController.tModel.afWW = aafDisturbances(:);
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the disturbances vector for the optimization problem');
		%
	end;% end catch
	%
end %