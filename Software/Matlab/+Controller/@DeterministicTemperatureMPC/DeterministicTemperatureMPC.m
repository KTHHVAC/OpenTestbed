classdef DeterministicTemperatureMPC < Controller.DeterministicMPC
	%
    properties
		%
		%
		afLowerBoundForTheVentilation;
		afRhoSoftConstraintsWeight;
		%
		%
		fTacPercentageOnSupplyAir
		fTaiPercentageOnSupplyAir
		% output values after the post processing phase
		%
		fAirConditionedTemperature;
		fMeanRadiantTemperature;
		fAirMassFlow;
		%
	end;%
	%
	%
	% ---------------------------------------------------------------------
	methods
		%
		function tController = DeterministicTemperatureMPC( tParameters )
			%
			tController = tController@Controller.DeterministicMPC( tParameters );
			%
			tController.fTacPercentageOnSupplyAir	=	tParameters.fTacPercentageOnSupplyAir;
			tController.fTaiPercentageOnSupplyAir	=	tParameters.fTaiPercentageOnSupplyAir;
			tController.tInputsBounds				=	tParameters.tInputsBounds;
			tController.tOutputsBounds				=	tParameters.tOutputsBounds;
			%
			%
			%
		end;% default constructor
		%
		
		%
	end %
	%
end % classdef

