function SetCostParameters( tController )
	%Build the linear part and the quadratic part of the cost function
	C_PA	= 1006;
	A_RAD	= 50;
	H_RAD	= 8;
	alpha	= 6;
	%
	iNumberOfInputs		=	size(tController.tModel.aafB, 2);
	iNumberOfOutputs	=	size(tController.tModel.aafC, 1);
	%
	% Allocating space for Linear Cost Matrix
	tController.afLinearCostFunctionMatrix = zeros	(	iNumberOfOutputs,				...
														iNumberOfInputs,				...
														tController.iPredictionHorizon	...
													);
	% Setting Linear Cost Matrix over the whole Prediction Horizon											
	for iStepTime = 1 : tController.iPredictionHorizon
		%
		tController.afLinearCostFunctionMatrix( :,:,iStepTime)											...
					= [		alpha * C_PA	* tController.afLowerBoundForTheVentilation(iStepTime),			...
							alpha * C_PA	* tController.afLowerBoundForTheVentilation(iStepTime),			...
							alpha * C_PA,																...
							alpha * C_PA,																...
							A_RAD * H_RAD ];
		%
	end;%
	%
	tController.afRhoSoftConstraintsWeight		= 10^4;
% 	tController.aafQuadraticCostFunctionMatrix	= diag([1 1 1]);
	%
end %