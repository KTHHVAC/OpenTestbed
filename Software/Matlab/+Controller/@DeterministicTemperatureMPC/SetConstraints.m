% function SetConstraints( tController, tParameters )
%
function SetConstraints( tController )
	% Setting the actuation and comfort constraints to pass for the system
	% dynamic
	%
	try %
		tDevicesIDs							= Signal.GetDevicesIDs();
		tSignalsIDs							= Signal.GetSignalsIDs();
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		
		
		TODO: build the constaints!!!!!!!!!
% 		%
% 		%retriving the needed indexes
% 		iCO2OfTheRoomIndex	=									...
% 				Signal.FindSignalIndex(							...
% 							tController.atMeasurementsSignals,	...
% 							tSignalsIDs.iCO2OfEnvironment,		...
% 							tDevicesIDs.iPLC_A225				);
% 		%
% 		%
% 		fCO2OfTheRoom		= tController.atMeasurementsSignals(iCO2OfTheRoomIndex).ExtractSamplesAt(fCurrentJulianDate);
% 		%
% 		tController.tInputsBounds.afInputsLowerBounds		=				...
% 					tController.tInputsBounds.AirMassFlow.fLowerBound		...
% 				*	( fCO2OfTheRoom - LOWEST_CO2_CONCENTRATION_POSSIBLE );
% 		%	
% 		tController.tInputsBounds.afInputsUpperBounds		=				...
% 					tController.tInputsBounds.AirMassFlow.fUpperBound		...
% 				*	( fCO2OfTheRoom - LOWEST_CO2_CONCENTRATION_POSSIBLE );
% 		%	
% 		tController.tOutputsBounds.afOutputsLowerBounds		=				...
% 					tController.tOutputsBounds.CO2.fLowerBound	...
% 				-	tController.fLowestCO2ConcentrationPossible; 
% 		%	
% 		tController.tOutputsBounds.afOutputsUpperBounds		=				...
% 					tController.tOutputsBounds.CO2.fUpperBound	...
% 				-	tController.fLowestCO2ConcentrationPossible;
		
		
		
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the constraints.')
		%
	end;% end catch
	%
end %



