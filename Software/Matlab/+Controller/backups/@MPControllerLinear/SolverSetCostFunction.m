function SolverSetCostFunction( tController )
 % TODO: add C and check the equality method
    if tController.ControlledVariable == Controller.Variables.Temperature 
		%
        if strcmp(tController.strConstraintsType, 'inequality')
            % Set the linear function coefficients (n x 1)
            %
            afCoefficientsOfCostFunction =								...
				repmat(tController.tModel.tActuationBounds.CostVector,	...
				tController.iPredictionHorizon,1);   
			%
			if tController.bUseSoftConstraints == true
				%
				afCoefficientsOfCostFunction =										...
					[afCoefficientsOfCostFunction;									...
					tController.fWeightSlackVariable								...
					* ones(tController.iPredictionHorizon*tController.tModel.iNy, 1)];
				%
			end
		elseif strcmp(tController.strConstraintsType, 'equality')
			%
            afCoefficientsOfCostFunction = ones(tController.iPredictionHorizon  ...
				* (tController.tModel.iNu + tController.tModel.iNx), 1);
			%
		else
			%
            tController.AddError('MPControllerlinear.SolverSetCostFunction: Constraints type not supported');
			%
		end
		%
    elseif tController.ControlledVariable == Controller.Variables.CO2
		%
        if strcmp(tController.strConstraintsType, 'inequality')
            % Set the linear function coefficients (n x 1)
            %
			afCoefficientsOfCostFunction =								...
				ones(tController.iPredictionHorizon * tController.tModel.iNu, 1);      
			%
			if tController.bUseSoftConstraints == true
				%
				afCoefficientsOfCostFunction = [afCoefficientsOfCostFunction;	...
					tController.fWeightSlackVariable							...
					* ones(tController.iPredictionHorizon*tController.tModel.iNy , 1)];
				%
			end
			%
		elseif strcmp(tController.strConstraintsType, 'equality')
			%
            afCoefficientsOfCostFunction = ones(tController.iPredictionHorizon * (tController.tModel.iNu + tController.tModel.iNx), 1);
			%
		else
			%
            tController.AddError('MPControllerlinear.SolverSetCostFunction: Constraints type not supported');
			%
		end
        %
	end
	%
	tController.tCost.aafQuadFunctCoef = [];
    tController.tCost.afCoefficientsOfLinearCostFunction = afCoefficientsOfCostFunction;
	tController.tCost.achCPLEXVarType = [];
	%
end