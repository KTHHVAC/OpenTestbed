function SetDisturbances( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		%------------------------------------------------------------------
		% preliminary operations
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		iNumberOfScenarios					= 10;
		iHorizonLength						= tController.iPredictionHorizon;
		iNumberOfDisturbances				= size(tController.tModel.aafE,2);
		tController.tModel.aafScenarios		= zeros(iNumberOfDisturbances,iNumberOfScenarios,iHorizonLength);
		
% 		------------------------------------------------------------------
% 		setting the disturbances vector
		
% 		interested samples times for the forecasts
		fSamplingTimeInJulianDates =	Time.GetJulianSecond() * tController.fSamplingTimeInSeconds;
		
		afTimesNeededForTheDisturbancesForecasts =																...
				[		fCurrentJulianDate + fSamplingTimeInJulianDates											...
					:	fSamplingTimeInJulianDates																...
					:	fCurrentJulianDate + fSamplingTimeInJulianDates * ( iNumberOfScenarios - 1)	]';
		
		
%		room 2
		afForecastedTemperatureRoom2			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA231).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureRoom2				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall2Out).ExtractSamplesAt(fCurrentJulianDate); 
		
% 		corridor
		afForecastedTemperatureCorridor			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA208).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCorridor				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall3Out).ExtractSamplesAt(fCurrentJulianDate);
		
% 		room 3
		afForecastedTemperatureRoom3			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA221).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureRoom3				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall4Out).ExtractSamplesAt(fCurrentJulianDate); 
		
% 		Ceiling
		afForecastedTemperatureCeiling			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA225).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCeiling				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfCeilingOut).ExtractSamplesAt(fCurrentJulianDate); 
		
		afRoom2					= [ fCurrentTemperatureRoom2 ;		...
									afForecastedTemperatureRoom2	];
		
		afCorridor				= [ fCurrentTemperatureCorridor ;	...
									afForecastedTemperatureCorridor	];
								
		afRoom3					= [ fCurrentTemperatureRoom3 ;		...
									afForecastedTemperatureRoom3	];
								
		afCeiling				= [ fCurrentTemperatureCeiling ;	...
									afForecastedTemperatureCeiling	];
		
		aafOccupancyScenarios	=	tController.tOccupancyScenariosGenerator.ExtractTrueScenarios(fCurrentJulianDate, iNumberOfScenarios);
		aafRadiationScenarios	=	tController.tRadiationScenariosGenerator.ExtractTrueScenarios(fCurrentJulianDate, iNumberOfScenarios);
		aafTemperatureScenarios =	tController.tTemperatureScenariosGenerator.ExtractTrueScenarios(fCurrentJulianDate, iNumberOfScenarios);
		
		for iStepTime = 1:iHorizonLength
			%	
			tController.tModel.aafScenarios(:,:,iStepTime) =  [	aafTemperatureScenarios(:,iStepTime)' ;					...
																ones(1, iNumberOfScenarios)*afRoom2(iStepTime) ;		...
																ones(1, iNumberOfScenarios)*afCorridor(iStepTime) ;		...
																ones(1, iNumberOfScenarios)*afRoom3(iStepTime) ;		...
																ones(1, iNumberOfScenarios)*afCeiling(iStepTime);		...
																aafRadiationScenarios(:,iStepTime)' ;					...
																aafOccupancyScenarios(:,iStepTime)'	];
			%
		end;% end for
										
% 		afRoom2					= [ 21 21.2 21.5 21 21.2 21.5 21 21.2 21.5 21.8];
% 		
% 		afCorridor				= [ 21.3 21.2 21 20.7 20.9 22 21.9 21.3 21.4 21.5];
% 								
% 		afRoom3					= [ 21.3 22.2 20 20.4 20 22 21.9 21.3 21.4 21.3];
% 								
% 		afCeiling				= [ 21.3 21.2 21 20.7 20.9 22 21.9 21.3 21.4 21.5];
% 		
% 		aafTemperatureScenarios = [ -1  -3 -2 0 -5 -2 -3 -4 -3 -2];
% 		
% 		aafRadiationScenarios	= [ zeros(1,10)];
% 		
% 		aafOccupancyScenarios	= randi([0,10],1, 10);
% 		
% 		tController.tModel.aafScenarios =  [ aafTemperatureScenarios ;	...
% 											afRoom2 ;							...
% 											afCorridor ;						...
% 											afRoom3 ;							...
% 											afCeiling	;						...
% 											aafRadiationScenarios;		...
% 											aafOccupancyScenarios	];
		catch exception
		%
		disp(exception.message);
		warning('Problems setting the disturbances vector for the optimization problem');
		%
	end;% end catch
	%
end %