% Algorithm:
% - load the raw data
% - transform them in Signal() objects
% - save them in the controller 
%
function LoadActuationLevelsLookupTable( tController )
	%
	try %
		% -------------------------------------------------------------------------
		% load from .txt
		tFileID			= fopen(tController.strActuationLevelsLookupFile);
		aacLookupTable 	= textscan(	tFileID,							...
									'%.2f %.2f %.2f %.2f %.2f %.2f',	... MATLAB DI MERDA DEVI MORIRE
									'HeaderLines', 1					);
		%
		aiHours 			= aacLookupTable{1};
		aiMinutes 			= aacLookupTable{2};
		aiFreshAirIn		= aacLookupTable{3};
		aiExhaustAirOut		= aacLookupTable{4};
		aiRadiators			= aacLookupTable{5};
		aiAirConditioning	= aacLookupTable{6};
		%
		%
		% -------------------------------------------------------------------------
		% transform in Signal() objects
		%
		% get the dates
		fCurrentJulianDate	= Time.GetCurrentJulianDate();
		%
		if ( tController.bAbsoluteTiming )
			%
			afJulianDates		= 		Time.GetCurrentJulianDay() 								...
								+	( ( aiHours * 60 + aiMinutes ) .* Time.GetJulianMinute() );
			%
		else%
			%
			afJulianDates		=		Time.GetCurrentJulianDay()											...
									+																		...
										(																	...
											(	Time.JulianDateToHour(fCurrentJulianDate)+ aiHours ) * 60	...
											+																...
											(	Time.JulianDateToMinute(fCurrentJulianDate)+ aiMinutes )	...
										)																	...
										.* Time.GetJulianMinute();
			%
			%
		end;%
		%
		%
		% initialize the objects
		tFreshAirInSignal		= Signal();
		tExhaustAirOutSignal	= Signal();
		tRadiatorsSignal		= Signal();
		tAirConditioningSignal	= Signal();
		%
		% fill them
		for iSample = 1:numel( afJulianDates )
			%
			tFreshAirInSignal.InsertAsPiecewiseConstant( 		aiFreshAirIn(iSample),		afJulianDates(iSample));
			tExhaustAirOutSignal.InsertAsPiecewiseConstant( 	aiExhaustAirOut(iSample),	afJulianDates(iSample));
			tRadiatorsSignal.InsertAsPiecewiseConstant(			aiRadiators(iSample), 		afJulianDates(iSample));
			tAirConditioningSignal.InsertAsPiecewiseConstant(	aiAirConditioning(iSample),	afJulianDates(iSample));
			%
		end;%
		%
		%
		% -------------------------------------------------------------------------
		% save the signals
		%
		% clean everything
		tController.atActuationsSignals = [];
		%
		% storage allocation
		tController.atActuationsSignals = Signal(4);
		%
		% initialization
		tSignalsIDs = Signal.GetSignalsIDs();
		tDevicesIDs = Signal.GetDevicesIDs();
		%
		tController.atActuationsSignals(1) 					= tFreshAirInSignal;
		tController.atActuationsSignals(1).iSignalID 		= tSignalsIDs.iFreshAirInletValveOpeningPercentage;
		tController.atActuationsSignals(1).iDeviceID 		= tDevicesIDs.iPLC_A225;
		tController.atActuationsSignals(1).strDescription	= Signal.GetDescription(	tController.atActuationsSignals(1).iSignalID,	...
																						tController.atActuationsSignals(1).iDeviceID	);
		%
		tController.atActuationsSignals(2) 					= tExhaustAirOutSignal;
		tController.atActuationsSignals(2).iSignalID 		= tSignalsIDs.iExhaustAirOutletValveOpeningPercentage;
		tController.atActuationsSignals(2).iDeviceID 		= tDevicesIDs.iPLC_A225;
		tController.atActuationsSignals(2).strDescription	= Signal.GetDescription(	tController.atActuationsSignals(2).iSignalID,	...
																						tController.atActuationsSignals(2).iDeviceID	);
		%
		tController.atActuationsSignals(3) 					= tRadiatorsSignal;
		tController.atActuationsSignals(3).iSignalID 		= tSignalsIDs.iRadiatorValveOpeningPercentage;
		tController.atActuationsSignals(3).iDeviceID 		= tDevicesIDs.iPLC_A225;
		tController.atActuationsSignals(3).strDescription	= Signal.GetDescription(	tController.atActuationsSignals(3).iSignalID,	...
																						tController.atActuationsSignals(3).iDeviceID	);
		%
		tController.atActuationsSignals(4) 					= tAirConditioningSignal;
		tController.atActuationsSignals(4).iSignalID 		= tSignalsIDs.iACValveOpeningPercentage;
		tController.atActuationsSignals(4).iDeviceID 		= tDevicesIDs.iPLC_A225;
		tController.atActuationsSignals(4).strDescription	= Signal.GetDescription(	tController.atActuationsSignals(4).iSignalID,	...
																						tController.atActuationsSignals(4).iDeviceID	);
		%
		%
	catch exception
		%
		warning('TODO write a better description');
		%
	end % try
	%
end % function

