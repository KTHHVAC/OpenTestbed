% function SetInitialConditions( tController )
% 
function SetInitialConditions( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		%
		afWallsArea                     = [30.08,28.8,30.08,28.8,84.6,84.6];
		%
		%------------------------------------------------------------------
		%retriving the needed indexes
		iTemperatureOfTheRoomIndex		=	tController.tMeasurementsSignalsIndexes.iRoomTemperature;
		iTemperatureWall_1_InIndex		=	tController.tMeasurementsSignalsIndexes.iTemperatureOfWall1In;
		iTemperatureWall_2_InIndex		=	tController.tMeasurementsSignalsIndexes.iTemperatureOfWall2In;
		iTemperatureWall_3_InIndex		=	tController.tMeasurementsSignalsIndexes.iTemperatureOfWall3In;
		iTemperatureWall_4_InIndex		=	tController.tMeasurementsSignalsIndexes.iTemperatureOfWall4In;
		iTemperatureFloor_InIndex		=	tController.tMeasurementsSignalsIndexes.iTemperatureOfFloorIn;
		iTemperatureCeiling_InIndex		=	tController.tMeasurementsSignalsIndexes.iTemperatureOfCeilingIn;
		%
		%------------------------------------------------------------------
		% retriving the measurements i need
		%
		fTemperatureOfTheRoom			= tController.atMeasurementsSignals(iTemperatureOfTheRoomIndex).ExtractSamplesAt(fCurrentJulianDate);		
		fTemperatureWall_1_In			= tController.atMeasurementsSignals(iTemperatureWall_1_InIndex).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureWall_2_In			= tController.atMeasurementsSignals(iTemperatureWall_2_InIndex).ExtractSamplesAt(fCurrentJulianDate);		
		fTemperatureWall_3_In			= tController.atMeasurementsSignals(iTemperatureWall_3_InIndex).ExtractSamplesAt(fCurrentJulianDate);	
		fTemperatureWall_4_In			= tController.atMeasurementsSignals(iTemperatureWall_4_InIndex).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureFloor_In			= tController.atMeasurementsSignals(iTemperatureFloor_InIndex).ExtractSamplesAt(fCurrentJulianDate);
		fTemperatureCeiling_In			= tController.atMeasurementsSignals(iTemperatureCeiling_InIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		fTotalWallsArea					= sum(afWallsArea);
		%
		fTemperatureWall_average		= (fTemperatureWall_1_In*afWallsArea(1,1)+fTemperatureWall_2_In*afWallsArea(1,2)+fTemperatureWall_3_In*afWallsArea(1,3)+...
										   fTemperatureWall_4_In*afWallsArea(1,4)+fTemperatureFloor_In*afWallsArea(1,6)+fTemperatureCeiling_In*afWallsArea(1,5))/(fTotalWallsArea);
		%
		afInitialConditions				= [		fTemperatureOfTheRoom	 ;
												fTemperatureWall_average ];
		%
		tController.tModel.afX0			= afInitialConditions;
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the initial conditions of the optimization problem');
		%
	end;% end catch
	%
end %