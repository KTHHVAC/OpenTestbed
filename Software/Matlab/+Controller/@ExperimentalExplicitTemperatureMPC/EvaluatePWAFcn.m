% function that chooses the PWA function based on the Lower Bound for the
% ventilation and then evaluates it
%
function EvaluatePWAFcn( tController)
	%
	try
		%
		if ( 0 <= tController.afLowerBoundForTheVentilation < 0.1002)
			% will run OriginalPWAfunctionStochastic_1.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_1(tController.tModel.afX0);
			%
		elseif ( 0.1002 <= tController.afLowerBoundForTheVentilation < 0.1094)
			% will run OriginalPWAfunctionStochastic_2.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_2(tController.tModel.afX0);
			%
		elseif ( 0.1094 <= tController.afLowerBoundForTheVentilation < 0.1177)
			% will run OriginalPWAfunctionStochastic_3.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_3(tController.tModel.afX0);
			%
		elseif ( 0.1177 <= tController.afLowerBoundForTheVentilation < 0.1260)
			% will run OriginalPWAfunctionStochastic_4.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_4(tController.tModel.afX0);
			%
		elseif ( 0.1260 <= tController.afLowerBoundForTheVentilation < 0.1343)
			% will run OriginalPWAfunctionStochastic_5.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_5(tController.tModel.afX0);
			%
		elseif ( 0.1343 <= tController.afLowerBoundForTheVentilation < 0.1425)
			% will run OriginalPWAfunctionStochastic_6.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_6(tController.tModel.afX0);
			%
		elseif ( 0.1425 <= tController.afLowerBoundForTheVentilation < 0.1508)
			% will run OriginalPWAfunctionStochastic_7.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_7(tController.tModel.afX0);
			%
		elseif ( 0.1508 <= tController.afLowerBoundForTheVentilation < 0.1591)
			% will run OriginalPWAfunctionStochastic_8.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_8(tController.tModel.afX0);
			%
		elseif ( 0.1591 <= tController.afLowerBoundForTheVentilation < 0.1673)
			% will run OriginalPWAfunctionStochastic_9.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_9(tController.tModel.afX0);
			%
		elseif ( 0.1673 <= tController.afLowerBoundForTheVentilation < 0.1756)
			% will run OriginalPWAfunctionStochastic_10.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_10(tController.tModel.afX0);
			%
		elseif ( 0.1756 <= tController.afLowerBoundForTheVentilation < 0.1839)
			% will run OriginalPWAfunctionStochastic_11.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_11(tController.tModel.afX0);
			%
		elseif ( 0.1839 <= tController.afLowerBoundForTheVentilation < 0.1921)
			% will run OriginalPWAfunctionStochastic_12.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_12(tController.tModel.afX0);
			%
		elseif ( 0.1921 <= tController.afLowerBoundForTheVentilation < 0.2004)
			% will run OriginalPWAfunctionStochastic_13.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_13(tController.tModel.afX0);
			%
		elseif ( 0.2004 <= tController.afLowerBoundForTheVentilation < 0.2087)
			% will run OriginalPWAfunctionStochastic_14.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_14(tController.tModel.afX0);
			%
		elseif ( 0.2087 <= tController.afLowerBoundForTheVentilation < 0.2170)
			% will run OriginalPWAfunctionStochastic_15.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_15(tController.tModel.afX0);
			%
		elseif ( 0.2170 <= tController.afLowerBoundForTheVentilation < 0.2252)
			% will run OriginalPWAfunctionStochastic_16.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_16(tController.tModel.afX0);
			%
		elseif ( 0.2252 <= tController.afLowerBoundForTheVentilation < 0.3400)
			% will run OriginalPWAfunctionStochastic_17.m
			[tController.afOptimizationProblemSolution, region] = OriginalPWAfunctionStochastic_17(tController.tModel.afX0);
			%
		end
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems with Evaluating/Selecting the PWA.');
		%
	end;% end catch
	%
end % end function