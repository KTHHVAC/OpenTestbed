% function SetConstraints( tController, tParameters )
%
function SetConstraints( tController )
	% Setting the actuation and comfort constraints to pass for the system
	% dynamic
	%
	try %
		%
		%
		%
		tDevicesIDs							= Signal.GetDevicesIDs();
		tSignalsIDs							= Signal.GetSignalsIDs();
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		%
		%------------------------------------------------------------------
		%retriving the needed indexes
		iTemperatureOfTheAirInletIndex	=								...
				Signal.FindSignalIndex(									...
							tController.atMeasurementsSignals,			...
							tSignalsIDs.iTemperatureOfFreshAirInlet,	...
							tDevicesIDs.iMote1004				);
		%
		fTemperatureOfTheAirInlet	= tController.atMeasurementsSignals(iTemperatureOfTheAirInletIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		%------------------------------------------------------------------
		%
		tController.tInputsBounds.fMinCoolingTemperature = 0.32 * 16.5 + 0.68 * fTemperatureOfTheAirInlet;
		tController.tInputsBounds.fMaxHeatingTemperature = fTemperatureOfTheAirInlet;
		%
		tController.tInputsBounds.afInputsLowerBounds = ...
			[																...	
			tController.tInputsBounds.DeltaTh.fLowerBound ;					...
			tController.tInputsBounds.DeltaTc.fLowerBound ;					...
			tController.tInputsBounds.AdditionalHeating.fLowerBound ;		...
			tController.tInputsBounds.AdditionalCooling.fLowerBound ;		...
			tController.tInputsBounds.DeltaTrad.fLowerBound ;				...
			];
		%
		tController.tInputsBounds.afInputsUpperBounds =					...
			[															...	
			tController.tInputsBounds.DeltaTh.fUpperBound ;				...
			tController.tInputsBounds.DeltaTc.fUpperBound ;				...
			0 ;															...
			0 ;															...
			tController.tInputsBounds.DeltaTrad.fUpperBound ;			...
			0;															...
			0
			];
	
	
		tController.tOutputsBounds.afOutputsLowerBounds	= tController.tOutputsBounds.Temperature.fLowerBound;
		tController.tOutputsBounds.afOutputsUpperBounds = tController.tOutputsBounds.Temperature.fUpperBound;
		%
		% setting Gu 
		for iStepTime = 1 : tController.iPredictionHorizon
			%
% 			aafSumContribution =																												...
% 					diag(	[	- tController.tInputsBounds.AirMassFlow.fUpperBound	+ tController.afLowerBoundForTheVentilation(iStepTime),		...
% 								- tController.tInputsBounds.AirMassFlow.fUpperBound	+ tController.afLowerBoundForTheVentilation(iStepTime),		...
% 								0	], ...
% 							-2																				...
% 						);
			fDeltaAirMass = tController.tInputsBounds.AirMassFlow.fUpperBound	-	tController.afLowerBoundForTheVentilation(iStepTime);
			aafSumContribution =	[		 0				 0				 0		 0		0;	...
											 0				 0				 0		 0		0;	...
										-fDeltaAirMass	 fDeltaAirMass		 0		-1		0;	...
										 fDeltaAirMass	-fDeltaAirMass		-1		 0		0;	...
											 0				 0				 0		 0		0	...
									];
									
			tController.tModel.aaafGu(:,:,iStepTime) =	[	-	eye( size(tController.tModel.aafB,2 ) )						;	...
																eye( size(tController.tModel.aafB,2 ) )							...
															+	aafSumContribution											;	...
 																-fDeltaAirMass		0				1		0		0		;	...
 																0				-fDeltaAirMass		0		1		0			...	
														];
		end
		%
		tController.tModel.aafGxMixed = [		tController.tModel.aafC;	...
											-	tController.tModel.aafC ];
		%
		tController.tModel.aafGeMixed = [   1 ;			...
											1	];	% soft constraints on mixed input constraints 
		%								
		tController.tModel.aafGuMixed = [	-1	 1	0	0	0	;			...
											1	-1	0	0	0				...
										];  
		tController.tModel.afR		  = [	-	tController.tInputsBounds.fMinCoolingTemperature;		...
												tController.tInputsBounds.fMaxHeatingTemperature	];  
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the constraints.')
		%
	end;% end catch
	%
end %



