function SetDisturbancesRoomA235( tController )
	%
	%
	try %
		%
		%------------------------------------------------------------------
		% Preliminary operations
		%------------------------------------------------------------------
		fCurrentJulianDate	= Time.GetCurrentJulianDate();
		%
		%------------------------------------------------------------------
		% Setting the disturbances vector
		%------------------------------------------------------------------
		%
		% Interested samples times for the forecasts
		%
		fSamplingTimeInJulianDates =									...
			Time.GetJulianSecond() * tController.fSamplingTimeInSeconds;
		%
		% Times for the forecast. We don't start from the current date
		% since we can measure the first value
		%
		afTimesNeededForTheDisturbancesForecasts =																...
				(		fCurrentJulianDate + fSamplingTimeInJulianDates											...
					:	fSamplingTimeInJulianDates																...
					:	fCurrentJulianDate + fSamplingTimeInJulianDates * ( tController.iPredictionHorizon - 1)	)';
		%
		% Room A:231
		afForecastedTemperatureRoom2			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA231).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureRoom2				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall4Out).ExtractSamplesAt(fCurrentJulianDate); 
		%
		% Corridor
		afForecastedTemperatureCorridor			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA208).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCorridor				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall3Out).ExtractSamplesAt(fCurrentJulianDate);
		%
		%
		% Ceiling
		afForecastedTemperatureCeiling			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA235).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCeiling				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfCeilingOut).ExtractSamplesAt(fCurrentJulianDate); 
		%
		%------------------------------------------------------------------
		% Occupancy
		%
		fOccupancyCopulasSamplingTimeInJulianDate =										...
						tController.tOccupancyScenariosGenerator.fSamplingTimeInSeconds	...
					*	Time.GetJulianSecond();
		%
		afOccupancyCopulasTimes	=	(			fCurrentJulianDate																...
										:		fOccupancyCopulasSamplingTimeInJulianDate										...
										:		fCurrentJulianDate																...
											+	fOccupancyCopulasSamplingTimeInJulianDate										...
											*	( tController.tOccupancyScenariosGenerator.iForecastingHorizonInSamples	- 1)	);
		%
		aafAllOccupancyScenarios = zeros( tController.iPredictionHorizon, tController.iNumberOfScenarios );
		%
		afForecastedOccupancy					...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedOccupancy).ExtractSamplesAt( afOccupancyCopulasTimes, true);
		%
		iCurrentOccupancy						...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iOccupancy).ExtractSamplesAt( fCurrentJulianDate );
		%
		for iScenario = 1 : numel( tController.aafOccupancyScenarios(: , 1) )
			%
% 			aiSingleOccupancyScenario	= afForecastedOccupancy + tController.aafOccupancyScenarios(iScenario , :);
			aiSingleOccupancyScenario	= tController.aafOccupancyScenarios( iScenario , : );
			%
			
			tTempSignal = Signal();
			tTempSignal.Insert(	aiSingleOccupancyScenario ,			...
								afOccupancyCopulasTimes,			...
								true								);
			afSampledOccupancyForecasts								...
				= tTempSignal.ExtractSamplesAt( afTimesNeededForTheDisturbancesForecasts, true);
			
			%
			%
			aafAllOccupancyScenarios( : , iScenario ) = [ iCurrentOccupancy ; afSampledOccupancyForecasts ];
			
			%
		end;%
		tController.tModel.aafAllOccupancyScenarios = aafAllOccupancyScenarios;
		%
		%
		%------------------------------------------------------------------
		% Radiation
		%
		fRadiationCopulasSamplingTimeInJulianDate =										...
						tController.tRadiationScenariosGenerator.fSamplingTimeInSeconds	...
					*	Time.GetJulianSecond();
		%
		afRadiationCopulasTimes		=	[			fCurrentJulianDate																...
											:		fRadiationCopulasSamplingTimeInJulianDate										...
											:		fCurrentJulianDate																...
												+	fRadiationCopulasSamplingTimeInJulianDate										...
												*	( tController.tRadiationScenariosGenerator.iForecastingHorizonInSamples	- 1)	];
		%
		aafAllRadiationScenarios = zeros( tController.iPredictionHorizon, tController.iNumberOfScenarios );
		%
		%
		afForecastedRadiation				...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedSolarRadiations).ExtractSamplesAt( afRadiationCopulasTimes );
		%
		iCurrentRadiation					...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iSolarRadiations).ExtractSamplesAt(fCurrentJulianDate);
		%
		for iScenario = 1 : numel( tController.aafRadiationScenarios(: , 1) )
			%
% 			aiSingleOccupancyScenario	= afForecastedRadiation + tController.aafRadiationScenarios(iScenario , :);
			afSingleRadiationScenario	= tController.aafRadiationScenarios( iScenario , :);
			%
			tTempSignal = Signal();
			tTempSignal.Insert(	afSingleRadiationScenario ,			...
								afRadiationCopulasTimes,			...
								true								);
			afSampledRadiationForecasts								...
				= tTempSignal.ExtractSamplesAt( afTimesNeededForTheDisturbancesForecasts, true);
			%
			%
			aafAllRadiationScenarios( : , iScenario ) = [ iCurrentRadiation ; afSampledRadiationForecasts ];
			%
		end;%
		%
		%
		%------------------------------------------------------------------
		% Temperature
		%
		fTemperatureCopulasSamplingTimeInJulianDate =										...
						tController.tTemperatureScenariosGenerator.fSamplingTimeInSeconds	...
					*	Time.GetJulianSecond();
		%
		afTemperatureCopulasTimes	=	[			fCurrentJulianDate + fTemperatureCopulasSamplingTimeInJulianDate			...
											:		fTemperatureCopulasSamplingTimeInJulianDate									...
											:		fCurrentJulianDate															...
												+	fTemperatureCopulasSamplingTimeInJulianDate									...
												*	tController.tTemperatureScenariosGenerator.iForecastingHorizonInSamples		];
		%
		aafAllTemperatureScenarios = zeros( tController.iPredictionHorizon, tController.iNumberOfScenarios );
		%
		afForecastedTemperature				...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedExternalTemperature).ExtractSamplesAt( afTemperatureCopulasTimes );
		%
		iCurrentOutsideTemperature				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iExternalTemperature).ExtractSamplesAt(fCurrentJulianDate);
		%
		fCurrentForecastedOutsideTemperature	...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedExternalTemperatureCurrent).ExtractSamplesAt(fCurrentJulianDate);
		%
		%
		for iScenario = 1 : numel( tController.aafTemperatureScenarios(: , 1) )
			%
			aiSingleTemperatureScenario	= afForecastedTemperature - tController.aafTemperatureScenarios(iScenario , :)';
% 			aiSingleTemperatureScenario	= tController.aafTemperatureScenarios(iScenario , :)';
			%
			tTempSignal = Signal();
			tTempSignal.Insert(	aiSingleTemperatureScenario ,		...
								afTemperatureCopulasTimes,			...
								true								);
			afSampledTemperatureForecasts							...
				= tTempSignal.ExtractSamplesAt( afTimesNeededForTheDisturbancesForecasts, true);
			%	
			%
% 			aafAllTemperatureScenarios( : , iScenario ) = [ iCurrentOutsideTemperature ; afSampledTemperatureForecasts ];
			aafAllTemperatureScenarios( : , iScenario ) = [ fCurrentForecastedOutsideTemperature ; afSampledTemperatureForecasts ];
			%
		end;%
		%
		%
		%------------------------------------------------------------------		
		%		
		% arrange the vector in the requested way
		%		
		afRoom2					= [ fCurrentTemperatureRoom2 ;		...
									afForecastedTemperatureRoom2	];
		
		afCorridor				= [ fCurrentTemperatureCorridor ;	...
									afForecastedTemperatureCorridor	];
								
		afCeiling				= [ fCurrentTemperatureCeiling ;	...
									afForecastedTemperatureCeiling	];
								
% 		fake				= zeros(length(afCeiling),1);
		%
		aafDisturbancesScenarioMatrix	= zeros(	7 * tController.iPredictionHorizon,	... 
													tController.iNumberOfScenarios		); %todo: put 7 only to debug
		%
		for iScenario = 1 : tController.iNumberOfScenarios
			%
			aiOccupancy				= aafAllOccupancyScenarios( : , iScenario );
			aiOccupancy				= min(aiOccupancy,5); %%TO DO Remove the bound when stable
			afSolarRadiation		= aafAllRadiationScenarios( : , iScenario );
			afOutsideTemperature	= aafAllTemperatureScenarios( : , iScenario );
			%
			aafDisturbances			= [ afOutsideTemperature' ;			...
										afOutsideTemperature' ;						...
										afCorridor' ;					...
										afRoom2' ;							...
										afCeiling'	;					...
										afSolarRadiation' ;				...
										aiOccupancy'					];
			%
			aafDisturbancesScenarioMatrix(:,iScenario) = aafDisturbances(:);
			%
		end;%
		%
		%
		%
		% Getting two vectors for matrices constraints building
        % Worst case approach
        aafEvaluationDisturbancesMatrix =											...
											tController.tModel.aafCC		*		...									
											tController.tModel.aafAE		*		...
											aafDisturbancesScenarioMatrix	;	
								
        afMinimumDisturbancesVector = min(aafEvaluationDisturbancesMatrix')';
        afMaximumDisturbancesVector = max(aafEvaluationDisturbancesMatrix')';
        %------------------------------------------------------------------
        %------------------------------------------------------------------
        aafMinAndMaxMatrix = [-	afMinimumDisturbancesVector';	...
                                afMaximumDisturbancesVector'];
        % Disturbances contribution for Outputs Constraints
        tController.tModel.afOutputDisturbancesStocastic = aafMinAndMaxMatrix(:);
        %
        %------------------------------------------------------------------
        %------------------------------------------------------------------
        aafMinAndMaxMatrix = [	afMinimumDisturbancesVector';	...
                              - afMaximumDisturbancesVector'];                   
        % Disturbances contribution for Mixed Constraints
        tController.tModel.afMixedDisturbancesStocastic = aafMinAndMaxMatrix(:);
		tController.tModel.afMixedDisturbancesStocastic(1:2)	= 0;
		iInitialHour	= 7;
		iFinalHour		= 16;
		for iTimeStep = 1:tController.iPredictionHorizon-1
			%
			if ( Time.IsBetweenHours( fCurrentJulianDate, iInitialHour, iFinalHour))
				%
				%do nothing
				%
			else
				%
				tController.tModel.afMixedDisturbancesStocastic(2*iTimeStep +1:2*(iTimeStep+1)) = 0;
				% 
			end%
			fCurrentJulianDate	=	fCurrentJulianDate + fSamplingTimeInJulianDates;
		end%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the disturbances vector for the optimization problem');
		%
	end;% end catch
	%
end %