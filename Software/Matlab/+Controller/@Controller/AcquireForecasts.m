function AcquireForecasts( tController, tConnection )
	%
	try %
		%
		if( tController.bPrintDebugInformation )
			%
			fprintf('Entering AcquireForecasts()\n');
			%
		end;%
		%
		%
		% if there are no forecasts signals then skip the method
		if ( numel(tController.atForecastsSignals) == 0 )
			%
			fprintf('For the controller %s no forescast are requested. \n', tController.strControllerID);
			%
		else%
			%
			% for each signal do the update
			for iSignal = 1:numel( tController.atForecastsSignals );
				%
				% remove the old forecast
				tController.atForecastsSignals(iSignal).RemoveSamplesFrom( Time.GetCurrentJulianDate() );
				%
				% put the new one
				tController.atForecastsSignals(iSignal).Update( tConnection );
				%
				% DEBUG
				if( tController.bPlotSignalsDuringExecution )
					%
					iFigureNumber = tController.atForecastsSignals(iSignal).CalculateFigureNumber();
					%
					if ishandle( iFigureNumber )
						%
						close( iFigureNumber );
						%
					end;% closing the figure if it already exists (to avoid overwriting)
					%
					tController.atForecastsSignals(iSignal).Plot();
					%
				end;% end if
				%
			end;% end aquisition of the forecast
			%
		end;% end of the check on the existence of forecasts to get
		%
		%
		if( tController.bUseScenarios )
			%
			tController.ExtractScenarios();
			%
		end;% end extracting scenarios
		%
		%
		if( tController.bPrintDebugInformation )
			%
			fprintf('Exiting AcquireForecasts()\n');
			%
		end;%
		%
	catch exception
		%
		disp( exception.message );
		warning('Unable to acquire the Forecasts');
		%
	end % try
	%
end % function

