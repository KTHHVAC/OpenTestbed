% function fRadiatorValveOpeningPercentage									...
% 				= CalculateRadiatorValveOpeningPercentage(					...
% 						tController,										...
% 						fMeanRadiantTemperature								)
%
%
function fRadiatorValveOpeningPercentage									...
				= CalculateRadiatorValveOpeningPercentage(					...
						tController,										...
						fMeanRadiantTemperature								)
	%
	%
	try %
		%
		%------------------------------------------------------------------
		% preliminary operations
		tDevicesIDs							= Signal.GetDevicesIDs();
		tSignalsIDs							= Signal.GetSignalsIDs();
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		%
		%------------------------------------------------------------------
		%
		%
		%retriving the needed indexes
		iTemperatureOfTheRoomIndex	=								...
				Signal.FindSignalIndex(								...
							tController.atMeasurementsSignals,		...
							tSignalsIDs.iTemperatureOfEnvironment,	...
							tDevicesIDs.iMote1035					);
		iOutsideTemperatureIndex	=									...
				Signal.FindSignalIndex(										...
							tController.atMeasurementsSignals,				...
							tSignalsIDs.iTemperatureOfOutsideEnvironment,	...
							tDevicesIDs.iPLC	);
		%
		%
		% catching the measurements
		fRoomTemperature				...
			= tController.atMeasurementsSignals(iTemperatureOfTheRoomIndex).ExtractSamplesAt(fCurrentJulianDate);
		
		fOutsideTemperature				...
			= tController.atMeasurementsSignals(iOutsideTemperatureIndex).ExtractSamplesAt(fCurrentJulianDate);
		%
		%
		% computing the percentage
		fRadiatorValveOpeningPercentage ...
				= tController.MeanRadiantTemperatureToRadiatorValveOpeningPercentage(	...
							fMeanRadiantTemperature,									...
							fRoomTemperature,											...
							fOutsideTemperature											);
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems calculating the percentage to set for the radiators actuation.');
		%
	end;% end catch
	%
end % end function



