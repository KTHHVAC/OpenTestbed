% function [	aafADiscretized,                ...
%               aafBDiscretized,                ...
%               aafEDiscretized,                ...
%               aafCDiscretized,                ...
%               aafDDiscretized,                ...
%               aafGDiscretized]                ...
%                   = DiscretizeModel(          ...
%                                       aafA ,                  ...
%                                       aafB,                   ...
%                                       aafE,                   ...
%                                       aafC,                   ...
%                                       fSamplingTimeInSeconds,	...
%                                       strTypeOfDiscretization)
function [	aafADiscretized,                ...
			aafBDiscretized,                ...
			aafEDiscretized,                ...
			aafCDiscretized,                ...
            aafDDiscretized,                ...
            aafGDiscretized]                ...
				= DiscretizeModelClosedLoop( tController,   ...
                                    aafA ,					...
                                    aafB,                   ...
                                    aafE,                   ...
                                    aafC,                   ...
                                    fSamplingTimeInSeconds,	...
                                    strTypeOfDiscretization)
	%
	try %
		%
        aafBB       = [ aafB aafE ];
		fdT         = fSamplingTimeInSeconds; 
        tSys        = ss( aafA, aafBB, aafC, 0 );
        %
        switch strTypeOfDiscretization
            %
            case 'zoh'
                sysd = c2d( tSys, fdT, 'zoh' );
                [Ad, Bd, Cd, Dd] = ssdata( sysd );
            	%
            	iNumberOfInputs = size(aafB,2);
                %
                aafADiscretized = Ad;
                aafEDiscretized = Bd( :, iNumberOfInputs + 1 : end );
                aafBDiscretized = Bd( :, 1 : iNumberOfInputs );
                aafCDiscretized = Cd;
                aafGDiscretized = Dd( :, iNumberOfInputs + 1 : end );
                aafDDiscretized = Dd( :, 1 : iNumberOfInputs );
                %
            case 'foh'
                sysd = c2d( tSys, fdT, 'foh' );
                [Ad, Bd, Cd, Dd] = ssdata( sysd );
            	%
            	iNumberOfInputs = size(aafB,2);
                %
                aafADiscretized = Ad;
                aafEDiscretized = Bd( :, iNumberOfInputs + 1 : end );
                aafBDiscretized = Bd( :, 1 : iNumberOfInputs );
                aafCDiscretized = Cd;
                aafGDiscretized = Dd( :, iNumberOfInputs + 1 : end );
                aafDDiscretized = Dd( :, 1 : iNumberOfInputs );
                %
            case 'tustin'
                %
                sysd = c2d( tSys, fdT, 'tustin' );
                [Ad, Bd, Cd, Dd] = ssdata( sysd );
            	%
            	iNumberOfInputs = size(aafB,2);
                %
                aafADiscretized = Ad;
                aafEDiscretized = Bd( :, iNumberOfInputs + 1 : end );
                aafBDiscretized = Bd( :, 1 : iNumberOfInputs );
                aafCDiscretized = Cd;
                aafGDiscretized = Dd( :, iNumberOfInputs + 1 : end );
                aafDDiscretized = Dd( :, 1 : iNumberOfInputs );
                %
            case 'impulse'
                %
                sysd = c2d( tSys, fdT, 'foh' );
                [Ad, Bd, Cd, Dd] = ssdata( sysd );
            	%
            	iNumberOfInputs = size(aafB,2);
                %
                aafADiscretized = Ad;
                aafEDiscretized = Bd( :, iNumberOfInputs + 1 : end );
                aafBDiscretized = Bd( :, 1 : iNumberOfInputs );
                aafCDiscretized = Cd;
                aafGDiscretized = Dd( :, iNumberOfInputs + 1 : end );
                aafDDiscretized = Dd( :, 1 : iNumberOfInputs );    
                %
            case 'FEulero'
            	%
            	iNumberOfInputs         = size(aafB,2);
                iNumberOfOutputs        = size(aafC,1);
                iNumberOfStates         = size(aafA,1);
                iNumberOfDisturbances   = size(aafE,2);
                %
                Ad              = aafA  * fdT + eye(iNumberOfStates);
                Bd              = aafBB * fdT;
                Cd              = aafC;
                Dd              = zeros(iNumberOfOutputs, iNumberOfInputs + iNumberOfDisturbances);
                %
                aafADiscretized = Ad;
                aafEDiscretized = Bd( :, iNumberOfInputs + 1 : end );
                aafBDiscretized = Bd( :, 1 : iNumberOfInputs );
                aafCDiscretized = Cd;
                aafGDiscretized = Dd( :, iNumberOfInputs + 1 : end );
                aafDDiscretized = Dd( :, 1 : iNumberOfInputs );
                %
             case 'BEulero'
                % 
                iNumberOfInputs  = size(aafB,2);
                iNumberOfStates  = size(aafA,1);
                %
                Ad               = (eye(iNumberOfStates) - aafA  * fdT) ^ -1;
                Bd               =        (eye(iNumberOfStates) - aafA  * fdT) ^ -1 * aafBB * fdT;
                Cd               = aafC * (eye(iNumberOfStates) - aafA  * fdT) ^ -1 ;
                Dd               = aafC * (eye(iNumberOfStates) - aafA  * fdT) ^ -1 * aafBB * fdT;
                %
                aafADiscretized = Ad;
                aafEDiscretized = Bd( :, iNumberOfInputs + 1 : end );
                aafBDiscretized = Bd( :, 1 : iNumberOfInputs );
                aafCDiscretized = Cd;
                aafGDiscretized = Dd( :, iNumberOfInputs + 1 : end );
                aafDDiscretized = Dd( :, 1 : iNumberOfInputs );
                %
        end;%
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems in the model discretization.');
		%
	end;%
	%
end %

%===============================================================================


