function SetDisturbances( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		%------------------------------------------------------------------
		% preliminary operations
		%
		fCurrentJulianDate			= Time.GetCurrentJulianDate();
		iNumberOfDisturbances		= size(tController.tModel.aafE);
		%
		%------------------------------------------------------------------
		% retriving the needed indexes 
		iForecastedOccupancyIndex	=	tController.tForecastsSignalsIndexes.iForecastedOccupancy;
		iCurrentOccupancyIndex		=	tController.tMeasurementsSignalsIndexes.iOccupancy;
		%
		%------------------------------------------------------------------
		% setting the sampling time vector
		%
		fSamplingTimeInJulianDates =	Time.GetJulianSecond() * tController.fSamplingTimeInSeconds;
		%
		afTimesNeededForTheForecastedOccupancy =																...
				[		fCurrentJulianDate + fSamplingTimeInJulianDates											...
					:	fSamplingTimeInJulianDates																...
					:	fCurrentJulianDate + fSamplingTimeInJulianDates * ( tController.iPredictionHorizon - 1)	]';
		%
		%------------------------------------------------------------------
		% Occupancy
		%
		fOccupancyCopulasSamplingTimeInJulianDate =										...
						tController.tOccupancyScenariosGenerator.fSamplingTimeInSeconds	...
					*	Time.GetJulianSecond();
		%
		afOccupancyCopulasTimes		=	[			fCurrentJulianDate																...
											:		fOccupancyCopulasSamplingTimeInJulianDate										...
											:		fCurrentJulianDate																...
												+	fOccupancyCopulasSamplingTimeInJulianDate										...
												*	( tController.tOccupancyScenariosGenerator.iForecastingHorizonInSamples	- 1)	];
		%
		tController.aafOccupancyGeneratedScenarios = zeros( tController.iPredictionHorizon, tController.iNumberOfScenarios );
		%
		afForecastedOccupancy					...
			= tController.atForecastsSignals(iForecastedOccupancyIndex).ExtractSamplesAt( afOccupancyCopulasTimes, true);
		%
		iCurrentOccupancy						...
			= tController.atMeasurementsSignals(iCurrentOccupancyIndex).ExtractSamplesAt( fCurrentJulianDate );
		%
		for iScenario = 1 : numel( tController.aafOccupancyScenarios(: , 1) )
			%
% 			aiSingleOccupancyScenario	= afForecastedOccupancy + tController.aafOccupancyScenarios(iScenario , :);
			aiSingleOccupancyScenario	= tController.aafOccupancyScenarios( iScenario , : );
			%
			tController.atForecastsSignals(iForecastedOccupancyIndex).RemoveSamplesFrom( fCurrentJulianDate );
			tController.atForecastsSignals(iForecastedOccupancyIndex).Insert(	aiSingleOccupancyScenario ,			...
																				afOccupancyCopulasTimes,			...
																				true								);
			afSampledOccupancyForecasts																				...
				= tController.atForecastsSignals(iForecastedOccupancyIndex).ExtractSamplesAt(						...
								afTimesNeededForTheForecastedOccupancy, true);
			tController.aafOccupancyGeneratedScenarios( : , iScenario ) = [ iCurrentOccupancy ; afSampledOccupancyForecasts ];
			%
		end;%
		%
		%
		%------------------------------------------------------------------
		%
		% % For more disturbances do:
		% %		tController.tModel.afWW = [ atDistubance1' ; atDistubance2' ];
		% %		tController.tModel.afWW = tController.tModel.afWW(:);
		%
        
        % Getting two vectors for matrices constraints building
        % Worst case approach
        aafEvaluationDisturbancesMatrix =									...
							tController.tModel.aafAE						...		
							*	tController.aafOccupancyGeneratedScenarios	;	
								
        afMinimumDisturbancesVector = min(aafEvaluationDisturbancesMatrix')';
        afMaximumDisturbancesVector = max(aafEvaluationDisturbancesMatrix')';
        %------------------------------------------------------------------
        %------------------------------------------------------------------
        aafMinAndMaxMatrix = [-	afMinimumDisturbancesVector';	...
                                afMaximumDisturbancesVector'];
        % Disturbances contribution for Outputs Constraints
        tController.tModel.afOutputDisturbancesStocastic = aafMinAndMaxMatrix(:);
        %
        %------------------------------------------------------------------
        %------------------------------------------------------------------
		aafMinAndMaxMatrix = [		(-tController.tInputsBounds.AirMassFlow.fLowerBound)	...
								*	afMaximumDisturbancesVector';							...
									tController.tInputsBounds.AirMassFlow.fUpperBound		...
								*	afMinimumDisturbancesVector'];                   
        % Disturbances contribution for Mixed Constraints
        tController.tModel.afMixedDisturbancesStocastic			= aafMinAndMaxMatrix(:);
		tController.tModel.afMixedDisturbancesStocastic(1:2*iNumberOfDisturbances)	= 0;
		iInitialHour	= 7;
		iFinalHour		= 16;
		for iTimeStep = 1:tController.iPredictionHorizon-1
			%
			if ( Time.IsBetweenHours( fCurrentJulianDate, iInitialHour, iFinalHour))
				%
				%do nothing
				%
			else
				%
				tController.tModel.afMixedDisturbancesStocastic(2*iNumberOfDisturbances* iTimeStep +1:2*iNumberOfDisturbances*(iTimeStep+1)) = 0;
				% 
			end%
			fCurrentJulianDate	=	fCurrentJulianDate + fSamplingTimeInJulianDates;
		end%
        %
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the disturbances vector for the optimization problem');
		%
	end;% end catch
	%
end %