% Considering an optimization problem subjected to constraints as Az<b, 
% this function compute and return the right and left matrices of the
% previous relation.
% Outputs :
%			afRightSide = b;
%			aafLeftSide = A;
% Inputs  :	
%			tController.iPredictionHorizon = length of the considered prediction
%								 horizon;
%			tController		   =  Controller structure;
% 
%% function [aafLeftSide, afRightSide ] = GetInequalityLeftAndRightSides( tController )
%
function [ aafLeftSide, afRightSide ] = GetInequalityLeftAndRightSides( tController )
	%
	try %
		%
		iNumberOfInputs		= size( tController.tModel.aafB, 2 );
		iNumberOfGGuRows	= size(	tController.tModel.aafGGu,1 );
		iNumberOfOutputs	= size( tController.tModel.aafC, 1 );
%--------------------------------------------------------------------------
	aafLeftSideFirstBlockColumn =	[		tController.tModel.aafGGy           		... 
											*	tController.tModel.aafCC				...
											*	tController.tModel.aafAB				...
											*	tController.aafConversionMatrix;		...
											%
											(	tController.tModel.aafGGuMixed			...
											-	(										...
														tController.tModel.aafGGxMixed	...
													*	tController.tModel.aafAB		...
												)										...									
											)											...
											*	tController.aafConversionMatrix;		...
											%
											zeros(	2									...
													*	iNumberOfOutputs				...
													*	tController.iPredictionHorizon,	... 
														tController.iPredictionHorizon	...
													*	iNumberOfInputs					...
												 )										...
											*	tController.aafConversionMatrix;
											%
												tController.tModel.aafGGu			...
											*	tController.aafConversionMatrix;
										];
		%------------------------------------------------------------------							
		aafLeftSideSecondBlockColumn =	[	-tController.tModel.aafGGe			;					...
											%
											zeros(      2*tController.iPredictionHorizon,             ... 
                                                        tController.iPredictionHorizon)	;			...
											%
											-eye(													...
														tController.iPredictionHorizon				...
													*	iNumberOfOutputs							...
												);													...
											%	
											zeros(		iNumberOfGGuRows +tController.iPredictionHorizon	,					...
														iNumberOfOutputs					...
													*	tController.iPredictionHorizon		...
												 )											...
										];
        %------------------------------------------------------------------											    
         aafLeftSideThirdBlockColumn = [	zeros(2*tController.iPredictionHorizon,tController.iPredictionHorizon)			;					...
											%
											-tController.tModel.aafGGeMixed		;					...
											%
											zeros(tController.iPredictionHorizon);
                                            %
                                            -eye(													...
														tController.iPredictionHorizon				...
													*	iNumberOfOutputs							...
												);													...
											%	
											zeros(		iNumberOfGGuRows,					...
														iNumberOfOutputs					...
													*	tController.iPredictionHorizon		...
												 )											...
										];
		%------------------------------------------------------------------											 
		afRightSide =	[	tController.tModel.afBBy				...
								-									...
									(								...
										tController.tModel.aafGGy	...
									*	tController.tModel.aafCC	...
									*	tController.tModel.aafAE	...
									*	tController.tModel.afWW		...
									)								...
								-									...
									(								...
										tController.tModel.aafGGy	...
									*	tController.tModel.aafCC	...
									*	tController.tModel.aafAA	...
									*	tController.tModel.afX0		...
									)								;
							%		
							(										...
								(									...
									tController.tModel.aafGGxMixed	...
								*	tController.tModel.aafAA		...
								)									...
								+									...
									tController.tModel.aafBBx0Mixed	...
							)										...
							*										...
								tController.tModel.afX0				...
							+										...
								tController.tModel.aafGGxMixed		...
							*	tController.tModel.aafAE			...
							*	tController.tModel.afWW				...
							+										...
									tController.tModel.afBBMixed	...
							;
							%
							zeros(	2*									...
										tController.iPredictionHorizon	...
									*	iNumberOfOutputs,				...
									1									...
								 );										...
							%
							tController.tModel.afBBu		
						];
%--------------------------------------------------------------------------
		
		aafLeftSide		= [aafLeftSideFirstBlockColumn, aafLeftSideSecondBlockColumn, aafLeftSideThirdBlockColumn];
	catch exception
		%
		disp(exception.message);
		warning('Problem generating the left and the right side of the inequality constraints matrices for The Soft and Mixed Constraints case.');
		%
	end;% end catch
% 	%
end %
