function EnergyComputation( tController )
	%
	try %
		%
		afTsa				= tController.tActuationValues.fAirConditionedTemperature;
		afTai				= 20;
		afTroom				= tController.tSimulation.aafStatesMatrix(1,:);
		afMassFlowTotal		= tController.tActuationValues.fAirMassFlow;
		afMassFlowVenting	= afMassFlowTotal*0.68;
		afMassFlowCooling	= afMassFlowTotal*0.32;
%
%
%
%%
%
%
% %set some parameters
		iTotalNumberOfSamples = size(afTsa,1);
		iSamplingTimeInSeconds = 1800;

		iCoolingEnergy			= 0; % in Joule
		iVentingEnergy			= 0;
		iCentralSystemEnergy	= 0;
		iDegreeSecond			= 0;

		Tmax	= 20;
		Tmin	= 21;

for iSample = 1 : iTotalNumberOfSamples
	%
	%
	if afMassFlowTotal(iSample) > 0
		%
		%
		if afTsa(iSample) > 0
			%
			%
			iVentingEnergy = iVentingEnergy																							...
							+ norm( 1006 * afMassFlowVenting(iSample) * ( afTai - afTroom(iSample) ) )	...
							* iSamplingTimeInSeconds;
			%
			%
			iCoolingEnergy = iCoolingEnergy																							...
							+ norm( 1006 * afMassFlowCooling(iSample) * ( afTsa(iSample) - afTroom(iSample) ) )	...
							* iSamplingTimeInSeconds;
			%
			%
			%
		else
			%
			%
			iVentingEnergy = iVentingEnergy																							...
							+ norm( 1006 * afMassFlowTotal(iSample)	* ( afTai - afTroom(iSample) ) )		...
							* iSamplingTimeInSeconds;
			%
			%
		end%%
		%
		%
% 		%
% 		iCentralSystemEnergy = iCentralSystemEnergy																					... %big approximation!!!
% 							+ norm( 1006 * afMassFlowTotal(iSample)	* ( afTai.afValues(iSample) - afTout.afValues(iSample) ) );%		...
% 		%					* iSamplingTimeInSeconds;
		%
		%
	end%%
	%
	%
	%
	%
	if (afTroom(iSample) > Tmax )
		%
		%
		iDegreeSecond = iDegreeSecond + ( afTroom(iSample) - Tmax ) * iSamplingTimeInSeconds;
		%
		%
	elseif (afTroom(iSample) < Tmin )
		%
		%
		iDegreeSecond = iDegreeSecond + ( Tmin - afTroom(iSample)) * iSamplingTimeInSeconds;
		%
		%
	end;%
	%
	%
end%%
%
%
% % Energy expense
%
iTotalTimeConsidered_Seconds		= iTotalNumberOfSamples * iSamplingTimeInSeconds;
iTotalTimeConsidered_Hours			= iTotalTimeConsidered_Seconds / 3600	
iTotalRoomEnergy_Joule				= iCoolingEnergy + iVentingEnergy							
iTotalEnergy_Joule					= iCoolingEnergy + iVentingEnergy + iCentralSystemEnergy; 
%
% % 1 Joule = 2.77777778 × 10-7 kWh
%
iTotalRoomEnergy_kWh				= iTotalRoomEnergy_Joule * 2.77777778 * 1e-07							% 
iHourlyAveragePower_kWhperH			= iTotalRoomEnergy_kWh / iTotalTimeConsidered_Hours
%
%
% % Violations
%
iDegreeHour							= iDegreeSecond / 3600 
iHourlyAverageDegreeHour			= iDegreeHour / iTotalTimeConsidered_Hours
%
%

catch exception
		%
		disp(exception.message);
		warning('Problems setting in the post processing phase.');
		%
	end;% end catch
	%
end % end function