% function SetConstraints( tController )
%
function SetConstraints( tController )
	% 
	%
 	try %
		%
		
		%------------------------------------------------------------------
		%
		fCurrentMinCoolingTemperature = 18.8;
		fCurrentMaxHeatingTemperature = 22.8;
		%
		% Initializing the vectors for the upper and lower bounds for Tsa
		%
		tController.tInputsBounds.fMinCoolingTemperature = zeros(tController.iPredictionHorizon, 1); 
		tController.tInputsBounds.fMaxHeatingTemperature = zeros(tController.iPredictionHorizon, 1);	
		%
		%
		%
		tController.tInputsBounds.fMinCoolingTemperature(1:end) = fCurrentMinCoolingTemperature;
		tController.tInputsBounds.fMaxHeatingTemperature(1:end) = fCurrentMaxHeatingTemperature;
		%
		% -----------------------------------------------------------------	
		%
		tController.tInputsBounds.afInputsLowerBounds =						...
			[																...	
			tController.tInputsBounds.DeltaTh.fLowerBound ;					...
			tController.tInputsBounds.DeltaTc.fLowerBound ;					...
			tController.tInputsBounds.AdditionalHeating.fLowerBound ;		...
			tController.tInputsBounds.AdditionalCooling.fLowerBound ;		...
			tController.tInputsBounds.DeltaTrad.fLowerBound ;				...
			];
		%
		tController.tInputsBounds.afInputsUpperBounds =						...
			[																...	
			tController.tInputsBounds.DeltaTh.fUpperBound ;					...
			tController.tInputsBounds.DeltaTc.fUpperBound ;					...
			tController.tInputsBounds.AdditionalHeating.fUpperBound ;		...
			tController.tInputsBounds.AdditionalCooling.fUpperBound ;		...
			tController.tInputsBounds.DeltaTrad.fUpperBound ;				...
			];
		%
		% -----------------------------------------------------------------
		% -----------------------------------------------------------------
		% Initializing constraints vectors and matrices
		%
		aafGuMixed	=	[	-1	 1	0	0	0	;			...
							 1	-1	0	0	0				...
						];  
		%
		afBu		= vertcat( -	tController.tInputsBounds.afInputsLowerBounds ,		...
									tController.tInputsBounds.afInputsUpperBounds		...
						 );
		afBu		= [afBu; zeros(2,1)];
		%
		tController.tModel.aaafBy		= zeros(	2 * iNumberOfOutputs, 1,			...
													tController.iPredictionHorizon);
		%
		tController.tModel.aaafLe		= zeros(	iNumberOfInputs ,					...
													iNumberOfInputs ,					...
													tController.iPredictionHorizon);
		%
		tController.tModel.aaafBMixed	= zeros(	2 *	iNumberOfOutputs , 1,			...
													tController.iPredictionHorizon);
		%
		% 
		% -----------------------------------------------------------------
		% -----------------------------------------------------------------
		% Setting constraints vectors and matrices
		%
		%
			
		%
		for iStepTime = 1: tController.iPredictionHorizon
			%
			%
			tController.tModel.aaafBy(:,:, iStepTime) =							...
				[ -	tController.tOutputsBounds.Temperature.fLowerBoundDay;		...
					tController.tOutputsBounds.Temperature.fUpperBoundDay		...
				];
			%
			tController.tModel.aaafLe(:, :, iStepTime)		=	zeros(iNumberOfInputs);
			%
			tController.tModel.aaafBMixed (:, :, iStepTime)	=					...
				[	-	tController.tInputsBounds.fMinCoolingTemperature;		...
						tController.tInputsBounds.fMaxHeatingTemperature	];  
			%
		end;%end for
		%
		% Setting the right term of equality constraints
		tController.tModel.afRe	= zeros	(		iNumberOfInputs						...
											*	tController.iPredictionHorizon, 1);	
		%
		% Setting Linear constraints on inputs
		%
		for iStepTime = 1 : tController.iPredictionHorizon
			%
			fDeltaAirMass = tController.tInputsBounds.AirMassFlow.fUpperBound	-	tController.afLowerBoundForTheVentilation(iStepTime);
			%
			aafSum =				[	-fDeltaAirMass		0				 1	 	 0		0;	...
												0		-fDeltaAirMass		 0		 1		0;	...
									];
			%						
			tController.tModel.aaafGu(:,:,iStepTime) =	[	-	eye( size(tController.tModel.aafB,2 ) )	;	...
																eye( size(tController.tModel.aafB,2 ) )	;	...
																aafSum										...

														];
			%
		end;%end for
		%
		%
		% Setting of output constraints
		tController.tModel.aaafBu		= repmat( afBu,			[1, 1, tController.iPredictionHorizon]	);
		tController.tModel.aaafGy		= repmat( [-1 ; 1 ],	[1, 1, tController.iPredictionHorizon]	);
		% Adding soft constraints
		tController.tModel.aaafGe		= repmat( [ 1 ; 1 ],	[1, 1, tController.iPredictionHorizon]	);
		% Setting of mixed constraints
		tController.tModel.aaafGeMixed	= repmat( [ 1 ; 1 ],	[1, 1, tController.iPredictionHorizon]	); 
		tController.tModel.aaafGuMixed	= repmat( aafGuMixed,	[1, 1, tController.iPredictionHorizon]	);
		tController.tModel.aaafGxMixed	= repmat([	 tController.tModel.aafC;											...
													-tController.tModel.aafC ],[1, 1, tController.iPredictionHorizon]);
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the constraints.')
		%
	end;% end catch
	%
end %



