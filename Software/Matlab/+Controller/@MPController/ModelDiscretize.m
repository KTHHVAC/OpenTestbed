function ModelDiscretize( obj )
% Prepare discrete system matrices.
%

%===============================================================================
% Authors:   KTH, Royal Institute of Technology
% (05-03-2013: Alessandra Parisio: first implementation)
% (21-03-2013: Ferran Montes: Add Cc as a function parameter
% (30-06-2013: Alessandra Parisio: Forward Euler added)
%==========================================================================

	try
		BB = [obj.tModel.aafB obj.tModel.aafE];
		
		dT = obj.fSamplingTimeInSeconds; 		% check the Configuration file: 3600 * obj.fSamplingTimeInSeconds
												% only if the sampling time is given as fractions of hour! So, it
												% should not be in seconds; in this case, drop 3600
        sys  = ss( obj.tModel.aafA, BB, obj.tModel.aafC, 0 );
        sysd = c2d( sys, dT );
        [A, Bd, C, D] = ssdata( sysd );
		
% 		% BACKWARD EULER
% 		%	Get discretized system
% 		A =(eye(obj.tModel.iNx) - dT*obj.tModel.aafA)^(-1);
% 		Bd = A*BB*dT;
% 		C = obj.tModel.aafC*A;
%       Dd = C*A*BB*dT;
%       Ed = Dd( :, obj.tModel.iNu+1 : end );
% 		D  = Dd( :, 1 : obj.tModel.iNu );

		E = Bd( :, obj.tModel.iNu+1 : end );
		B = Bd( :, 1 : obj.tModel.iNu );

		obj.tModel.aafA = A;
		obj.tModel.aafB = B;
		obj.tModel.aafE = E;
		obj.tModel.aafC = C;

	catch exception
		obj.AddError( strcat('MPController.ModelDiscretize: ', exception.message ));
	end
end

%===============================================================================