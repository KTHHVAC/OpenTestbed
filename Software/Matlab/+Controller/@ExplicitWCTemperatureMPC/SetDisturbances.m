function SetDisturbances( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		%------------------------------------------------------------------
		% preliminary operations
% 		fCurrentJulianDate			= Time.GregorianDateToJulianDate(2014,03,11,07,00,00); %SET THE INITIAL date
% 		%
% 		%------------------------------------------------------------------
% 		% setting the disturbances vector
% 		%
% 		% interested samples times for the forecasts
% 		fSamplingTimeInJulianDates =	Time.GetJulianSecond() * tController.fSamplingTimeInSeconds;
% 		%
% 		afTimesNeededForTheDisturbancesForecasts =																...
% 				[		fCurrentJulianDate + fSamplingTimeInJulianDates											...
% 					:	fSamplingTimeInJulianDates																...
% 					:	fCurrentJulianDate + fSamplingTimeInJulianDates * ( tController.iPredictionHorizon - 1)	]';
% 		%
% 		%
% 		% room 2
% 		afForecastedTemperatureRoom2			...
% 			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA231).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
% 		fCurrentTemperatureRoom2				...
% 			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall2Out).ExtractSamplesAt(fCurrentJulianDate); 
% 		%
% 		% corridor
% 		afForecastedTemperatureCorridor			...
% 			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA208).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
% 		fCurrentTemperatureCorridor				...
% 			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall3Out).ExtractSamplesAt(fCurrentJulianDate);
% 		%
% 		% room 3
% 		afForecastedTemperatureRoom3			...
% 			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA221).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
% 		fCurrentTemperatureRoom3				...
% 			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall4Out).ExtractSamplesAt(fCurrentJulianDate); 
% 		%
% 		% Ceiling
% 		afForecastedTemperatureCeiling			...
% 			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA225).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
% 		fCurrentTemperatureCeiling				...
% 			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfCeilingOut).ExtractSamplesAt(fCurrentJulianDate); 
% 		%
% 		%
% 		%------------------------------------------------------------------
% 		% Occupancy
% 		%
% 		fOccupancyCopulasSamplingTimeInJulianDate =										...
% 						tController.tOccupancyScenariosGenerator.fSamplingTimeInSeconds	...
% 					*	Time.GetJulianSecond();
% 		%
% 		afOccupancyCopulasTimes		=	[			fCurrentJulianDate																...
% 											:		fOccupancyCopulasSamplingTimeInJulianDate										...
% 											:		fCurrentJulianDate																...
% 												+	fOccupancyCopulasSamplingTimeInJulianDate										...
% 												*	( tController.tOccupancyScenariosGenerator.iForecastingHorizonInSamples	- 1)	];
% 		%
% 		aafAllOccupancyScenarios = zeros( tController.iPredictionHorizon, tController.iNumberOfScenarios );
% 		%
% 		%
% 		iCurrentOccupancy						...
% 			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iOccupancy).ExtractSamplesAt( fCurrentJulianDate );
% 		%
% 		for iScenario = 1 : numel( tController.aafOccupancyScenarios(: , 1) )
% 			%
% 			aiSingleOccupancyScenario	= tController.aafOccupancyScenarios( iScenario , : );
% 			%
% 			
% 			tTempSignal = Signal();
% 			tTempSignal.Insert(	aiSingleOccupancyScenario ,			...
% 								afOccupancyCopulasTimes,			...
% 								true								);
% 			afSampledOccupancyForecasts								...
% 				= tTempSignal.ExtractSamplesAt( afTimesNeededForTheDisturbancesForecasts, true);
% 			
% 			%
% 			aafAllOccupancyScenarios( : , iScenario ) = [ iCurrentOccupancy ; afSampledOccupancyForecasts ];
% 			
% 			%
% 		end;%
% 		tController.tModel.aafAllOccupancyScenarios = aafAllOccupancyScenarios;
% 		%
% 		%
% 		%------------------------------------------------------------------
% 		% Radiation
% 		%
% 		fRadiationCopulasSamplingTimeInJulianDate =										...
% 						tController.tRadiationScenariosGenerator.fSamplingTimeInSeconds	...
% 					*	Time.GetJulianSecond();
% 		%
% 		afRadiationCopulasTimes		=	[			fCurrentJulianDate																...
% 											:		fRadiationCopulasSamplingTimeInJulianDate										...
% 											:		fCurrentJulianDate																...
% 												+	fRadiationCopulasSamplingTimeInJulianDate										...
% 												*	( tController.tRadiationScenariosGenerator.iForecastingHorizonInSamples	- 1)	];
% 		%
% 		aafAllRadiationScenarios = zeros( tController.iPredictionHorizon, tController.iNumberOfScenarios );
% 		%
% 		%
% 		iCurrentRadiation					...
% 			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iSolarRadiations).ExtractSamplesAt(fCurrentJulianDate);
% 		%
% 		for iScenario = 1 : numel( tController.aafRadiationScenarios(: , 1) )
% 			%
% 			afSingleRadiationScenario	= tController.aafRadiationScenarios( iScenario , :);
% 			%
% 			tTempSignal = Signal();
% 			tTempSignal.Insert(	afSingleRadiationScenario ,			...
% 								afRadiationCopulasTimes,			...
% 								true								);
% 			afSampledRadiationForecasts								...
% 				= tTempSignal.ExtractSamplesAt( afTimesNeededForTheDisturbancesForecasts, true);
% 			%
% 			%
% 			aafAllRadiationScenarios( : , iScenario ) = [ iCurrentRadiation ; afSampledRadiationForecasts ];
% 			%
% 		end;%
% 		%
% 		%
% 		%------------------------------------------------------------------
% 		% Temperature
% 		%
% 		fTemperatureCopulasSamplingTimeInJulianDate =										...
% 						tController.tTemperatureScenariosGenerator.fSamplingTimeInSeconds	...
% 					*	Time.GetJulianSecond();
% 		%
% 		afTemperatureCopulasTimes	=	[			fCurrentJulianDate + fTemperatureCopulasSamplingTimeInJulianDate			...
% 											:		fTemperatureCopulasSamplingTimeInJulianDate									...
% 											:		fCurrentJulianDate															...
% 												+	fTemperatureCopulasSamplingTimeInJulianDate									...
% 												*	tController.tTemperatureScenariosGenerator.iForecastingHorizonInSamples		];
% 		%
% 		aafAllTemperatureScenarios = zeros( tController.iPredictionHorizon, tController.iNumberOfScenarios );
% 		%
% 		afForecastedTemperature				...
% 			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedExternalTemperature).ExtractSamplesAt( afTemperatureCopulasTimes );
% 		%
% 		fCurrentForecastedOutsideTemperature	...
% 			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedExternalTemperatureCurrent).ExtractSamplesAt(fCurrentJulianDate);
% 		%
% 		%
% 		for iScenario = 1 : numel( tController.aafTemperatureScenarios(: , 1) )
% 			%
% 			aiSingleTemperatureScenario	= afForecastedTemperature - tController.aafTemperatureScenarios(iScenario , :)';
% 			%
% 			tTempSignal = Signal();
% 			tTempSignal.Insert(	aiSingleTemperatureScenario ,		...
% 								afTemperatureCopulasTimes,			...
% 								true								);
% 			afSampledTemperatureForecasts							...
% 				= tTempSignal.ExtractSamplesAt( afTimesNeededForTheDisturbancesForecasts, true);
% 			%
% 			aafAllTemperatureScenarios( : , iScenario ) = [ fCurrentForecastedOutsideTemperature ; afSampledTemperatureForecasts ];
% 			%
% 		end;%
% 		%
% 		%
% 		%------------------------------------------------------------------		
% 		%		
% 		% arrange the vector in the requested way
% 		%		
% 		afRoom2					= [ fCurrentTemperatureRoom2 ;		...
% 									afForecastedTemperatureRoom2	];
% 		
% 		afCorridor				= [ fCurrentTemperatureCorridor ;	...
% 									afForecastedTemperatureCorridor	];
% 								
% 		afRoom3					= [ fCurrentTemperatureRoom3 ;		...
% 									afForecastedTemperatureRoom3	];
% 								
% 		afCeiling				= [ fCurrentTemperatureCeiling ;	...
% 									afForecastedTemperatureCeiling	];
% 		%
% 		aafDisturbancesScenarioMatrix	= zeros(	7 * tController.iPredictionHorizon,	... 
% 													tController.iNumberOfScenarios		); %todo: put 7 only to debug
% 		%
% 		for iScenario = 1 : tController.iNumberOfScenarios
% 			%
% 			aiOccupancy				= aafAllOccupancyScenarios( : , iScenario );
% 			afSolarRadiation		= aafAllRadiationScenarios( : , iScenario );
% 			afOutsideTemperature	= aafAllTemperatureScenarios( : , iScenario );
% 			%
% 			aafDisturbances			= [ afOutsideTemperature' ;			...
% 										afRoom2' ;						...
% 										afCorridor' ;					...
% 										afRoom3' ;						...
% 										afCeiling'	;					...
% 										afSolarRadiation' ;				...
% 										aiOccupancy'					];
% 			%
% 			aafDisturbancesScenarioMatrix(:,iScenario) = aafDisturbances(:);
% 			%
% 		end;%
		%
		%
		%
        load('C:\Users\Amministratore\Dropbox\mia\Simulation\Comparisons\SavedData\TemperatureScenario_Simulation')
		aafEvaluationDisturbancesMatrix =											...
											tController.tModel.aafCC		*		...									
											tController.tModel.aafAE		*		...
											aafDisturbancesScenarioMatrix	;
		%
% 		save('C:\Users\fabietti\Documents\GitHub\OpenTestbed\Software\Matlab\Comparisons\SavedData\TemperatureScenario_Simulation500','aafDisturbancesScenarioMatrix');
		afMinimumDisturbancesVector = min(aafEvaluationDisturbancesMatrix')';
        afMaximumDisturbancesVector = max(aafEvaluationDisturbancesMatrix')';
        %------------------------------------------------------------------
        %------------------------------------------------------------------
        aafMinAndMaxMatrix = [-	afMinimumDisturbancesVector';	...
                                afMaximumDisturbancesVector'];
        % Disturbances contribution for Outputs Constraints
		%
        tController.tModel.afOutputDisturbancesStocastic = aafMinAndMaxMatrix;
        %
        %------------------------------------------------------------------
        %------------------------------------------------------------------
        aafMinAndMaxMatrix = [	afMinimumDisturbancesVector';	...
                              - afMaximumDisturbancesVector'];         
		tController.tModel.afMixedDisturbancesStocastic = aafMinAndMaxMatrix;
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the disturbances vector for the optimization problem');
		%
	end;% end catch
	%
end %