function SetDisturbances( tController )
	% get the initial condition for the optimization problem from the server. 
	% In thiss simple version these are set to see if the optimization
	% problem is solved correctly.
	%
	try %
		%
		%------------------------------------------------------------------
		% preliminary operations
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		iNumberOfScenarios					= tController.iNumberOfScenarios;
		iHorizonLength						= tController.iPredictionHorizon;
		iNumberOfDisturbances				= size(tController.tModel.aafE,2);
		tController.tModel.aafScenarios		= zeros(iNumberOfDisturbances,iNumberOfScenarios,iHorizonLength);
		%
		%------------------------------------------------------------------
		% setting the disturbances vector
		%
		% interested samples times for the forecasts
		fSamplingTimeInJulianDates =	Time.GetJulianSecond() * tController.fSamplingTimeInSeconds;
		%
		afTimesNeededForTheDisturbancesForecasts =																...
				[		fCurrentJulianDate + fSamplingTimeInJulianDates											...
					:	fSamplingTimeInJulianDates																...
					:	fCurrentJulianDate + fSamplingTimeInJulianDates * ( iHorizonLength - 1)	]';
		%
		%
		% room 2
		afForecastedTemperatureRoom2			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA231).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureRoom2				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall2Out).ExtractSamplesAt(fCurrentJulianDate); 
		%
		% corridor
		afForecastedTemperatureCorridor			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA208).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCorridor				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall3Out).ExtractSamplesAt(fCurrentJulianDate);
		%
		% room 3
		afForecastedTemperatureRoom3			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA221).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureRoom3				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfWall4Out).ExtractSamplesAt(fCurrentJulianDate); 
		%
		% Ceiling
		afForecastedTemperatureCeiling			...
			= tController.atForecastsSignals(tController.tForecastsSignalsIndexes.iForecastedTemperatureOfEnvironmentRoomA225).ExtractSamplesAt(afTimesNeededForTheDisturbancesForecasts);
		fCurrentTemperatureCeiling				...
			= tController.atMeasurementsSignals(tController.tMeasurementsSignalsIndexes.iTemperatureOfCeilingOut).ExtractSamplesAt(fCurrentJulianDate); 
		%
		afRoom2					= [ fCurrentTemperatureRoom2 ;		...
									afForecastedTemperatureRoom2	];
		
		afCorridor				= [ fCurrentTemperatureCorridor ;	...
									afForecastedTemperatureCorridor	];
								
		afRoom3					= [ fCurrentTemperatureRoom3 ;		...
									afForecastedTemperatureRoom3	];
								
		afCeiling				= [ fCurrentTemperatureCeiling ;	...
									afForecastedTemperatureCeiling	];
		%
		aafOccupancyScenarios	=	tController.tOccupancyScenariosGenerator.ExtractTrueScenarios(fCurrentJulianDate, iNumberOfScenarios);
		aafRadiationScenarios	=	tController.tRadiationScenariosGenerator.ExtractTrueScenarios(fCurrentJulianDate, iNumberOfScenarios);
		aafTemperatureScenarios =	tController.tTemperatureScenariosGenerator.ExtractTrueScenarios(fCurrentJulianDate, iNumberOfScenarios);
		%
		aafDisturbancesScenarioMatrix = [];
		for iStepTime = 1:iHorizonLength
			%	
			tController.tModel.aafScenarios(:,:,iStepTime) =  [	aafTemperatureScenarios(:,iStepTime)' ;					...
																ones(1, iNumberOfScenarios)*afRoom2(iStepTime) ;		...
																ones(1, iNumberOfScenarios)*afCorridor(iStepTime) ;		...
																ones(1, iNumberOfScenarios)*afRoom3(iStepTime) ;		...
																ones(1, iNumberOfScenarios)*afCeiling(iStepTime);		...
																aafRadiationScenarios(:,iStepTime)' ;					...
																aafOccupancyScenarios(:,iStepTime)'	];
			aafDisturbancesScenarioMatrix					= [	aafDisturbancesScenarioMatrix;
																tController.tModel.aafScenarios(:,:,iStepTime)];
			%
		end;% end for
		%
		%
		%
		% Getting two vectors for matrices constraints building
        % Worst case approach
		 aafEvaluationDisturbancesMatrix =											...
											tController.tModel.aafCC		*		...									
											tController.tModel.aafAE		*		...
											aafDisturbancesScenarioMatrix	;
		%
		afMinimumDisturbancesVector = min(aafEvaluationDisturbancesMatrix')';
        afMaximumDisturbancesVector = max(aafEvaluationDisturbancesMatrix')';
        %------------------------------------------------------------------
        %------------------------------------------------------------------
        aafMinAndMaxMatrix = [-	afMinimumDisturbancesVector';	...
                                afMaximumDisturbancesVector'];
        % Disturbances contribution for Outputs Constraints
        tController.tModel.afOutputDisturbancesStocastic = aafMinAndMaxMatrix;
        %
        %------------------------------------------------------------------
        %------------------------------------------------------------------
        aafMinAndMaxMatrix = [	afMinimumDisturbancesVector';	...
                              - afMaximumDisturbancesVector'];         
		tController.tModel.afMixedDisturbancesStocastic = aafMinAndMaxMatrix;
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting the disturbances vector for the optimization problem');
		%
	end;% end catch
	%
end %