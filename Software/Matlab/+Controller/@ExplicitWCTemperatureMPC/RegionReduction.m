function RegionReduction( tController )
	%Getting the solution of the Explicit Problem
	%
	try %
		%
		%
		% Obtaining TpolyObject
		%
		tPolyUnion				= mpt_mpsol2pu(tController.tSolution);
		tHVrepresentation		= tPolyUnion.Domain.triangulate();
		%
		% Partition of the simple optimizer must be a PolyUnion object
		%
		new_partition = PolyUnion(tHVrepresentation);
		
		% prepare data for the fitting procedure
		nx = tPolyUnion.Dim;														% number of parameters
		nz = tPolyUnion.Set(1).Functions('primal').R;								% number of optimization variables
		zmin = -Inf(nz, 1);															% lower limit on the approximate value
		zmax = Inf(nz, 1);															% upper limit on the approximate value
		% Perform the optimal fitting
		tController.tModel.tPWASolution = FittingController.refine(	tPolyUnion,				...
																	new_partition,			...
																	zmin,					...
																	zmax,					...
																	Polyhedron.unitBox(nx),	...
																	{},						...
																	{},						...
																	struct('invariance', false));
		% Plot of the two solutions
		plot(tController.tModel.tPWASolution);
		figure;plot(tController.tSolution{1}.Pn);
		% Obtaining Matlab File
% 		tController.tModel.tPWASolution.toMatlab('C:\Users\fabietti\Documents\GitHub\OpenTestbed\Software\Matlab\Comparisons\Temperature\ReducedPWAfunctionStochasic', 'primal', 'first-region')
		tPolyUnion.toMatlab('C:\Users\fabietti\Documents\GitHub\OpenTestbed\Software\Matlab\Comparisons\Temperature\OriginalPWAfunctionStochastic', 'primal', 'first-region')
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems in the reduction process.');
		%
	end;% end catch		
	%
end % end function