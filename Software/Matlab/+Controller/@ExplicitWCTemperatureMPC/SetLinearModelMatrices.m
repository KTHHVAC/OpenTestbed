function SetLinearModelMatrices( tController )
	%Setting all the matrices of the linear time inveriant discrete model
	%
	try %
		m_dot	= tController.afLowerBoundForTheVentilation;  
		%
		%
		[	A13,					...
			B13,					...
			C13,					...
			E13		]				...
				= LoadBuildingParametersAndBuildTemperatureMatrices(m_dot);
			
		iNumberOfInputs			=	size(B13,2);
        iNumberOfDisturbances	=	size(E13,2);
			%
			
		% Matrix Definition
        
		%% Two State		
% Matrix Definition
	Width1			= 9;
	Width2			= 9.4;
	Heigh			= 3.2;
	fRho_fs			= 0.14;
	fRho			= 0.04;
	afWallsArea     = [30.08,28.8,30.08,28.8,84.6,84.6];
	%
	fWall1HeatTransferCoefficient	= 0.3525;	
	fWall2HeatTransferCoefficient	= 5.0147;
	fWall3HeatTransferCoefficient	= 3.8724;
	fWall4HeatTransferCoefficient	= 0.4608;
	fWall5HeatTransferCoefficient	= 0.0680;
	fWall6HeatTransferCoefficient	= 0.0396;
	%
	fWall1IndoorActiveHeatCapacity	= 3.3051e+04;
	fWall2IndoorActiveHeatCapacity	= 5.7483e+04; 
	fWall3IndoorActiveHeatCapacity  = 1.6854e+05;
	fWall4IndoorActiveHeatCapacity  = 3.5147e+04;
	fWall5IndoorActiveHeatCapacity  = 1.4014e+03;
	fWall6IndoorActiveHeatCapacity  = 2.6110e+05;
	%
	RWall1			= 1/(afWallsArea(1)*fWall1HeatTransferCoefficient);
	RWall2			= 1/(afWallsArea(2)*fWall2HeatTransferCoefficient);
	RWall3			= 1/(afWallsArea(3)*fWall3HeatTransferCoefficient);
	RWall4			= 1/(afWallsArea(4)*fWall4HeatTransferCoefficient);
	RWall5			= 1/(afWallsArea(5)*fWall5HeatTransferCoefficient);
	RWall			=	[	RWall1; ...
						RWall2; ...
						RWall3; ...
						RWall4; ...
						RWall5 ...
					];
		%
		ATot	=				afWallsArea(1)		...
					+			afWallsArea(2)		...
					+			afWallsArea(3)		...
					+			afWallsArea(4)		...
					+	2	*	afWallsArea(5);
		%
		Volume	=		Width1				...
					*	Width2				...
					*	Heigh;					
		%
		AirSpecificHeat = 1007;
		AirDensity		= 1.2;
		%
		Cf		=		Volume												...
					*	AirSpecificHeat										...
					*	AirDensity ;
		Cs		=		afWallsArea(1) * fWall1IndoorActiveHeatCapacity		...
					+	afWallsArea(2) * fWall2IndoorActiveHeatCapacity		...
					+	afWallsArea(3) * fWall3IndoorActiveHeatCapacity		...
					+	afWallsArea(4) * fWall4IndoorActiveHeatCapacity		...
					+	afWallsArea(5) * fWall5IndoorActiveHeatCapacity		...
					+	afWallsArea(6) * fWall6IndoorActiveHeatCapacity;
		Cf = 2*Cf;
		Cs = 1.4*Cs;
		%		
		Rfs		= 0;
		Rswin	= 0;
		for iNumberOfWalls = 1:5
			%
			%
			Rfs				= Rfs	+ ( fRho_fs + RWall(iNumberOfWalls)/2) /ATot;
			Rswin			= Rswin + ( fRho	+ RWall(iNumberOfWalls)/2) /ATot;
			%
		end;%
		G				= 0.67;
		Cp				= 170;
		Area_win		= 2.56;
		R_win_fast		= 1/(1.9 * Area_win);

%% Changing parameters
		Cf		= 1.2	* Cf;
		Cs		= 1		* Cs;
		Rfs		= 1		* Rfs;
		Rswin	= 1		* Rswin;
		%        
		A = zeros(2,2);
		A(1,1) = -	1/( Rfs * Cf) - 1/(R_win_fast * Cf);
		A(1,2) =	1/( Rfs * Cf);
		A(2,1) =	1/(	Rfs	* Cs);
		A(2,2) = -	1/( Rfs * Cs) - 1/(Rswin * Cs);
		%
		C = zeros(1,2);
		C(1,1) = 1;
		%
		B = B13(1:2,:);
		%
		E			= zeros(2,iNumberOfDisturbances);
		%	
		E(1,1)	= 1				/	(R_win_fast *	Cf);
		E(1,6)	= G * Area_win	/		Cf;
		E(1,7)	= Cp			/		Cf;
		Beta	= 1/(Rswin*Cf*10);
		%
		E(2,1)	= afWallsArea(1)	/ ATot;
		E(2,2)	= afWallsArea(2)	/ ATot;
		E(2,3)	= afWallsArea(3)	/ ATot;
		E(2,4)	= afWallsArea(4)	/ ATot;
		E(2,5)	= afWallsArea(5)	/ ATot;
		E(2,:)	= E(2,:) * Beta;

%% Discritize the model 2-state
		BB = [ B E ];
		%
		dT = 1800;
		sys  = ss( A, BB, C, 0 );
		sysd = c2d( sys, dT, 'zoh' );
		%
		[	Ad,			... 
			Bd,			...
			Cd,			...
			Dd]			...
				= ssdata( sysd );
		%
		Ed = Bd( :, iNumberOfInputs + 1 : end );
		Bd = Bd( :, 1 : iNumberOfInputs );
		%
		Ed(:,1) = 0.005	*	Ed(:,1);
		Ed(:,5) = 0.02	*	Ed(:,5);
		Ed(:,4) = 0.3	*	Ed(:,4);
		Ed(:,3) = 0.36	*	Ed(:,3);
		Ed(:,7) = 0.6	*	Ed(:,7);
		Bd(:,1) = 0.16	*	Bd(:,1);
		Bd(:,2) = 0.16	*	Bd(:,2);
		Bd(:,3) = 0.16	*	Bd(:,3);		
		Bd(:,4) = 0.16	*	Bd(:,4);		
		Bd(:,5) = 0.16	*	Bd(:,5);	
%% Matrices Definition
		%
		tController.tModel.afC	= Cd;
		tController.tModel.aafA = Ad;
		tController.tModel.aafE = Ed;
		tController.tModel.aafB = Bd;
		%
		%	
	catch exception
		%
		disp(exception.message);
		warning('Problems building the model.');
		%
	end;% end catch
	%
end % end function