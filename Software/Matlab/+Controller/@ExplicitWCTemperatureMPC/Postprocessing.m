function Postprocessing( tController )
	%
	try %
		%
		%------------------------------------------------------------------
		%
		for iTimeStep = 1: tController.iPredictionHorizon
			
		fDeltaHeatingTemperature		= tController.tSimulation.afInputsMatrix(1,iTimeStep);		
		fDeltaCoolingTemperature		= tController.tSimulation.afInputsMatrix(2,iTimeStep);
		fDeltaHeatingPower				= tController.tSimulation.afInputsMatrix(3,iTimeStep);
		fDeltaCoolingPower				= tController.tSimulation.afInputsMatrix(4,iTimeStep);	
		fDeltaMeanRadiantTemperature	= tController.tSimulation.afInputsMatrix(5,iTimeStep);
		fLowerBoundAirMassFlow			= tController.afLowerBoundForTheVentilation;
		%
		%
		if( tController.bPrintDebugInformation )
			%
			fprintf('The output of the Temperature optimization problem are \n%4.4f dTH\n%4.4f dTC\n%4.4f duH\n%4.4f duC\n%4.4f dTrad\n',	...
						fDeltaHeatingTemperature, fDeltaCoolingTemperature, fDeltaHeatingPower, fDeltaCoolingPower, fDeltaMeanRadiantTemperature);
			%
		end;%
		%
		%------------------------------------------------------------------
		% retriving the needed indexes of needed measurements
		%
		%
		%------------------------------------------------------------------
		% get the needed values
		%
		fRoomTemperature		=	eye(1,13) * tController.tSimulation.aafStatesMatrix(:,iTimeStep);
		fAirInletTemperature	=	tController.tInputsBounds.fMaxHeatingTemperature;
		%
		%------------------------------------------------------------------
		% check the optimality of the solution
		%
		if ( fDeltaHeatingTemperature ~= 0 ) && ( fDeltaCoolingTemperature ~= 0 )
			%
			if ( fDeltaHeatingTemperature > fDeltaCoolingTemperature )
				%
				fDeltaHeatingTemperature = fDeltaHeatingTemperature - fDeltaCoolingTemperature;
				fDeltaCoolingTemperature = 0;
				%
				warning('The solution is not optimal. The DeltaTh is greater than DeltaTc and are both greather than zero.');
				%
			else%
				%
				fDeltaCoolingTemperature =  fDeltaCoolingTemperature - fDeltaHeatingTemperature;
				fDeltaHeatingTemperature = 0;
				%
				warning('The solution is not optimal. The DeltaTc is greater than DeltaTh and are both greather than zero.');
				%
			end;%
			%
		end;%
		%
		%
		if ( fDeltaHeatingPower ~= 0 ) && ( fDeltaCoolingPower ~= 0 )
			%
			if ( fDeltaHeatingPower > fDeltaCoolingPower )
				%
				fDeltaHeatingPower = fDeltaHeatingPower - fDeltaCoolingPower;
				fDeltaCoolingPower = 0;
				%
				warning('The solution is not optimal. The DeltaTh is greater than DeltaTc and are both greather than zero.');
				%
			else%
				%
				fDeltaCoolingPower =  fDeltaCoolingPower - fDeltaHeatingPower;
				fDeltaHeatingPower = 0;
				%
				warning('The solution is not optimal. The DeltaTc is greater than DeltaTh and are both greather than zero.');
				%
			end;%
			%
		end;%
		%
		%------------------------------------------------------------------
		% actual post processing phase
		%
		tController.tActuationValues.fAirConditionedTemperature(iTimeStep,:)		= 0;
		tController.tActuationValues.fMeanRadiantTemperature(iTimeStep,:)			= 0;	
		tController.tActuationValues.fAirMassFlow(iTimeStep,:)						= fLowerBoundAirMassFlow(iTimeStep);
		%
		%
		if ( fDeltaHeatingTemperature > 0 )
			%
			% % no need to calculate fAirSupplyTemperature
			%
			%
			if ( fDeltaHeatingPower > 0 )
				%
				tController.tActuationValues.fAirMassFlow(iTimeStep,:) =			...
						tController.fAirMassFlow					...
					+ ( fDeltaHeatingPower / fDeltaHeatingTemperature );
				%
			end;% end checking for more ventilation heating
			%
		end;% end setting ventilation values for heating 
		%
		%
		if ( fDeltaCoolingTemperature > 0 )
			%
			fAirSupplyTemperature					= fRoomTemperature - fDeltaCoolingTemperature;
			tController.tActuationValues.fAirConditionedTemperature(iTimeStep,:)	=				...								
					( 1/0.32 ) * ( fAirSupplyTemperature - 0.68 * fAirInletTemperature ); 
			%
			%
			if( tController.bPrintDebugInformation )
				%
				fprintf('Tsa = %2.2f ; Tac = %4.2f', fAirSupplyTemperature, tController.tActuationValues.fAirConditionedTemperature(iTimeStep,:));
				%
			end;%
			%
			%
			if ( tController.tActuationValues.fAirConditionedTemperature(iTimeStep) < 16.5 )
				%
				warning('The Tac requested is lower of the lower possible. So, it has been set to 16.5C.');
				tController.tActuationValues.fAirConditionedTemperature(iTimeStep) = 16.5;
				%
			end;% check on the Tac
			%
			if ( fDeltaCoolingPower > 0 )
				%
				tController.tActuationValues.fAirMassFlow(iTimeStep,:) = fLowerBoundAirMassFlow(iTimeStep) + ( fDeltaCoolingPower / fDeltaCoolingTemperature );
				%
			end;% end checking for more ventilation cooling
			%
		end;% end setting ventilation values for cooling 
		%
		%
		if ( fDeltaMeanRadiantTemperature > 0 )
			%
			tController.tActuationValues.fMeanRadiantTemperature(iTimeStep,:) = fRoomTemperature + fDeltaMeanRadiantTemperature;
			%
		end;% end setting the mean radiant temperature for the radiator
		%
		end
		%		
		%
		%
	catch exception
		%
		disp(exception.message);
		warning('Problems setting in the post processing phase.');
		%
	end;% end catch
	%
end % end function
