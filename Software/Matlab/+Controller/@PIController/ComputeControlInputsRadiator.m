% Compute the inputs over the prediction horizon
%
% ALGORITHM
% - 
%
function ComputeControlInputsRadiator( tController )
	%
	%
	try %
		if( tController.bPrintDebugInformation )
			%
			fprintf('Entering ComputeControlInputsRadiator()\n');
			%
		end;%
		%
		%------------------------------------------------------------------
		% initialization
		TEMPERATURE_REFERENCE				= tController.fTemperatureReference;
		fPIConstantA = 6.835;
		fPIConstantB = -2.278;
		%
		tDevicesIDs							= Signal.GetDevicesIDs();
		tSignalsIDs							= Signal.GetSignalsIDs();
		fCurrentJulianDate					= Time.GetCurrentJulianDate();
		%
		%------------------------------------------------------------------
		%index research
		iTemperatureOfTheRoomIndex			= Signal.FindSignalIndex(	tController.atMeasurementsSignals ,				...
																tSignalsIDs.iTemperatureOfEnvironment ,					...
																tDevicesIDs.iMote1043);
		iRadiatorValveIndex					= Signal.FindSignalIndex(	tController.atActuationsSignals ,				...
																tSignalsIDs.iRadiatorValveOpeningPercentage ,			...
																tDevicesIDs.iPLC_A225);
															
		iFreshAirInletValveIndex			= Signal.FindSignalIndex(	tController.atActuationsSignals ,				...
																tSignalsIDs.iFreshAirInletValveOpeningPercentage ,		...
																tDevicesIDs.iPLC_A225);
		iExhaustAirValveOutletIndex			= Signal.FindSignalIndex(	tController.atActuationsSignals ,				...
																tSignalsIDs.iExhaustAirOutletValveOpeningPercentage ,	...
																tDevicesIDs.iPLC_A225);
		iACValveIndex						= Signal.FindSignalIndex(	tController.atActuationsSignals ,				...
																tSignalsIDs.iACValveOpeningPercentage ,					...
																tDevicesIDs.iPLC_A225);
		%
		% -----------------------------------------------------------------
		% Computation of the commands
		%
		afTemperatureOfTheRoom				= tController.atMeasurementsSignals(iTemperatureOfTheRoomIndex);
		
		fActuationCommand					= tController.radiator_control(	afTemperatureOfTheRoom.afValues, ...
																	TEMPERATURE_REFERENCE,					 ...
																	fPIConstantA,							 ...
																	fPIConstantB );
		%
		%--------------------------------------------------------------------------------------------------------------
		%
% 		if ( fActuationCommand > tController.tInputsBounds.fUpperBound )
% 			%
% 			fActuationCommand = tController.tInputsBounds.fUpperBound;
% 			%
% 		elseif ( fActuationCommand < tController.tInputsBounds.fLowerBound )
% 			%
% 			fActuationCommand = tController.tInputsBounds.fLowerBound;
% 			%
% 		end;% end bounding the input command
% 		%
% 		%
		if ( tController.bUseRadiators )
			%
			tController.atActuationsSignals(iRadiatorValveIndex).Insert( fActuationCommand,	fCurrentJulianDate, true );
			
			% just the radiators are working
			tController.atActuationsSignals(iFreshAirInletValveIndex).Insert(	 0,	fCurrentJulianDate, true );
			tController.atActuationsSignals(iExhaustAirValveOutletIndex).Insert( 0,	fCurrentJulianDate, true );
			tController.atActuationsSignals(iACValveIndex).Insert(				 0,	fCurrentJulianDate, true );
			%
		else
			%
			tController.atActuationsSignals(iRadiatorValveIndex).Insert( 0,	fCurrentJulianDate, true );
			% just the radiators are working
			tController.atActuationsSignals(iFreshAirInletValveIndex).Insert(	 0,	fCurrentJulianDate, true );
			tController.atActuationsSignals(iExhaustAirValveOutletIndex).Insert( 0,	fCurrentJulianDate, true );
			tController.atActuationsSignals(iACValveIndex).Insert(				 0,	fCurrentJulianDate, true );
			%
		end;%
		%
		%
		if( tController.bPrintDebugInformation )
			%
			fprintf('\nActuation percentage calculated >>>> %3.1f \n',	fActuationCommand);
			%
		end;% end print debug information on the PI values
		%
		%------------------------------------------------------------------
		%
		if( tController.bPrintDebugInformation )
			%
			fprintf('Exiting ComputeControlInputsRadiator()\n');
			%
		end;%
		%
	catch exception
		%
		disp(exception.message);
		warning( strcat('Error in ComputeControlInputsRadiator for  ', tController.strControllerID) );
		%
	end;% catch
	%
end % function

