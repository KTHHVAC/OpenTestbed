classdef PIController < Controller.Controller
	%
    properties
		%
		%
		fIntegralConstant;
		fProportionalConstant;
		fTemperatureReference;
		fDerivativeConstant;
		fValueToDesaturateTheIntegralAction;
		fIntegrationOfTheTemperatureError;
		fLastTemperatureError;
		bUseRadiators;
		%
	end;%
	%
	%
	% ---------------------------------------------------------------------
	methods
		%
		function tController = PIController( tParameters )
			%
			tController = tController@Controller.Controller( tParameters );
			%
			tController.tInputsBounds							= tParameters.tInputsBounds;
			%
			tController.fIntegralConstant						= tParameters.fIntegralConstant;
			tController.fProportionalConstant					= tParameters.fProportionalConstant;
			tController.fDerivativeConstant						= tParameters.fDerivativeConstant;
			tController.fTemperatureReference					= tParameters.fTemperatureReference;
			tController.fValueToDesaturateTheIntegralAction		= tParameters.fValueToDesaturateTheIntegralAction;
			tController.bUseRadiators							= tParameters.bUseRadiators;
			%
			tController.fIntegrationOfTheTemperatureError		= 0;
			tController.fLastTemperatureError					= 0;
			%
		end;% default constructor
		%
	end %
	%
	methods (Static)
		%
		fActuationCommand										= tController.radiator_control(	afTemperatureOfTheRoom,			 ...
																								TEMPERATURE_REFERENCE,			 ...
																								fPIConstantA,					 ...
																								fPIConstantB );
		%
	end % end static methods
	%
end % classdef
