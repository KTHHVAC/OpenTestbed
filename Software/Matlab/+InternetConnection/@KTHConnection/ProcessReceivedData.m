function [ afValues, afTimes ] = ProcessReceivedData( tConnection, iSignalID, iDeviceID )
	%
	afTimes 	= [];
	afValues 	= [];
	%
	iNumberOfReceivedData	= numel( tConnection.tMessage.acData );
	iIndexOfCurrentData 	= Signal.GetIndexOfDatumInTCPPacket( iSignalID, iDeviceID );
	%
	try %
		%
		if( iNumberOfReceivedData == 0 )
			%
			warning('empty packet from the server');
			%
		elseif( iNumberOfReceivedData < iIndexOfCurrentData ) 
			%
			warning('Received an insufficient amount of data! Are you sure that this Signal ID %d / Device ID %d couple exists?', iSignalID , iDeviceID );
			%
		elseif( iIndexOfCurrentData < 0 ) % TODO TO FIX, TEMPORARY MANAGEMENT OF FORECASTS
			%
			iForecastHorizon = mod( iSignalID, 1000 );
			%
			% storage allocation
			afValues 	= zeros( iForecastHorizon, 1 );
			afTimes 	= zeros( iForecastHorizon, 1 );
			%
			% get the actual data
			for iHorizon = 1:iForecastHorizon;
				%
				iShift = 21 * (iHorizon);
				%
				afTimes(iHorizon) = Time.GregorianDateToJulianDate(											...
			   								str2double( char( tConnection.tMessage.acData{iShift + 2} ) ),	...
			   								str2double( char( tConnection.tMessage.acData{iShift + 3} ) ),	...
			   								str2double( char( tConnection.tMessage.acData{iShift + 4} ) ),	...
			   								str2double( char( tConnection.tMessage.acData{iShift + 5} ) ),	...
			   								str2double( char( tConnection.tMessage.acData{iShift + 6} ) ),	...
			   								str2double( char( tConnection.tMessage.acData{iShift + 7} ) )	);	
				%
				afValues(iHorizon) = str2double( char( tConnection.tMessage.acData{iShift - iIndexOfCurrentData} ) );
				%
			end;%
			%
		else%
			%
			afTimes 	= Time.GetCurrentJulianDate();
			afValues	= str2double( char( tConnection.tMessage.acData{iIndexOfCurrentData} ) );	
			%
		end;%
		%
	catch exception
		%
		warning('unable to process the received data');
		%
	end;% catch
	%
end %

