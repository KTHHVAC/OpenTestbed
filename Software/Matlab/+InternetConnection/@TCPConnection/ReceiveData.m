% Server behavior. Opens a TCP connection and listen until a given
% ammount of data is received:
% 1. Wait until data length is received (10 bytes, char[])
% 2. Wait until data is received
function ReceiveData( tConnection )
	%
	try %
		% 4. Wait for the response:
		% lenght  (1 * 10 bytes)
		% data	  (n * 10 bytes)
		% lenght  (7 * 10 bytes)
		% EndOfTx (1 * 10 bytes)
		iIndex = 1;
		achSize = '';
		tConnection.tMessage.acData = cell(1, 2); % cell[ message size, message ]

		if( strcmp( tConnection.tTcpIpClient.Status, 'closed' ) == 1 )
			% Connection should be open at this time
			tConnection.strError = 'TCPConnection.ReceiveData: TPC connection is closed';
			return;
			%
		end;%
		%
		iteration = 0;
		%
		while(( tConnection.tTcpIpClient.BytesAvailable == 0 ) && ( iteration < tConnection.iTimeOut ))
			% Waiting loop to Receive Data
			iteration = iteration + 1;
		end
		if( iteration == tConnection.iTimeOut )
			%
			tConnection.strError = 'TCPConnection.ReceiveData: No data received';
			return;
			%
		end;%
		%
		while( tConnection.tTcpIpClient.BytesAvailable > 0 )
			% 1. Read message size
			achAux = fread( tConnection.tTcpIpClient, tConnection.iMessageLength, 'uint8' )';
			for i = 1 : size(achAux, 2)
				achSize(i) = char(achAux(i));
			end
			% 2. Read message
			if(str2double(achSize) ~= 0)
				%Checks if the message is empty but still more bytes to be sent
				achAux = fread(tConnection.tTcpIpClient, str2double(achSize), 'uint8')';
				tConnection.tMessage.acData{iIndex} = achAux;
				iIndex = iIndex + 1;
			end
		end;% while there are still bits to be received
		%
		%
		% DEBUG
		if( tConnection.bPrintDebugInformation )
			%
			fprintf('TCP Connection: received the following message:\n');
			tConnection.DisplayReceivedMessage();
			%
		end;%
		%
	catch exception
		%
		tConnection.strError = strcat('TCPConnection.ReceiveData: ', exception.message);
		disp(tConnection.strError);
		warning('not able to complete the ReceiveData() method!');
		%
	end;%
	%
end % function



