% Client behavior. Opens a TCP connection and sends:
% 1. Send data length
% 2. Send data
%
function SendData( tConnection )
	%
	try %
		%
		% 1. Create the 10 byte message with the data size
		strSize = num2str( tConnection.tMessage.iSize );
		index = 0;
		strLengthOfTheMessage = char();
		%
		for iCharacterIndex = 1:tConnection.iMessageLength
			%
			strLengthOfTheMessage(iCharacterIndex) = ' ';
			%
			if(iCharacterIndex > tConnection.iMessageLength - size(strSize, 2))
				%
				index = index + 1;
				strLengthOfTheMessage(iCharacterIndex) = strSize(index);
				%
			end;%
			%
		end;%
		%
		% if the connection is open then generate an error
		if( strcmp( tConnection.tTcpIpClient.Status, 'closed' ) == 1 )
			%
			tConnection.strError = 'TCPConnection.SendData: TPC connection is closed';
			warning('Unable to send the data: the TCP connection is closed');
			%
		else%
			%
			% if instead it is open then send the data
			fwrite(tConnection.tTcpIpClient, strLengthOfTheMessage,   'uint8');
			fwrite(tConnection.tTcpIpClient, tConnection.tMessage.acData, 'uint8');
			%
		end;%
		%
		%
		% DEBUG
		if( tConnection.bPrintDebugInformation )
			%
			fprintf('TCP Connection: sent the following message:\n');
			tConnection.DisplaySentMessage();
			%
		end;%
		%
	catch exception
		%
		tConnection.strError = strcat('TCPConnection.SendData: ', exception.message);
		%
	end;%
	%
end %

